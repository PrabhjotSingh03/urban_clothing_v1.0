[{"D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\index.js":"1","D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\App.js":"2","D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\reportWebVitals.js":"3","D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\app\\store.js":"4","D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\pages\\Home.js":"5","D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\pages\\SignupPage.js":"6","D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\pages\\LoginPage.js":"7","D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\pages\\CartPage.js":"8","D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\pages\\ProductDetailPage.js":"9","D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\pages\\Checkout.js":"10","D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\features\\counter\\Counter.js":"11","D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\features\\product-list\\productSlice.js":"12","D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\features\\navbar\\Navbar.js":"13","D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\features\\checkout\\Checkout.js":"14","D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\features\\cart\\Cart.js":"15","D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\features\\product-list\\components\\ProductDetail.js":"16","D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\features\\product-list\\components\\ProductList.js":"17","D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\features\\counter\\counterSlice.js":"18","D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\features\\auth\\components\\Signup.js":"19","D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\features\\auth\\components\\Login.js":"20","D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\features\\product-list\\productAPI.js":"21","D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\app\\constants.js":"22","D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\features\\cart\\cartSlice.js":"23","D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\features\\counter\\counterAPI.js":"24","D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\features\\auth\\authSlice.js":"25","D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\features\\cart\\cartAPI.js":"26","D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\features\\auth\\authAPI.js":"27","D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\features\\auth\\components\\Protected.js":"28","D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\features\\order\\orderSlice.js":"29","D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\features\\order\\orderAPI.js":"30","D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\pages\\404.js":"31","D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\pages\\OrderSuccess.js":"32","D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\features\\user\\userSlice.js":"33","D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\features\\user\\userAPI.js":"34","D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\features\\user\\components\\UserOrders.js":"35","D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\pages\\UserOrderPage.js":"36","D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\features\\user\\components\\UserProfile.js":"37","D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\pages\\UserProfilePage.js":"38","D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\features\\auth\\components\\Logout.js":"39","D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\pages\\ForgotPasswordPage.js":"40","D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\features\\auth\\components\\ForgotPassword.js":"41","D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\pages\\AdminProductDetailPage.js":"42","D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\pages\\AdminHome.js":"43","D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\features\\auth\\components\\ProtectedAdmin.js":"44","D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\features\\admin\\components\\AdminProductList.js":"45","D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\features\\admin\\components\\AdminProductDetail.js":"46","D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\features\\admin\\components\\ProductForm.js":"47","D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\pages\\AdminProductFormPage.js":"48","D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\pages\\AdminOrdersPage.js":"49","D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\features\\admin\\components\\AdminOrders.js":"50","D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\features\\common\\Pagination.js":"51"},{"size":709,"mtime":1695948246185,"results":"52","hashOfConfig":"53"},{"size":3748,"mtime":1696990115356,"results":"54","hashOfConfig":"53"},{"size":375,"mtime":1695948246186,"results":"55","hashOfConfig":"53"},{"size":553,"mtime":1696655328941,"results":"56","hashOfConfig":"53"},{"size":358,"mtime":1696901899775,"results":"57","hashOfConfig":"53"},{"size":202,"mtime":1695948246186,"results":"58","hashOfConfig":"53"},{"size":196,"mtime":1695948246186,"results":"59","hashOfConfig":"53"},{"size":277,"mtime":1695948246186,"results":"60","hashOfConfig":"53"},{"size":350,"mtime":1695948246186,"results":"61","hashOfConfig":"53"},{"size":297,"mtime":1695948246186,"results":"62","hashOfConfig":"53"},{"size":385,"mtime":1695948246184,"results":"63","hashOfConfig":"53"},{"size":5144,"mtime":1696986323592,"results":"64","hashOfConfig":"53"},{"size":10652,"mtime":1697161129601,"results":"65","hashOfConfig":"53"},{"size":23498,"mtime":1697397545232,"results":"66","hashOfConfig":"53"},{"size":5460,"mtime":1697397833182,"results":"67","hashOfConfig":"53"},{"size":14848,"mtime":1697396785434,"results":"68","hashOfConfig":"53"},{"size":22514,"mtime":1697162046026,"results":"69","hashOfConfig":"53"},{"size":1287,"mtime":1695948246184,"results":"70","hashOfConfig":"53"},{"size":7085,"mtime":1696899626211,"results":"71","hashOfConfig":"53"},{"size":5714,"mtime":1696916195282,"results":"72","hashOfConfig":"53"},{"size":2466,"mtime":1696984483673,"results":"73","hashOfConfig":"53"},{"size":146,"mtime":1697150884813,"results":"74","hashOfConfig":"53"},{"size":3503,"mtime":1696899496019,"results":"75","hashOfConfig":"53"},{"size":219,"mtime":1695948246184,"results":"76","hashOfConfig":"53"},{"size":3195,"mtime":1697333161768,"results":"77","hashOfConfig":"53"},{"size":1630,"mtime":1696651781797,"results":"78","hashOfConfig":"53"},{"size":1436,"mtime":1697332974870,"results":"79","hashOfConfig":"53"},{"size":365,"mtime":1696141147733,"results":"80","hashOfConfig":"53"},{"size":2739,"mtime":1697158737791,"results":"81","hashOfConfig":"53"},{"size":1307,"mtime":1697155820203,"results":"82","hashOfConfig":"53"},{"size":1056,"mtime":1696618331497,"results":"83","hashOfConfig":"53"},{"size":1918,"mtime":1696651998770,"results":"84","hashOfConfig":"53"},{"size":2472,"mtime":1696890656640,"results":"85","hashOfConfig":"53"},{"size":856,"mtime":1697154470631,"results":"86","hashOfConfig":"53"},{"size":5453,"mtime":1697150168999,"results":"87","hashOfConfig":"53"},{"size":421,"mtime":1696713273307,"results":"88","hashOfConfig":"53"},{"size":25510,"mtime":1696981299028,"results":"89","hashOfConfig":"53"},{"size":429,"mtime":1696823981136,"results":"90","hashOfConfig":"53"},{"size":476,"mtime":1696897584300,"results":"91","hashOfConfig":"53"},{"size":250,"mtime":1696898200288,"results":"92","hashOfConfig":"53"},{"size":3667,"mtime":1696898168307,"results":"93","hashOfConfig":"53"},{"size":373,"mtime":1696901488266,"results":"94","hashOfConfig":"53"},{"size":339,"mtime":1696900782392,"results":"95","hashOfConfig":"53"},{"size":474,"mtime":1696899781885,"results":"96","hashOfConfig":"53"},{"size":22778,"mtime":1697150087071,"results":"97","hashOfConfig":"53"},{"size":14675,"mtime":1697148421957,"results":"98","hashOfConfig":"53"},{"size":17599,"mtime":1696987632200,"results":"99","hashOfConfig":"53"},{"size":341,"mtime":1696908560866,"results":"100","hashOfConfig":"53"},{"size":331,"mtime":1696990046252,"results":"101","hashOfConfig":"53"},{"size":8598,"mtime":1697160623384,"results":"102","hashOfConfig":"53"},{"size":4016,"mtime":1697154007056,"results":"103","hashOfConfig":"53"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},"1qvumxp",{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"107"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"107"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"107"},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151"},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155"},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159"},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163"},{"filePath":"164","messages":"165","suppressedMessages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"107"},{"filePath":"171","messages":"172","suppressedMessages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174"},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","suppressedMessages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"184","messages":"185","suppressedMessages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"187","messages":"188","suppressedMessages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","suppressedMessages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"107"},{"filePath":"194","messages":"195","suppressedMessages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197"},{"filePath":"198","messages":"199","suppressedMessages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"201","messages":"202","suppressedMessages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","suppressedMessages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","suppressedMessages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"210","messages":"211","suppressedMessages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"213","messages":"214","suppressedMessages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"107"},{"filePath":"217","messages":"218","suppressedMessages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","suppressedMessages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223"},{"filePath":"224","messages":"225","suppressedMessages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"227","messages":"228","suppressedMessages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230"},{"filePath":"231","messages":"232","suppressedMessages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"234","messages":"235","suppressedMessages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"237","messages":"238","suppressedMessages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"240","messages":"241","suppressedMessages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"107"},{"filePath":"244","messages":"245","suppressedMessages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"247","messages":"248","suppressedMessages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"250","messages":"251","suppressedMessages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"253","messages":"254","suppressedMessages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256"},{"filePath":"257","messages":"258","suppressedMessages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260"},{"filePath":"261","messages":"262","suppressedMessages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264"},{"filePath":"265","messages":"266","suppressedMessages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"268","messages":"269","suppressedMessages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"271","messages":"272","suppressedMessages":"273","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274"},{"filePath":"275","messages":"276","suppressedMessages":"277","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\index.js",[],[],[],"D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\App.js",["278","279","280","281","282"],[],"import React from \"react\";\r\nimport \"./App.css\";\r\nimport logo from \"./logo.svg\";\r\nimport { Counter } from \"./features/counter/Counter\";\r\nimport Home from \"./pages/Home\";\r\nimport LoginPage from \"./pages/LoginPage\";\r\nimport SignupPage from \"./pages/SignupPage\";\r\nimport CartPage from \"./pages/CartPage\";\r\nimport Checkout from \"./pages/Checkout\";\r\nimport ProductDetailPage from \"./pages/ProductDetailPage\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport { selectLoggedInUser } from \"./features/auth/authSlice\";\r\nimport OrderSuccess from \"./pages/OrderSuccess\";\r\nimport UserOrders from \"./features/user/components/UserOrders\";\r\n\r\nimport {\r\n  createBrowserRouter,\r\n  RouterProvider,\r\n  Route,\r\n  Link,\r\n} from \"react-router-dom\";\r\nimport Protected from \"./features/auth/components/Protected\";\r\nimport { fetchItemsByUserIdAsync } from \"./features/cart/cartSlice\";\r\nimport PageNotFound from \"./pages/404\";\r\nimport UserOrdersPage from \"./pages/UserOrderPage\";\r\nimport UserProfilePage from \"./pages/UserProfilePage\";\r\nimport { fetchLoggedInUserAsync } from \"./features/user/userSlice\";\r\nimport Logout from \"./features/auth/components/Logout\";\r\nimport ForgotPasswordPage from \"./pages/ForgotPasswordPage\";\r\nimport AdminHome from \"./pages/AdminHome\";\r\nimport ProtectedAdmin from \"./features/auth/components/ProtectedAdmin\";\r\nimport AdminProductDetailPage from \"./pages/AdminProductDetailPage\";\r\nimport AdminProductFormPage from \"./pages/AdminProductFormPage\";\r\nimport AdminOrdersPage from \"./pages/AdminOrdersPage\";\r\n\r\nconst router = createBrowserRouter([\r\n  {\r\n    path: \"/\",\r\n    element: <Protected><Home></Home></Protected>,\r\n  },\r\n  {\r\n    path: \"/login\",\r\n    element: <LoginPage></LoginPage>,\r\n  },\r\n  {\r\n    path: \"/signup\",\r\n    element: <SignupPage></SignupPage>,\r\n  },\r\n  {\r\n    path: \"/cart\",\r\n    element: <Protected><CartPage></CartPage></Protected>,\r\n  },\r\n  {\r\n    path: \"/checkout\",\r\n    element: <Protected><Checkout></Checkout></Protected>,\r\n  },\r\n  {\r\n    path: \"/productdetail/:id\",\r\n    element: <ProductDetailPage></ProductDetailPage>,\r\n  },\r\n  {\r\n    path: \"*\",\r\n    element: <PageNotFound></PageNotFound>,\r\n  },\r\n  {\r\n    path: \"/ordersuccess/:id\",\r\n    element: <Protected><OrderSuccess></OrderSuccess></Protected>,\r\n  },\r\n  {\r\n    path: \"/orders\",\r\n    element: <Protected><UserOrdersPage></UserOrdersPage></Protected>,\r\n  },\r\n  {\r\n    path: \"/profile\",\r\n    element: <Protected><UserProfilePage></UserProfilePage></Protected>,\r\n  },\r\n  {\r\n    path: \"/logout\",\r\n    element: <Logout></Logout>,\r\n  },\r\n  {\r\n    path: \"/forgotpassword\",\r\n    element: <ForgotPasswordPage></ForgotPasswordPage>,\r\n  },\r\n  // admin\r\n  {\r\n    path: \"/admin\",\r\n    element: <ProtectedAdmin><AdminHome></AdminHome></ProtectedAdmin>,\r\n  },\r\n  {\r\n    path: \"/admin/productdetail/:id\",\r\n    element: <ProtectedAdmin><AdminProductDetailPage></AdminProductDetailPage></ProtectedAdmin>,\r\n  },\r\n  {\r\n    path: \"/admin/productform\",\r\n    element: <ProtectedAdmin><AdminProductFormPage></AdminProductFormPage></ProtectedAdmin>,\r\n  },\r\n  {\r\n    path: \"/admin/productform/edit/:id\",\r\n    element: <ProtectedAdmin><AdminProductFormPage></AdminProductFormPage></ProtectedAdmin>,\r\n  },\r\n  {\r\n    path: \"/admin/orders\",\r\n    element: <ProtectedAdmin><AdminOrdersPage></AdminOrdersPage></ProtectedAdmin>,\r\n  },\r\n]);\r\n\r\nfunction App() {\r\n\r\n  const dispatch = useDispatch();\r\n  const user = useSelector(selectLoggedInUser);\r\n\r\n  useEffect(() => {\r\n    if(user){\r\n      dispatch(fetchItemsByUserIdAsync(user.id));\r\n      dispatch(fetchLoggedInUserAsync(user.id));\r\n    }\r\n  },[dispatch, user]);\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <RouterProvider router={router} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\reportWebVitals.js",[],[],"D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\app\\store.js",["283"],[],"import { configureStore, createReducer } from '@reduxjs/toolkit';\r\nimport productReducer from '../features/product-list/productSlice';\r\nimport authReducer from '../features/auth/authSlice';\r\nimport cartReducer from '../features/cart/cartSlice';\r\nimport orderReducer from '../features/order/orderSlice';\r\nimport userReducer from '../features/user/userSlice';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    product: productReducer,\r\n    auth: authReducer,\r\n    cart: cartReducer,\r\n    order: orderReducer,\r\n    user: userReducer,\r\n  },\r\n});\r\n","D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\pages\\Home.js",["284"],[],"import NavBar from \"../features/navbar/Navbar\";\r\nimport ProductList from \"../features/product-list/components/ProductList\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Home() {\r\n    return (  \r\n        <div>\r\n            <NavBar>\r\n                <ProductList></ProductList>\r\n            </NavBar>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\pages\\SignupPage.js",[],[],"D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\pages\\LoginPage.js",[],[],"D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\pages\\CartPage.js",[],[],"D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\pages\\ProductDetailPage.js",[],[],"D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\pages\\Checkout.js",[],[],"D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\features\\counter\\Counter.js",["285","286","287","288","289"],[],"import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  increment,\r\n  incrementAsync,\r\n  selectCount,\r\n} from './counterSlice';\r\n\r\nexport default function Counter() {\r\n  const count = useSelector(selectCount);\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n       \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\features\\product-list\\productSlice.js",[],[],"D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\features\\navbar\\Navbar.js",[],[],"D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\features\\checkout\\Checkout.js",["290","291","292","293","294","295","296"],[],"import { Link } from \"react-router-dom\";\r\nimport {\r\n  selectItems,\r\n  updateCartAsync,\r\n  deleteItemAsync,\r\n} from \"../cart/cartSlice\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport React, { useState, Fragment } from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { selectLoggedInUser, updateUserAsync } from \"../auth/authSlice\";\r\nimport { createOrderAsync } from \"../order/orderSlice\";\r\nimport { selectOrderCurrent } from \"../order/orderSlice\";\r\nimport { selectUserInfo } from \"../user/userSlice\";\r\nimport { discountedPrice } from \"../../app/constants\";\r\n\r\nfunction Checkout() {\r\n  const dispatch = useDispatch();\r\n  const [open, setOpen] = useState(true);\r\n  const items = useSelector(selectItems);\r\n  const totalitems = items.reduce((total, item) => item.quantity + total, 0);\r\n  const totalAmount = items.reduce(\r\n    (amount, item) => discountedPrice(item.product) * item.quantity + amount,\r\n    0\r\n  );\r\n  const handleQuantity = (e, item) => {\r\n    dispatch(updateCartAsync({ id:item.id, quantity: +e.target.value }));\r\n    console.log(e.target.value);\r\n  };\r\n\r\n  const handleRemove = (e, id) => {\r\n    dispatch(deleteItemAsync(id));\r\n  };\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    watch,\r\n    formState: { errors },\r\n    reset,\r\n  } = useForm();\r\n\r\n  const [selectedAddress, setSelectedAddress] = useState(null);\r\n  const [paymentMethod, setPaymentMethod] = useState(null);\r\n\r\n  const user = useSelector(selectUserInfo);\r\n\r\n  const handleAddress = (e) => {\r\n    setSelectedAddress(user.addresses[e.target.value]);\r\n    console.log(e.target.value);\r\n  };\r\n\r\n  const handlePayment = (e) => {\r\n    setPaymentMethod(e.target.value);\r\n    console.log(e.target.value);\r\n  };\r\n\r\n  const orderCurrent = useSelector(selectOrderCurrent);\r\n\r\n  const handleOrder = (e) => {\r\n    if (selectedAddress && paymentMethod) {\r\n      const order = {\r\n        items,\r\n        totalAmount,\r\n        totalitems,\r\n        user,\r\n        selectedAddress,\r\n        paymentMethod,\r\n        status: \"pending\",\r\n      };\r\n      dispatch(createOrderAsync(order));\r\n    } else {\r\n      alert(\"Please select an address and payment method\");\r\n    }\r\n  };\r\n    return (\r\n      <>\r\n        {!items.length && <Navigate to=\"/\" replace={true}></Navigate>}\r\n        {orderCurrent && (\r\n          <Navigate\r\n            to={`/ordersuccess/${orderCurrent.id}`}\r\n            replace={true}\r\n          ></Navigate>\r\n        )}\r\n        <div className=\"mx-auto max-w-5xl px-6 py-6 sm:px-6 lg:px-8\">\r\n          <div className=\"grid grid-cols-1 gap-x-8 gap-y-10 lg:grid-cols-6\">\r\n            <div className=\"lg:col-span-3\">\r\n              <form\r\n                className=\"bg-white px-5\"\r\n                noValidate\r\n                onSubmit={handleSubmit((data) => {\r\n                  console.log(data);\r\n                  dispatch(\r\n                    updateUserAsync({\r\n                      ...user,\r\n                      addresses: [...user.addresses, data],\r\n                    })\r\n                  );\r\n                  reset();\r\n                })}\r\n              >\r\n                <div className=\"space-y-1 py-6\">\r\n                  <div className=\"border-b border-gray-900/10 pb-8\">\r\n                    <h2 className=\"flex flex-1 items-end justify-between text-2xl font-semibold leading-7 text-gray-900\">\r\n                      Personal Information\r\n                    </h2>\r\n                    <p className=\"flex flex-1 items-end justify-between mt-1 text-sm leading-6 text-gray-600\">\r\n                      Use a permanent address where you can receive your order.\r\n                    </p>\r\n\r\n                    <div className=\"mt-10 grid grid-cols-1 gap-x-6 gap-y-4 sm:grid-cols-6\">\r\n                      <div className=\"sm:col-span-full\">\r\n                        <label\r\n                          htmlFor=\"name\"\r\n                          className=\"flex flex-1 items-end justify-between block text-sm font-medium leading-6 text-gray-900\"\r\n                        >\r\n                          Full Name\r\n                        </label>\r\n                        <div className=\"mt-2\">\r\n                          <input\r\n                            type=\"text\"\r\n                            {...register(\"name\", {\r\n                              required: \"Name is required\",\r\n                            })}\r\n                            id=\"name\"\r\n                            className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"col-span-full\">\r\n                        <label\r\n                          htmlFor=\"email\"\r\n                          className=\"flex flex-1 items-end justify-between block text-sm font-medium leading-6 text-gray-900\"\r\n                        >\r\n                          Email address\r\n                        </label>\r\n                        <div className=\"mt-2\">\r\n                          <input\r\n                            id=\"email\"\r\n                            {...register(\"email\", {\r\n                              required: \"Email is required\",\r\n                            })}\r\n                            type=\"email\"\r\n                            className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"col-span-full\">\r\n                        <label\r\n                          htmlFor=\"phone\"\r\n                          className=\"flex flex-1 items-end justify-between block text-sm font-medium leading-6 text-gray-900\"\r\n                        >\r\n                          Phone\r\n                        </label>\r\n                        <div className=\"mt-2\">\r\n                          <input\r\n                            id=\"phone\"\r\n                            {...register(\"phone\", {\r\n                              required: \"Phone Number is required\",\r\n                            })}\r\n                            type=\"tel\"\r\n                            className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"col-span-full\">\r\n                        <label\r\n                          htmlFor=\"country\"\r\n                          className=\"flex flex-1 items-end justify-between block text-sm font-medium leading-6 text-gray-900\"\r\n                        >\r\n                          Country\r\n                        </label>\r\n                        <div className=\"mt-2\">\r\n                          <select\r\n                            id=\"country\"\r\n                            {...register(\"country\", {\r\n                              required: \"Country is required\",\r\n                            })}\r\n                            className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\r\n                          >\r\n                            <option>Choose One</option>\r\n                            <option>United States</option>\r\n                            <option>Canada</option>\r\n                          </select>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"col-span-full\">\r\n                        <label\r\n                          htmlFor=\"street-address\"\r\n                          className=\"flex flex-1 items-end justify-between block text-sm font-medium leading-6 text-gray-900\"\r\n                        >\r\n                          Street address\r\n                        </label>\r\n                        <div className=\"mt-2\">\r\n                          <input\r\n                            type=\"text\"\r\n                            {...register(\"street\", {\r\n                              required: \"Street is required\",\r\n                            })}\r\n                            id=\"street\"\r\n                            className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"sm:col-span-2 sm:col-start-1\">\r\n                        <label\r\n                          htmlFor=\"city\"\r\n                          className=\"flex flex-1 items-end justify-between block text-sm font-medium leading-6 text-gray-900\"\r\n                        >\r\n                          City\r\n                        </label>\r\n                        <div className=\"mt-2\">\r\n                          <input\r\n                            type=\"text\"\r\n                            {...register(\"city\", {\r\n                              required: \"City is required\",\r\n                            })}\r\n                            id=\"city\"\r\n                            className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"sm:col-span-2\">\r\n                        <label\r\n                          htmlFor=\"state\"\r\n                          className=\"flex flex-1 items-end justify-between block text-sm font-medium leading-6 text-gray-900\"\r\n                        >\r\n                          State / Province\r\n                        </label>\r\n                        <div className=\"mt-2\">\r\n                          <input\r\n                            type=\"text\"\r\n                            {...register(\"state\", {\r\n                              required: \"Province is required\",\r\n                            })}\r\n                            id=\"state\"\r\n                            className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"sm:col-span-2\">\r\n                        <label\r\n                          htmlFor=\"postalcode\"\r\n                          className=\"flex flex-1 items-end justify-between block text-sm font-medium leading-6 text-gray-900\"\r\n                        >\r\n                          Postal code\r\n                        </label>\r\n                        <div className=\"mt-2\">\r\n                          <input\r\n                            type=\"text\"\r\n                            {...register(\"postalcode\", {\r\n                              required: \"Postal Code is required\",\r\n                            })}\r\n                            id=\"postalcode\"\r\n                            className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"mt-6 flex items-center justify-end gap-x-6\">\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"text-sm font-semibold leading-6 text-gray-900\"\r\n                      >\r\n                        Reset\r\n                      </button>\r\n                      <button\r\n                        type=\"submit\"\r\n                        className=\"rounded-md bg-indigo-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\"\r\n                      >\r\n                        Add Address\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"border-b border-gray-900/10 pb-12 py-4\">\r\n                    <h2 className=\"flex flex-1 items-end justify-between text-base font-semibold leading-7 text-gray-900\">\r\n                      Address\r\n                    </h2>\r\n                    <p className=\"flex flex-1 items-end justify-between mt-1 text-sm leading-6 text-gray-600\">\r\n                      Choose From Existing address\r\n                    </p>\r\n                    <ul\r\n                      role=\"list\"\r\n                      className=\"divide-y divide-gray-100 border-solid border-2 border-gray-200\"\r\n                    >\r\n                      {user.addresses.map((address, index) => (\r\n                        <li\r\n                          key={index}\r\n                          className=\"flex justify-between gap-x-6 px-5 py-5 border-solid border-2 border-gray-200\"\r\n                        >\r\n                          <div className=\"flex min-w-0 gap-x-4\">\r\n                            <input\r\n                              onChange={handleAddress}\r\n                              value={index}\r\n                              name=\"address\"\r\n                              type=\"radio\"\r\n                              className=\"h-4 w-4 border-gray-300 text-indigo-600 focus:ring-indigo-600\"\r\n                            />\r\n                            <div className=\"min-w-0 flex-auto\">\r\n                              <p className=\"text-sm font-semibold leading-6 text-gray-900\">\r\n                                Name: {address.name}\r\n                              </p>\r\n                              <p className=\"mt-1 truncate text-xs leading-5 text-gray-500\">\r\n                                Street: {address.street}\r\n                              </p>\r\n                              <p className=\"text-sm leading-6 text-gray-900\">\r\n                                City: {address.city}\r\n                              </p>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"hidden shrink-0 sm:flex sm:flex-col sm:items-end\">\r\n                            <p className=\"text-sm leading-6 text-gray-900\">\r\n                              Postal Code: {address.postalcode}\r\n                            </p>\r\n                            <p className=\"text-sm leading-6 text-gray-900\">\r\n                              Country: {address.country}\r\n                            </p>\r\n                            <p className=\"text-sm leading-6 text-gray-900\">\r\n                              Province: {address.state}\r\n                            </p>\r\n                            <p className=\"text-sm leading-6 text-gray-900\">\r\n                              Phone: {address.phone}\r\n                            </p>\r\n                          </div>\r\n                        </li>\r\n                      ))}\r\n                    </ul>\r\n\r\n                    <div className=\"mt-10 space-y-10\">\r\n                      <fieldset>\r\n                        <h3 className=\"flex flex-1 items-end justify-between mt-1 text-sm font-semibold leading-6 text-gray-900\">\r\n                          Payment Methods\r\n                        </h3>\r\n                        <p className=\"flex flex-1 items-end justify-between mt-1 text-sm leading-6 text-gray-600\">\r\n                          Choose One\r\n                        </p>\r\n                        <div className=\"mt-6 space-y-6\">\r\n                          <div className=\"flex items-center gap-x-3\">\r\n                            <input\r\n                              onChange={handlePayment}\r\n                              checked={paymentMethod === \"cash\"}\r\n                              value=\"cash\"\r\n                              id=\"cash\"\r\n                              name=\"payments\"\r\n                              type=\"radio\"\r\n                              className=\"h-4 w-4 border-gray-300 text-indigo-600 focus:ring-indigo-600\"\r\n                            />\r\n                            <label\r\n                              htmlFor=\"cash\"\r\n                              className=\"block text-sm font-medium leading-6 text-gray-900\"\r\n                            >\r\n                              Cash\r\n                            </label>\r\n                          </div>\r\n                          <div className=\"flex items-center gap-x-3\">\r\n                            <input\r\n                              onChange={handlePayment}\r\n                              checked={paymentMethod === \"card\"}\r\n                              value=\"card\"\r\n                              id=\"card\"\r\n                              name=\"payments\"\r\n                              type=\"radio\"\r\n                              className=\"h-4 w-4 border-gray-300 text-indigo-600 focus:ring-indigo-600\"\r\n                            />\r\n                            <label\r\n                              htmlFor=\"card\"\r\n                              className=\"block text-sm font-medium leading-6 text-gray-900\"\r\n                            >\r\n                              Credit/Debit Card\r\n                            </label>\r\n                          </div>\r\n                        </div>\r\n                      </fieldset>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n            <div className=\"lg:col-span-3\">\r\n              <div className=\"mx-auto bg-white max-w-2xl px-4 sm:px-6 lg:px-8\">\r\n                <div className=\"border-t border-gray-200 px-4 py-6 sm:px-6\">\r\n                  <h1 className=\"text-2xl font-bold tracking-tight text-gray-900\">\r\n                    Cart\r\n                  </h1>\r\n                  <div className=\"flow-root mt-10\">\r\n                    <ul role=\"list\" className=\"-my-6 divide-y divide-gray-200\">\r\n                      {items.map((item) => (\r\n                        <li key={item.id} className=\"flex py-6\">\r\n                          <div className=\"h-24 w-24 flex-shrink-0 overflow-hidden rounded-md border border-gray-200\">\r\n                            <img\r\n                              src={item.product.thumbnail}\r\n                              alt={item.product.title}\r\n                              className=\"h-full w-full object-cover object-center\"\r\n                            />\r\n                          </div>\r\n\r\n                          <div className=\"ml-4 flex flex-1 flex-col\">\r\n                            <div>\r\n                              <div className=\"flex justify-between text-base font-medium text-gray-900\">\r\n                                <h3>\r\n                                  <a href={item.product.id}>{item.product.title}</a>\r\n                                </h3>\r\n                                <p className=\"ml-4\">${discountedPrice(item.product)}</p>\r\n                              </div>\r\n                              <p className=\"flex flex-1 items-end justify-between text-sm text-gray-500\">\r\n                                {item.product.brand}\r\n                              </p>\r\n                            </div>\r\n                            <div className=\"flex flex-1 items-end justify-between text-sm\">\r\n                              <div className=\"text-gray-500\">\r\n                                <label\r\n                                  htmlFor=\"quantity\"\r\n                                  className=\"inline mr-5 text-sm font-medium leading-6 text-gray-900\"\r\n                                >\r\n                                  Qty\r\n                                </label>\r\n                                <select\r\n                                  onChange={(e) => handleQuantity(e, item)}\r\n                                  value={item.quantity}\r\n                                >\r\n                                  <option value=\"1\">1</option>\r\n                                  <option value=\"2\">2</option>\r\n                                  <option value=\"3\">3</option>\r\n                                  <option value=\"4\">4</option>\r\n                                </select>\r\n                              </div>\r\n\r\n                              <div className=\"flex\">\r\n                                <button\r\n                                  onClick={(e) => handleRemove(e, item.id)}\r\n                                  type=\"button\"\r\n                                  className=\"font-medium text-indigo-600 hover:text-indigo-500\"\r\n                                >\r\n                                  Remove\r\n                                </button>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </li>\r\n                      ))}\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"border-t border-gray-200 px-4 py-6 sm:px-6\">\r\n                  <div className=\"flex justify-between text-base font-medium text-gray-900 border-b border-gray-200 px-4 py-6 sm:px-6\">\r\n                    <p>Number of Items in Cart</p>\r\n                    <p>Items: {totalitems}</p>\r\n                  </div>\r\n                  <div className=\"flex justify-between text-base font-medium text-gray-900 px-4 py-6 sm:px-6\">\r\n                    <p>Subtotal</p>\r\n                    <p>${totalAmount}</p>\r\n                  </div>\r\n                  <p className=\"mt-0.5 text-sm text-gray-500\">\r\n                    Shipping and taxes calculated at checkout.\r\n                  </p>\r\n                  <div className=\"mt-6\">\r\n                    <div\r\n                      onClick={handleOrder}\r\n                      className=\"flex items-center cursor-pointer justify-center rounded-md border border-transparent bg-indigo-600 px-6 py-3 text-base font-medium text-white shadow-sm hover:bg-indigo-700\"\r\n                    >\r\n                      Order Now and Pay\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"mt-6 flex justify-center text-center text-sm text-gray-500\">\r\n                    <p>\r\n                      or\r\n                      <Link to=\"/\">\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"font-medium text-indigo-600 hover:text-indigo-500\"\r\n                        >\r\n                          Continue Shopping\r\n                          <span aria-hidden=\"true\"> &rarr;</span>\r\n                        </button>\r\n                      </Link>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n}\r\n\r\nexport default Checkout;\r\n","D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\features\\cart\\Cart.js",["297","298","299","300","301","302"],[],"import React, { useState, Fragment } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Dialog, Transition } from \"@headlessui/react\";\r\nimport { XMarkIcon } from \"@heroicons/react/24/outline\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { selectItems, updateCartAsync, deleteItemAsync } from \"../cart/cartSlice\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { discountedPrice } from \"../../app/constants\";\r\n\r\nexport default function Cart() {\r\n  const dispatch = useDispatch();\r\n  const [open, setOpen] = useState(true);\r\n  const items = useSelector(selectItems);\r\n  const totalitems = items.reduce((total, item) => item.quantity + total, 0);\r\n  const totalAmount = items.reduce(\r\n    (amount, item) => discountedPrice(item.product) * item.quantity + amount,\r\n    0\r\n  );\r\n  const handleQuantity = (e, item) => {\r\n    dispatch(updateCartAsync({ id:item.id, quantity: +e.target.value }));\r\n    console.log(e.target.value);\r\n  };\r\n\r\n  const handleRemove = (e, id) => {\r\n    dispatch(deleteItemAsync(id));\r\n  };\r\n\r\n  return (\r\n    <>\r\n    {!items.length && <Navigate to=\"/\" replace={true}></Navigate>}\r\n      <div className=\"mx-auto bg-white max-w-2xl px-4 sm:px-6 lg:px-8\">\r\n        <div className=\"border-t border-gray-200 px-4 py-6 sm:px-6\">\r\n          <h1 className=\"text-2xl font-bold tracking-tight text-gray-900\">\r\n            Cart\r\n          </h1>\r\n          <div className=\"flow-root mt-10\">\r\n            <ul role=\"list\" className=\"-my-6 divide-y divide-gray-200\">\r\n              {items.map((item) => (\r\n                <li key={item.id} className=\"flex py-6\">\r\n                  <div className=\"h-24 w-24 flex-shrink-0 overflow-hidden rounded-md border border-gray-200\">\r\n                    <img\r\n                      src={item.product.thumbnail}\r\n                      alt={item.product.title}\r\n                      className=\"h-full w-full object-cover object-center\"\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"ml-4 flex flex-1 flex-col\">\r\n                    <div>\r\n                      <div className=\"flex justify-between text-base font-medium text-gray-900\">\r\n                        <h3>\r\n                          <a href={item.product.id}>{item.product.title}</a>\r\n                        </h3>\r\n                        <p className=\"ml-4\">${discountedPrice(item.product)}</p>\r\n                      </div>\r\n                      <p className=\"flex flex-1 items-end justify-between text-sm text-gray-500\">\r\n                        {item.product.brand}\r\n                      </p>\r\n                    </div>\r\n                    <div className=\"flex flex-1 items-end justify-between text-sm\">\r\n                      <div className=\"text-gray-500\">\r\n                        <label\r\n                          htmlFor=\"quantity\"\r\n                          className=\"inline mr-5 text-sm font-medium leading-6 text-gray-900\"\r\n                        >\r\n                          Qty\r\n                        </label>\r\n                        <select onChange={(e) => handleQuantity(e, item)} value={item.quantity}>\r\n                          <option value=\"1\">1</option>\r\n                          <option value=\"2\">2</option>\r\n                          <option value=\"3\">3</option>\r\n                          <option value=\"4\">4</option>\r\n                        </select>\r\n                      </div>\r\n\r\n                      <div className=\"flex\">\r\n                        <button\r\n                        onClick={e=>handleRemove(e, item.id)}\r\n                          type=\"button\"\r\n                          className=\"font-medium text-indigo-600 hover:text-indigo-500\"\r\n                        >\r\n                          Remove\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"border-t border-gray-200 px-4 py-6 sm:px-6\">\r\n          <div className=\"flex justify-between text-base font-medium text-gray-900 border-b border-gray-200 px-4 py-6 sm:px-6\">\r\n            <p>Number of Items in Cart</p>\r\n            <p>Items: {totalitems}</p>\r\n          </div>\r\n          <div className=\"flex justify-between text-base font-medium text-gray-900 px-4 py-6 sm:px-6\">\r\n            <p>Subtotal</p>\r\n            <p>${totalAmount}</p>\r\n          </div>\r\n          <p className=\"mt-0.5 text-sm text-gray-500\">\r\n            Shipping and taxes calculated at checkout.\r\n          </p>\r\n          <div className=\"mt-6\">\r\n            <Link\r\n              to=\"/checkout\"\r\n              className=\"flex items-center justify-center rounded-md border border-transparent bg-indigo-600 px-6 py-3 text-base font-medium text-white shadow-sm hover:bg-indigo-700\"\r\n            >\r\n              Checkout\r\n            </Link>\r\n          </div>\r\n          <div className=\"mt-6 flex justify-center text-center text-sm text-gray-500\">\r\n            <p>\r\n              or\r\n              <Link to=\"/\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"font-medium text-indigo-600 hover:text-indigo-500\"\r\n                >\r\n                  Continue Shopping\r\n                  <span aria-hidden=\"true\"> &rarr;</span>\r\n                </button>\r\n              </Link>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\features\\product-list\\components\\ProductDetail.js",["303","304","305"],[],"import { useState, useEffect } from \"react\";\r\nimport { StarIcon } from \"@heroicons/react/20/solid\";\r\nimport { RadioGroup } from \"@headlessui/react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { selectProductById, fetchProductByIdAsync } from \"../productSlice\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { addToCartAsync } from \"../../cart/cartSlice\";\r\nimport { selectLoggedInUser } from \"../../auth/authSlice\";\r\nimport { discountedPrice } from \"../../../app/constants\";\r\nimport { selectItems } from \"../../cart/cartSlice\";\r\n\r\nconst colors = [\r\n  { name: \"White\", class: \"bg-white\", selectedClass: \"ring-gray-400\" },\r\n  { name: \"Gray\", class: \"bg-gray-200\", selectedClass: \"ring-gray-400\" },\r\n  { name: \"Black\", class: \"bg-gray-900\", selectedClass: \"ring-gray-900\" },\r\n];\r\nconst sizes = [\r\n  { name: \"XXS\", inStock: false },\r\n  { name: \"XS\", inStock: true },\r\n  { name: \"S\", inStock: true },\r\n  { name: \"M\", inStock: true },\r\n  { name: \"L\", inStock: true },\r\n  { name: \"XL\", inStock: true },\r\n  { name: \"2XL\", inStock: true },\r\n  { name: \"3XL\", inStock: true },\r\n];\r\n\r\nconst highlights = [\r\n  \"Hand cut and sewn locally\",\r\n  \"Dyed with our proprietary colors\",\r\n  \"Pre-washed & pre-shrunk\",\r\n  \"Ultra-soft 100% cotton\",\r\n];\r\n\r\nfunction classNames(...classes) {\r\n  return classes.filter(Boolean).join(\" \");\r\n}\r\n\r\nexport default function ProductDetail() {\r\n  const [selectedColor, setSelectedColor] = useState(colors[0]);\r\n  const [selectedSize, setSelectedSize] = useState(sizes[2]);\r\n  const product = useSelector(selectProductById);\r\n  const dispatch = useDispatch();\r\n  const params = useParams();\r\n  const user = useSelector(selectLoggedInUser);\r\n  const items = useSelector(selectItems);\r\n\r\n  const handleCart = (e) => {\r\n    e.preventDefault();\r\n    if(items.findIndex((item)=> item.product.id === product.id)<0){\r\n      const newItem = { product: product.id, quantity: 1, user: user.id };\r\n      dispatch(addToCartAsync(newItem));\r\n    }else{\r\n      console.log('Item Already Exists');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchProductByIdAsync(params.id));\r\n  }, [dispatch, params.id]);\r\n\r\n  return (\r\n    <div className=\"bg-white\">\r\n      {product && (\r\n        <div className=\"pt-6\">\r\n          <nav aria-label=\"Breadcrumb\">\r\n            <ol\r\n              role=\"list\"\r\n              className=\"mx-auto flex max-w-2xl items-center space-x-2 px-4 sm:px-6 lg:max-w-7xl lg:px-8\"\r\n            >\r\n              {product.breadcrumbs &&\r\n                product.breadcrumbs.map((breadcrumb) => (\r\n                  <li key={breadcrumb.id}>\r\n                    <div className=\"flex items-center\">\r\n                      <a\r\n                        href={breadcrumb.href}\r\n                        className=\"mr-2 text-sm font-medium text-gray-900\"\r\n                      >\r\n                        {breadcrumb.name}\r\n                      </a>\r\n                      <svg\r\n                        width={16}\r\n                        height={20}\r\n                        viewBox=\"0 0 16 20\"\r\n                        fill=\"currentColor\"\r\n                        aria-hidden=\"true\"\r\n                        className=\"h-5 w-4 text-gray-300\"\r\n                      >\r\n                        <path d=\"M5.697 4.34L8.98 16.532h1.327L7.025 4.341H5.697z\" />\r\n                      </svg>\r\n                    </div>\r\n                  </li>\r\n                ))}\r\n              <li className=\"text-sm\">\r\n                <a\r\n                  href={product.href}\r\n                  aria-current=\"page\"\r\n                  className=\"font-medium text-gray-500 hover:text-gray-600\"\r\n                >\r\n                  {product.title}\r\n                </a>\r\n              </li>\r\n            </ol>\r\n          </nav>\r\n\r\n          {/* Image gallery */}\r\n          <div className=\"mx-auto mt-6 max-w-2xl sm:px-6 lg:grid lg:max-w-7xl lg:grid-cols-3 lg:gap-x-8 lg:px-8\">\r\n            <div className=\"aspect-h-4 aspect-w-3 hidden overflow-hidden rounded-lg lg:block\">\r\n              <img\r\n                src={product.images[0]}\r\n                alt={product.title}\r\n                className=\"h-full w-full object-cover object-center\"\r\n              />\r\n            </div>\r\n            <div className=\"hidden lg:grid lg:grid-cols-1 lg:gap-y-8\">\r\n              <div className=\"aspect-h-2 aspect-w-3 overflow-hidden rounded-lg\">\r\n                <img\r\n                  src={product.images[1]}\r\n                  alt={product.title}\r\n                  className=\"h-full w-full object-cover object-center\"\r\n                />\r\n              </div>\r\n              <div className=\"aspect-h-2 aspect-w-3 overflow-hidden rounded-lg\">\r\n                <img\r\n                  src={product.images[2]}\r\n                  alt={product.title}\r\n                  className=\"h-full w-full object-cover object-center\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"aspect-h-5 aspect-w-4 lg:aspect-h-4 lg:aspect-w-3 sm:overflow-hidden sm:rounded-lg\">\r\n              <img\r\n                src={product.images[3]}\r\n                alt={product.title}\r\n                className=\"h-full w-full object-cover object-center\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* Product info */}\r\n          <div className=\"mx-auto max-w-2xl px-4 pb-16 pt-10 sm:px-6 lg:grid lg:max-w-7xl lg:grid-cols-3 lg:grid-rows-[auto,auto,1fr] lg:gap-x-8 lg:px-8 lg:pb-24 lg:pt-16\">\r\n            <div className=\"lg:col-span-2 lg:border-r lg:border-gray-200 lg:pr-8\">\r\n              <h1 className=\"text-2xl font-bold tracking-tight text-gray-900 sm:text-3xl\">\r\n                {product.title}\r\n              </h1>\r\n            </div>\r\n\r\n            {/* Options */}\r\n            <div className=\"mt-4 lg:row-span-3 lg:mt-0\">\r\n              <h2 className=\"sr-only\">Product information</h2>\r\n              <p className=\"text-3xl tracking-tight text-gray-900\">\r\n                ${discountedPrice(product)}\r\n              </p>\r\n              <p className=\"text-3xl line-through tracking-tight text-gray-900\">\r\n                ${product.price}\r\n              </p>\r\n\r\n              {/* Reviews */}\r\n              <div className=\"mt-6\">\r\n                <h3 className=\"sr-only\">Reviews</h3>\r\n                <div className=\"flex items-center\">\r\n                  <div className=\"flex items-center\">\r\n                    {[0, 1, 2, 3, 4].map((rating) => (\r\n                      <StarIcon\r\n                        key={rating}\r\n                        className={classNames(\r\n                          product.rating > rating\r\n                            ? \"text-gray-900\"\r\n                            : \"text-gray-200\",\r\n                          \"h-5 w-5 flex-shrink-0\"\r\n                        )}\r\n                        aria-hidden=\"true\"\r\n                      />\r\n                    ))}\r\n                  </div>\r\n                  <p className=\"sr-only\">{product.rating} out of 5 stars</p>\r\n                </div>\r\n              </div>\r\n\r\n              <form className=\"mt-10\">\r\n                {/* Colors */}\r\n                <div>\r\n                  <h3 className=\"text-sm font-medium text-gray-900\">Color</h3>\r\n\r\n                  <RadioGroup\r\n                    value={selectedColor}\r\n                    onChange={setSelectedColor}\r\n                    className=\"mt-4\"\r\n                  >\r\n                    <RadioGroup.Label className=\"sr-only\">\r\n                      Choose a color\r\n                    </RadioGroup.Label>\r\n                    <div className=\"flex items-center space-x-3\">\r\n                      {colors.map((color) => (\r\n                        <RadioGroup.Option\r\n                          key={color.name}\r\n                          value={color}\r\n                          className={({ active, checked }) =>\r\n                            classNames(\r\n                              color.selectedClass,\r\n                              active && checked ? \"ring ring-offset-1\" : \"\",\r\n                              !active && checked ? \"ring-2\" : \"\",\r\n                              \"relative -m-0.5 flex cursor-pointer items-center justify-center rounded-full p-0.5 focus:outline-none\"\r\n                            )\r\n                          }\r\n                        >\r\n                          <RadioGroup.Label as=\"span\" className=\"sr-only\">\r\n                            {color.name}\r\n                          </RadioGroup.Label>\r\n                          <span\r\n                            aria-hidden=\"true\"\r\n                            className={classNames(\r\n                              color.class,\r\n                              \"h-8 w-8 rounded-full border border-black border-opacity-10\"\r\n                            )}\r\n                          />\r\n                        </RadioGroup.Option>\r\n                      ))}\r\n                    </div>\r\n                  </RadioGroup>\r\n                </div>\r\n\r\n                {/* Sizes */}\r\n                <div className=\"mt-10\">\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <h3 className=\"text-sm font-medium text-gray-900\">Size</h3>\r\n                    <a\r\n                      href=\"#\"\r\n                      className=\"text-sm font-medium text-indigo-600 hover:text-indigo-500\"\r\n                    >\r\n                      Size guide\r\n                    </a>\r\n                  </div>\r\n\r\n                  <RadioGroup\r\n                    value={selectedSize}\r\n                    onChange={setSelectedSize}\r\n                    className=\"mt-4\"\r\n                  >\r\n                    <RadioGroup.Label className=\"sr-only\">\r\n                      Choose a size\r\n                    </RadioGroup.Label>\r\n                    <div className=\"grid grid-cols-4 gap-4 sm:grid-cols-8 lg:grid-cols-4\">\r\n                      {sizes.map((size) => (\r\n                        <RadioGroup.Option\r\n                          key={size.name}\r\n                          value={size}\r\n                          disabled={!size.inStock}\r\n                          className={({ active }) =>\r\n                            classNames(\r\n                              size.inStock\r\n                                ? \"cursor-pointer bg-white text-gray-900 shadow-sm\"\r\n                                : \"cursor-not-allowed bg-gray-50 text-gray-200\",\r\n                              active ? \"ring-2 ring-indigo-500\" : \"\",\r\n                              \"group relative flex items-center justify-center rounded-md border py-3 px-4 text-sm font-medium uppercase hover:bg-gray-50 focus:outline-none sm:flex-1 sm:py-6\"\r\n                            )\r\n                          }\r\n                        >\r\n                          {({ active, checked }) => (\r\n                            <>\r\n                              <RadioGroup.Label as=\"span\">\r\n                                {size.name}\r\n                              </RadioGroup.Label>\r\n                              {size.inStock ? (\r\n                                <span\r\n                                  className={classNames(\r\n                                    active ? \"border\" : \"border-2\",\r\n                                    checked\r\n                                      ? \"border-indigo-500\"\r\n                                      : \"border-transparent\",\r\n                                    \"pointer-events-none absolute -inset-px rounded-md\"\r\n                                  )}\r\n                                  aria-hidden=\"true\"\r\n                                />\r\n                              ) : (\r\n                                <span\r\n                                  aria-hidden=\"true\"\r\n                                  className=\"pointer-events-none absolute -inset-px rounded-md border-2 border-gray-200\"\r\n                                >\r\n                                  <svg\r\n                                    className=\"absolute inset-0 h-full w-full stroke-2 text-gray-200\"\r\n                                    viewBox=\"0 0 100 100\"\r\n                                    preserveAspectRatio=\"none\"\r\n                                    stroke=\"currentColor\"\r\n                                  >\r\n                                    <line\r\n                                      x1={0}\r\n                                      y1={100}\r\n                                      x2={100}\r\n                                      y2={0}\r\n                                      vectorEffect=\"non-scaling-stroke\"\r\n                                    />\r\n                                  </svg>\r\n                                </span>\r\n                              )}\r\n                            </>\r\n                          )}\r\n                        </RadioGroup.Option>\r\n                      ))}\r\n                    </div>\r\n                  </RadioGroup>\r\n                </div>\r\n\r\n                <button\r\n                  onClick={handleCart}\r\n                  type=\"submit\"\r\n                  className=\"mt-10 flex w-full items-center justify-center rounded-md border border-transparent bg-indigo-600 px-8 py-3 text-base font-medium text-white hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2\"\r\n                >\r\n                  Add to Cart\r\n                </button>\r\n              </form>\r\n            </div>\r\n\r\n            <div className=\"py-10 lg:col-span-2 lg:col-start-1 lg:border-r lg:border-gray-200 lg:pb-16 lg:pr-8 lg:pt-6\">\r\n              {/* Description and details */}\r\n              <div>\r\n                <h3 className=\"sr-only\">Description</h3>\r\n\r\n                <div className=\"space-y-6\">\r\n                  <p className=\"text-base text-gray-900\">\r\n                    {product.description}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"mt-10\">\r\n                <h3 className=\"text-sm font-medium text-gray-900\">\r\n                  Highlights\r\n                </h3>\r\n\r\n                <div className=\"mt-4\">\r\n                  <ul role=\"list\" className=\"list-disc space-y-2 pl-4 text-sm\">\r\n                    {highlights.map((highlight) => (\r\n                      <li key={highlight} className=\"text-gray-400\">\r\n                        <span className=\"text-gray-600\">{highlight}</span>\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"mt-10\">\r\n                <h2 className=\"text-sm font-medium text-gray-900\">Details</h2>\r\n\r\n                <div className=\"mt-4 space-y-6\">\r\n                  <p className=\"text-sm text-gray-600\">{product.description}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\features\\product-list\\components\\ProductList.js",["306","307","308","309","310"],[],"import React, { useState, Fragment, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  fetchAllProductsAsync,\r\n  selectAllProducts,\r\n  fetchProductsByFiltersAsync,\r\n  selectTotalItems,\r\n  selectBrands,\r\n  selectCategories,\r\n  fetchBrandsAsync,\r\n  fetchCategoriesAsync,\r\n} from \"../productSlice\";\r\nimport { Dialog, Disclosure, Menu, Transition } from \"@headlessui/react\";\r\nimport { XMarkIcon } from \"@heroicons/react/24/outline\";\r\nimport {\r\n  ChevronLeftIcon,\r\n  ChevronRightIcon,\r\n  StarIcon,\r\n} from \"@heroicons/react/20/solid\";\r\nimport {\r\n  ChevronDownIcon,\r\n  FunnelIcon,\r\n  MinusIcon,\r\n  PlusIcon,\r\n  Squares2X2Icon,\r\n} from \"@heroicons/react/20/solid\";\r\nimport { handler } from \"@tailwindcss/aspect-ratio\";\r\nimport { ITEMS_PER_PAGE } from \"../../../app/constants\";\r\nimport { discountedPrice } from \"../../../app/constants\";\r\nimport Pagination from \"../../common/Pagination\";\r\n\r\nconst sortOptions = [\r\n  { name: \"Best Rating\", sort: \"rating\", current: false },\r\n  { name: \"Price: Low to High\", sort: \"price\", order: \"asc\", current: false },\r\n  { name: \"Price: High to Low\", sort: \"price\", order: \"desc\", current: false },\r\n];\r\n\r\nfunction classNames(...classes) {\r\n  return classes.filter(Boolean).join(\" \");\r\n}\r\n\r\nexport default function ProductList() {\r\n  const dispatch = useDispatch();\r\n  const products = useSelector(selectAllProducts);\r\n  const brands = useSelector(selectBrands);\r\n  const categories = useSelector(selectCategories);\r\n  const totalItems = useSelector(selectTotalItems);\r\n  const filters = [\r\n    {\r\n      id: \"category\",\r\n      name: \"Category\",\r\n      options: categories,\r\n    },\r\n    {\r\n      id: \"brand\",\r\n      name: \"Brands\",\r\n      options: brands,\r\n    },\r\n  ];\r\n\r\n  const [filter, setFilter] = useState({});\r\n  const [sort, setSort] = useState({});\r\n  const [mobileFiltersOpen, setMobileFiltersOpen] = useState(false);\r\n  const [page, setPage] = useState(1);\r\n\r\n  const handleFilter = (e, section, option) => {\r\n    console.log(e.target.checked);\r\n    const newFilter = { ...filter };\r\n    if (e.target.checked) {\r\n      if (newFilter[section.id]) {\r\n        newFilter[section.id].push(option.value);\r\n      } else {\r\n        newFilter[section.id] = [option.value];\r\n      }\r\n    } else {\r\n      const index = newFilter[section.id].findIndex(\r\n        (el) => el === option.value\r\n      );\r\n      if (index !== -1) {\r\n        delete newFilter[section.id][index];\r\n      }\r\n    }\r\n    console.log({ newFilter });\r\n    setFilter(newFilter);\r\n  };\r\n\r\n  const handleSort = (e, option) => {\r\n    const sort = { _sort: option.sort, _order: option.order };\r\n    console.log({ sort });\r\n    setSort(sort);\r\n  };\r\n\r\n  const handlePage = (page) => {\r\n    console.log({ page });\r\n    setPage(page);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const pagination = { _page: page, _limit: ITEMS_PER_PAGE };\r\n    dispatch(fetchProductsByFiltersAsync({ filter, sort, pagination }));\r\n  }, [dispatch, filter, sort, page]);\r\n\r\n  useEffect(() => {\r\n    setPage(1);\r\n  }, [totalItems, sort]);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchBrandsAsync());\r\n    dispatch(fetchCategoriesAsync());\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"relative overflow-hidden bg-white\">\r\n        <div className=\"pb-80 pt-16 sm:pb-40 sm:pt-24 lg:pb-48 lg:pt-40\">\r\n          <div className=\"relative mx-auto max-w-7xl px-4 sm:static sm:px-6 lg:px-8\">\r\n            <div className=\"sm:max-w-lg\">\r\n              <h1 className=\"text-4xl font-bold tracking-tight text-gray-900 sm:text-6xl\">\r\n                Summer styles are finally here\r\n              </h1>\r\n              <p className=\"mt-4 text-xl text-gray-500\">\r\n                This year, our new summer collection will shelter you from the\r\n                harsh elements of a world that doesn't care if you live or die.\r\n              </p>\r\n            </div>\r\n            <div>\r\n              <div className=\"mt-10\">\r\n                {/* Decorative image grid */}\r\n                <div\r\n                  aria-hidden=\"true\"\r\n                  className=\"pointer-events-none lg:absolute lg:inset-y-0 lg:mx-auto lg:w-full lg:max-w-7xl\"\r\n                >\r\n                  <div className=\"absolute transform sm:left-1/2 sm:top-0 sm:translate-x-8 lg:left-1/2 lg:top-1/2 lg:-translate-y-1/2 lg:translate-x-8\">\r\n                    <div className=\"flex items-center space-x-6 lg:space-x-8\">\r\n                      <div className=\"grid flex-shrink-0 grid-cols-1 gap-y-6 lg:gap-y-8\">\r\n                        <div className=\"h-64 w-44 overflow-hidden rounded-lg sm:opacity-0 lg:opacity-100\">\r\n                          <img\r\n                            src=\"https://tailwindui.com/img/ecommerce-images/home-page-03-hero-image-tile-01.jpg\"\r\n                            alt=\"\"\r\n                            className=\"h-full w-full object-cover object-center\"\r\n                          />\r\n                        </div>\r\n                        <div className=\"h-64 w-44 overflow-hidden rounded-lg\">\r\n                          <img\r\n                            src=\"https://tailwindui.com/img/ecommerce-images/home-page-03-hero-image-tile-02.jpg\"\r\n                            alt=\"\"\r\n                            className=\"h-full w-full object-cover object-center\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"grid flex-shrink-0 grid-cols-1 gap-y-6 lg:gap-y-8\">\r\n                        <div className=\"h-64 w-44 overflow-hidden rounded-lg\">\r\n                          <img\r\n                            src=\"https://tailwindui.com/img/ecommerce-images/home-page-03-hero-image-tile-03.jpg\"\r\n                            alt=\"\"\r\n                            className=\"h-full w-full object-cover object-center\"\r\n                          />\r\n                        </div>\r\n                        <div className=\"h-64 w-44 overflow-hidden rounded-lg\">\r\n                          <img\r\n                            src=\"https://tailwindui.com/img/ecommerce-images/home-page-03-hero-image-tile-04.jpg\"\r\n                            alt=\"\"\r\n                            className=\"h-full w-full object-cover object-center\"\r\n                          />\r\n                        </div>\r\n                        <div className=\"h-64 w-44 overflow-hidden rounded-lg\">\r\n                          <img\r\n                            src=\"https://tailwindui.com/img/ecommerce-images/home-page-03-hero-image-tile-05.jpg\"\r\n                            alt=\"\"\r\n                            className=\"h-full w-full object-cover object-center\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"grid flex-shrink-0 grid-cols-1 gap-y-6 lg:gap-y-8\">\r\n                        <div className=\"h-64 w-44 overflow-hidden rounded-lg\">\r\n                          <img\r\n                            src=\"https://tailwindui.com/img/ecommerce-images/home-page-03-hero-image-tile-06.jpg\"\r\n                            alt=\"\"\r\n                            className=\"h-full w-full object-cover object-center\"\r\n                          />\r\n                        </div>\r\n                        <div className=\"h-64 w-44 overflow-hidden rounded-lg\">\r\n                          <img\r\n                            src=\"https://tailwindui.com/img/ecommerce-images/home-page-03-hero-image-tile-07.jpg\"\r\n                            alt=\"\"\r\n                            className=\"h-full w-full object-cover object-center\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <div className=\"bg-white\">\r\n          <div>\r\n            {/* Mobile filter dialog */}\r\n            <MobileFilter\r\n              handleFilter={handleFilter}\r\n              mobileFiltersOpen={mobileFiltersOpen}\r\n              setMobileFiltersOpen={setMobileFiltersOpen}\r\n              filters={filters}\r\n            ></MobileFilter>\r\n\r\n            <main className=\"mx-auto max-w-7xl px-4 sm:px-6 lg:px-8 products\">\r\n              <div className=\"flex items-baseline justify-between border-b border-gray-200 pb-6 pt-24\">\r\n                <h1 className=\"text-4xl font-bold tracking-tight text-gray-900\">\r\n                  All Products\r\n                </h1>\r\n\r\n                <div className=\"flex items-center\">\r\n                  <Menu as=\"div\" className=\"relative inline-block text-left\">\r\n                    <div>\r\n                      <Menu.Button className=\"group inline-flex justify-center text-sm font-medium text-gray-700 hover:text-gray-900\">\r\n                        Sort\r\n                        <ChevronDownIcon\r\n                          className=\"-mr-1 ml-1 h-5 w-5 flex-shrink-0 text-gray-400 group-hover:text-gray-500\"\r\n                          aria-hidden=\"true\"\r\n                        />\r\n                      </Menu.Button>\r\n                    </div>\r\n\r\n                    <Transition\r\n                      as={Fragment}\r\n                      enter=\"transition ease-out duration-100\"\r\n                      enterFrom=\"transform opacity-0 scale-95\"\r\n                      enterTo=\"transform opacity-100 scale-100\"\r\n                      leave=\"transition ease-in duration-75\"\r\n                      leaveFrom=\"transform opacity-100 scale-100\"\r\n                      leaveTo=\"transform opacity-0 scale-95\"\r\n                    >\r\n                      <Menu.Items className=\"absolute right-0 z-10 mt-2 w-40 origin-top-right rounded-md bg-white shadow-2xl ring-1 ring-black ring-opacity-5 focus:outline-none\">\r\n                        <div className=\"py-1\">\r\n                          {sortOptions.map((option) => (\r\n                            <Menu.Item key={option.name}>\r\n                              {({ active }) => (\r\n                                <p\r\n                                  onClick={(e) => handleSort(e, option)}\r\n                                  className={classNames(\r\n                                    option.current\r\n                                      ? \"font-medium text-gray-900\"\r\n                                      : \"text-gray-500\",\r\n                                    active ? \"bg-gray-100\" : \"\",\r\n                                    \"block px-4 py-2 text-sm\"\r\n                                  )}\r\n                                >\r\n                                  {option.name}\r\n                                </p>\r\n                              )}\r\n                            </Menu.Item>\r\n                          ))}\r\n                        </div>\r\n                      </Menu.Items>\r\n                    </Transition>\r\n                  </Menu>\r\n\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"-m-2 ml-5 p-2 text-gray-400 hover:text-gray-500 sm:ml-7\"\r\n                  >\r\n                    <span className=\"sr-only\">View grid</span>\r\n                    <Squares2X2Icon className=\"h-5 w-5\" aria-hidden=\"true\" />\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"-m-2 ml-4 p-2 text-gray-400 hover:text-gray-500 sm:ml-6 lg:hidden\"\r\n                    onClick={() => setMobileFiltersOpen(true)}\r\n                  >\r\n                    <span className=\"sr-only\">Filters</span>\r\n                    <FunnelIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              <section\r\n                aria-labelledby=\"products-heading\"\r\n                className=\"pb-24 pt-6\"\r\n              >\r\n                <h2 id=\"products-heading\" className=\"sr-only\">\r\n                  Products\r\n                </h2>\r\n\r\n                <div className=\"grid grid-cols-1 gap-x-8 gap-y-10 lg:grid-cols-4\">\r\n                  {/* Filters */}\r\n                  <DesktopFilter\r\n                    handleFilter={handleFilter}\r\n                    filters={filters}\r\n                  ></DesktopFilter>\r\n\r\n                  {/* Product grid */}\r\n                  <div className=\"lg:col-span-3\">\r\n                    {/*Product List*/}\r\n                    <ProductGrid products={products}></ProductGrid>\r\n                  </div>\r\n                  {/* Product Grid End */}\r\n                </div>\r\n              </section>\r\n              {/* Section of product and filter end */}\r\n              <Pagination\r\n                page={page}\r\n                setPage={setPage}\r\n                handlePage={handlePage}\r\n                totalItems={totalItems}\r\n              ></Pagination>\r\n            </main>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction MobileFilter({\r\n  mobileFiltersOpen,\r\n  setMobileFiltersOpen,\r\n  handleFilter,\r\n  filters,\r\n}) {\r\n  return (\r\n    <Transition.Root show={mobileFiltersOpen} as={Fragment}>\r\n      <Dialog\r\n        as=\"div\"\r\n        className=\"relative z-40 lg:hidden\"\r\n        onClose={setMobileFiltersOpen}\r\n      >\r\n        <Transition.Child\r\n          as={Fragment}\r\n          enter=\"transition-opacity ease-linear duration-300\"\r\n          enterFrom=\"opacity-0\"\r\n          enterTo=\"opacity-100\"\r\n          leave=\"transition-opacity ease-linear duration-300\"\r\n          leaveFrom=\"opacity-100\"\r\n          leaveTo=\"opacity-0\"\r\n        >\r\n          <div className=\"fixed inset-0 bg-black bg-opacity-25\" />\r\n        </Transition.Child>\r\n\r\n        <div className=\"fixed inset-0 z-40 flex\">\r\n          <Transition.Child\r\n            as={Fragment}\r\n            enter=\"transition ease-in-out duration-300 transform\"\r\n            enterFrom=\"translate-x-full\"\r\n            enterTo=\"translate-x-0\"\r\n            leave=\"transition ease-in-out duration-300 transform\"\r\n            leaveFrom=\"translate-x-0\"\r\n            leaveTo=\"translate-x-full\"\r\n          >\r\n            <Dialog.Panel className=\"relative ml-auto flex h-full w-full max-w-xs flex-col overflow-y-auto bg-white py-4 pb-12 shadow-xl\">\r\n              <div className=\"flex items-center justify-between px-4\">\r\n                <h2 className=\"text-lg font-medium text-gray-900\">Filters</h2>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"-mr-2 flex h-10 w-10 items-center justify-center rounded-md bg-white p-2 text-gray-400\"\r\n                  onClick={() => setMobileFiltersOpen(false)}\r\n                >\r\n                  <span className=\"sr-only\">Close menu</span>\r\n                  <XMarkIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\r\n                </button>\r\n              </div>\r\n\r\n              {/* Filters */}\r\n              <form className=\"mt-4 border-t border-gray-200\">\r\n                {filters.map((section) => (\r\n                  <Disclosure\r\n                    as=\"div\"\r\n                    key={section.id}\r\n                    className=\"border-t border-gray-200 px-4 py-6\"\r\n                  >\r\n                    {({ open }) => (\r\n                      <>\r\n                        <h3 className=\"-mx-2 -my-3 flow-root\">\r\n                          <Disclosure.Button className=\"flex w-full items-center justify-between bg-white px-2 py-3 text-gray-400 hover:text-gray-500\">\r\n                            <span className=\"font-medium text-gray-900\">\r\n                              {section.name}\r\n                            </span>\r\n                            <span className=\"ml-6 flex items-center\">\r\n                              {open ? (\r\n                                <MinusIcon\r\n                                  className=\"h-5 w-5\"\r\n                                  aria-hidden=\"true\"\r\n                                />\r\n                              ) : (\r\n                                <PlusIcon\r\n                                  className=\"h-5 w-5\"\r\n                                  aria-hidden=\"true\"\r\n                                />\r\n                              )}\r\n                            </span>\r\n                          </Disclosure.Button>\r\n                        </h3>\r\n                        <Disclosure.Panel className=\"pt-6\">\r\n                          <div className=\"space-y-6\">\r\n                            {section.options.map((option, optionIdx) => (\r\n                              <div\r\n                                key={option.value}\r\n                                className=\"flex items-center\"\r\n                              >\r\n                                <input\r\n                                  id={`filter-mobile-${section.id}-${optionIdx}`}\r\n                                  name={`${section.id}[]`}\r\n                                  defaultValue={option.value}\r\n                                  type=\"checkbox\"\r\n                                  defaultChecked={option.checked}\r\n                                  onChange={(e) =>\r\n                                    handleFilter(e, section, option)\r\n                                  }\r\n                                  className=\"h-4 w-4 rounded border-gray-300 text-indigo-600 focus:ring-indigo-500\"\r\n                                />\r\n                                <label\r\n                                  htmlFor={`filter-mobile-${section.id}-${optionIdx}`}\r\n                                  className=\"ml-3 min-w-0 flex-1 text-gray-500\"\r\n                                >\r\n                                  {option.label}\r\n                                </label>\r\n                              </div>\r\n                            ))}\r\n                          </div>\r\n                        </Disclosure.Panel>\r\n                      </>\r\n                    )}\r\n                  </Disclosure>\r\n                ))}\r\n              </form>\r\n            </Dialog.Panel>\r\n          </Transition.Child>\r\n        </div>\r\n      </Dialog>\r\n    </Transition.Root>\r\n  );\r\n}\r\n\r\nfunction DesktopFilter({ handleFilter, filters }) {\r\n  return (\r\n    <form className=\"hidden lg:block\">\r\n      {filters.map((section) => (\r\n        <Disclosure\r\n          as=\"div\"\r\n          key={section.id}\r\n          className=\"border-b border-gray-200 py-6\"\r\n        >\r\n          {({ open }) => (\r\n            <>\r\n              <h3 className=\"-my-3 flow-root\">\r\n                <Disclosure.Button className=\"flex w-full items-center justify-between bg-white py-3 text-sm text-gray-400 hover:text-gray-500\">\r\n                  <span className=\"font-medium text-gray-900\">\r\n                    {section.name}\r\n                  </span>\r\n                  <span className=\"ml-6 flex items-center\">\r\n                    {open ? (\r\n                      <MinusIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\r\n                    ) : (\r\n                      <PlusIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\r\n                    )}\r\n                  </span>\r\n                </Disclosure.Button>\r\n              </h3>\r\n              <Disclosure.Panel className=\"pt-6\">\r\n                <div className=\"space-y-4\">\r\n                  {section.options.map((option, optionIdx) => (\r\n                    <div key={option.value} className=\"flex items-center\">\r\n                      <input\r\n                        id={`filter-${section.id}-${optionIdx}`}\r\n                        name={`${section.id}[]`}\r\n                        defaultValue={option.value}\r\n                        type=\"checkbox\"\r\n                        defaultChecked={option.checked}\r\n                        onChange={(e) => handleFilter(e, section, option)}\r\n                        className=\"h-4 w-4 rounded border-gray-300 text-indigo-600 focus:ring-indigo-500\"\r\n                      />\r\n                      <label\r\n                        htmlFor={`filter-${section.id}-${optionIdx}`}\r\n                        className=\"ml-3 text-sm text-gray-600\"\r\n                      >\r\n                        {option.label}\r\n                      </label>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </Disclosure.Panel>\r\n            </>\r\n          )}\r\n        </Disclosure>\r\n      ))}\r\n    </form>\r\n  );\r\n}\r\n\r\nfunction ProductGrid({ products }) {\r\n  return (\r\n    <div className=\"bg-white\">\r\n      <div className=\"mx-auto max-w-10xl px-4 py-0 sm:px-6 sm:py-0 lg:max-w-10xl lg:px-8\">\r\n        <div className=\"mt-6 grid grid-cols-1 gap-x-6 gap-y-10 sm:grid-cols-2 lg:grid-cols-3 xl:gap-x-8\">\r\n          {products.map((product) => (\r\n            <Link to={`/productdetail/${product.id}`} key={product.id}>\r\n              <div\r\n                key={product.id}\r\n                className=\"group relative border-solid border-2 p-1 border-gray-200\"\r\n              >\r\n                <div className=\"min-h-80 aspect-h-1 aspect-w-1 w-full overflow-hidden rounded-md bg-gray-200 lg:aspect-none group-hover:opacity-75 lg:h-60\">\r\n                  <img\r\n                    src={product.thumbnail}\r\n                    alt={product.title}\r\n                    className=\"h-full w-full object-cover object-center lg:h-full lg:w-full\"\r\n                  />\r\n                </div>\r\n                <div className=\"mt-4 flex justify-between\">\r\n                  <div>\r\n                    <h3 className=\"text-sm text-gray-700\">\r\n                      {/* <Link to={product.thumbnail}> */}\r\n                      <span aria-hidden=\"true\" className=\"absolute inset-0\" />\r\n                      {product.title}\r\n                      {/* </Link> */}\r\n                    </h3>\r\n                    <p className=\"mt-1 text-sm text-gray-500\">\r\n                      <StarIcon className=\"w-6 h-6 inline\"></StarIcon>\r\n                      <span className=\"align-bottom\">{product.rating}</span>\r\n                    </p>\r\n                  </div>\r\n                  <div>\r\n                    <p className=\"text-sm font-medium text-gray-900\">\r\n                      Now: ${discountedPrice(product)}\r\n                    </p>\r\n                    <p className=\"text-sm font-medium text-gray-400 line-through\">\r\n                      ${product.price}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n                {product.stock<=0 && (\r\n                  <div>\r\n                    <p className=\"text-sm text-red-500\">Out of Stock</p>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </Link>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\features\\counter\\counterSlice.js",[],[],"D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\features\\auth\\components\\Signup.js",["311","312","313","314"],[],"import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { increment, incrementAsync } from \"../authSlice\";\r\nimport { Link, Navigate } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { selectLoggedInUser, createUserAsync } from \"../authSlice\";\r\n\r\nexport default function Signup() {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    watch,\r\n    formState: { errors },\r\n  } = useForm();\r\n  const user = useSelector(selectLoggedInUser);\r\n\r\n  console.log(errors); // watch input value by passing the name of it\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <>\r\n        {user && <Navigate to=\"/\" replace={true}></Navigate>}\r\n          <div className=\"flex min-h-full flex-1 flex-col justify-center px-6 py-12 lg:px-8\">\r\n            <div className=\"sm:mx-auto sm:w-full sm:max-w-sm\">\r\n              <img\r\n                className=\"mx-auto h-10 w-auto\"\r\n                src=\"https://tailwindui.com/img/logos/mark.svg?color=indigo&shade=600\"\r\n                alt=\"Your Company\"\r\n              />\r\n              <h2 className=\"mt-10 text-center text-2xl font-bold leading-9 tracking-tight text-gray-900\">\r\n                Create an account\r\n              </h2>\r\n            </div>\r\n\r\n            <div className=\"mt-10 sm:mx-auto sm:w-full sm:max-w-sm\">\r\n              <form\r\n                noValidate\r\n                className=\"space-y-6\"\r\n                onSubmit={handleSubmit((data) => {\r\n                  dispatch(\r\n                    createUserAsync({\r\n                      email: data.email,\r\n                      password: data.password,\r\n                      addresses:[],\r\n                      role:\"user\",\r\n                    })\r\n                  );\r\n                  console.log(data);\r\n                })}\r\n              >\r\n                <div>\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <label\r\n                      htmlFor=\"email\"\r\n                      className=\"block text-sm font-medium leading-6 text-gray-900\"\r\n                    >\r\n                      Email address\r\n                    </label>\r\n                  </div>\r\n                  <div className=\"mt-2\">\r\n                    <input\r\n                      id=\"email\"\r\n                      {...register(\"email\", {\r\n                        required: \"Email is required\",\r\n                        pattern: {\r\n                          value:\r\n                            /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/g,\r\n                          message: \"Please enter a valid email address\",\r\n                        },\r\n                      })}\r\n                      type=\"email\"\r\n                      className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\r\n                    />\r\n                    {errors.email && (\r\n                      <p className=\"text-red-500\">{errors.email.message}</p>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <label\r\n                      htmlFor=\"password\"\r\n                      className=\"block text-sm font-medium leading-6 text-gray-900\"\r\n                    >\r\n                      Password\r\n                    </label>\r\n                    \r\n                  </div>\r\n                  <div className=\"mt-2\">\r\n                    <input\r\n                      id=\"password\"\r\n                      {...register(\"password\", {\r\n                        required: \"password is required\",\r\n                        pattern: {\r\n                          value:\r\n                            /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$/gm,\r\n                          message: `- at least 8 characters\r\n                        - must contain at least 1 uppercase letter, 1 lowercase letter, and 1 number\r\n                        - Can contain special characters`,\r\n                        },\r\n                      })}\r\n                      type=\"password\"\r\n                      className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\r\n                    />\r\n                    {errors.password && (\r\n                      <p className=\"text-red-500\">{errors.password.message}</p>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <label\r\n                      htmlFor=\"password\"\r\n                      className=\"block text-sm font-medium leading-6 text-gray-900\"\r\n                    >\r\n                      Confirm Password\r\n                    </label>\r\n                  </div>\r\n                  <div className=\"mt-2\">\r\n                    <input\r\n                      id=\"confirmPassword\"\r\n                      {...register(\"confirmPassword\", {\r\n                        required: \"password is required\",\r\n                        validate: (value, formValues) =>\r\n                          value === formValues.password ||\r\n                          \"Passwords do not match\",\r\n                      })}\r\n                      type=\"password\"\r\n                      className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\r\n                    />\r\n                    {errors.confirmPassword && (\r\n                      <p className=\"text-red-500\">\r\n                        {errors.confirmPassword.message}\r\n                      </p>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"flex w-full justify-center rounded-md bg-indigo-600 px-3 py-1.5 text-sm font-semibold leading-6 text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\"\r\n                  >\r\n                    Sign up\r\n                  </button>\r\n                </div>\r\n              </form>\r\n\r\n              <p className=\"mt-10 text-center text-sm text-gray-500\">\r\n                Already a member?{\" \"}\r\n                <Link\r\n                  to=\"/login\"\r\n                  className=\"font-semibold leading-6 text-indigo-600 hover:text-indigo-500\"\r\n                >\r\n                  Login\r\n                </Link>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\features\\auth\\components\\Login.js",["315","316","317","318"],[],"import React, { useState } from \"react\";\r\nimport { Link, Navigate } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { increment, incrementAsync, selectError, selectLoggedInUser } from \"../authSlice\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { checkUserAsync } from \"../authSlice\";\r\n\r\nexport default function Login() {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    watch,\r\n    formState: { errors },\r\n  } = useForm();\r\n  const error = useSelector(selectError);\r\n  const user = useSelector(selectLoggedInUser);\r\n\r\n  console.log(errors); // watch input value by passing the name of it\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <>\r\n        {user && <Navigate to=\"/\" replace={true}></Navigate>}\r\n          <div className=\"flex min-h-full flex-1 flex-col justify-center px-6 py-12 lg:px-8\">\r\n            <div className=\"sm:mx-auto sm:w-full sm:max-w-sm\">\r\n              <img\r\n                className=\"mx-auto h-10 w-auto\"\r\n                src=\"https://tailwindui.com/img/logos/mark.svg?color=indigo&shade=600\"\r\n                alt=\"Your Company\"\r\n              />\r\n              <h2 className=\"mt-10 text-center text-2xl font-bold leading-9 tracking-tight text-gray-900\">\r\n                Login to your account\r\n              </h2>\r\n            </div>\r\n\r\n            <div className=\"mt-10 sm:mx-auto sm:w-full sm:max-w-sm\">\r\n              <form\r\n                noValidate\r\n                onSubmit={handleSubmit((data) => {\r\n                  dispatch(\r\n                    checkUserAsync({\r\n                      email: data.email,\r\n                      password: data.password,\r\n                    })\r\n                  );\r\n                })}\r\n                className=\"space-y-6\"\r\n              >\r\n                <div>\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <label\r\n                      htmlFor=\"email\"\r\n                      className=\"block text-sm font-medium leading-6 text-gray-900\"\r\n                    >\r\n                      Email address\r\n                    </label>\r\n                  </div>\r\n                  <div className=\"mt-2\">\r\n                  <input\r\n                      id=\"email\"\r\n                      {...register(\"email\", {\r\n                        required: \"Email is required\",\r\n                        pattern: {\r\n                          value:\r\n                            /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/g,\r\n                          message: \"Please enter a valid email address\",\r\n                        },\r\n                      })}\r\n                      type=\"email\"\r\n                      className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\r\n                    />\r\n                    {errors.email && (\r\n                      <p className=\"text-red-500\">{errors.email.message}</p>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <label\r\n                      htmlFor=\"password\"\r\n                      className=\"block text-sm font-medium leading-6 text-gray-900\"\r\n                    >\r\n                      Password\r\n                    </label>\r\n                    <div className=\"text-sm\">\r\n                      <Link\r\n                        to=\"/forgotpassword\"\r\n                        className=\"font-semibold text-indigo-600 hover:text-indigo-500\"\r\n                      >\r\n                        Forgot password?\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"mt-2\">\r\n                  <input\r\n                      id=\"password\"\r\n                      {...register(\"password\", {\r\n                        required: \"password is required\",\r\n                      })}\r\n                      type=\"password\"\r\n                      className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\r\n                    />\r\n                    {errors.password && (\r\n                      <p className=\"text-red-500\">{errors.password.message}</p>\r\n                    )}\r\n                    {error && (\r\n                      <p className=\"text-red-500\">{error.message}</p>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"flex w-full justify-center rounded-md bg-indigo-600 px-3 py-1.5 text-sm font-semibold leading-6 text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\"\r\n                  >\r\n                    Login\r\n                  </button>\r\n                </div>\r\n              </form>\r\n\r\n              <p className=\"mt-10 text-center text-sm text-gray-500\">\r\n                Not a member?{\" \"}\r\n                <Link\r\n                  to=\"/signup\"\r\n                  className=\"font-semibold leading-6 text-indigo-600 hover:text-indigo-500\"\r\n                >\r\n                  Create An Account\r\n                </Link>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\features\\product-list\\productAPI.js",[],[],"D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\app\\constants.js",[],[],"D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\features\\cart\\cartSlice.js",[],[],"D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\features\\counter\\counterAPI.js",[],[],"D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\features\\auth\\authSlice.js",[],[],"D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\features\\cart\\cartAPI.js",["319"],[],"export function addToCart(item) {\r\n  return new Promise(async (resolve) => {\r\n    const response = await fetch(\"http://localhost:8000/cart\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(item),\r\n    });\r\n    const data = await response.json();\r\n    resolve({ data });\r\n  });\r\n}\r\n\r\nexport function fetchItemsByUserId(userId) {\r\n  return new Promise(async (resolve) => {\r\n    const response = await fetch(\"http://localhost:8000/cart?user=\" + userId);\r\n    const data = await response.json();\r\n    resolve({ data });\r\n  });\r\n}\r\n\r\nexport function updateCart(update) {\r\n  return new Promise(async (resolve) => {\r\n    const response = await fetch(\"http://localhost:8000/cart/\" + update.id, {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(update),\r\n    });\r\n    const data = await response.json();\r\n    resolve({ data });\r\n  });\r\n}\r\n\r\nexport function deleteItem(itemId) {\r\n  return new Promise(async (resolve) => {\r\n    const response = await fetch(\"http://localhost:8000/cart/\" + itemId, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n    const data = await response.json();\r\n    resolve({ data: { id: itemId } });\r\n  });\r\n}\r\n\r\nexport function cartReset(userId) {\r\n  return new Promise(async (resolve) => {\r\n    const response = await fetchItemsByUserId(userId);\r\n    const items = response.data;\r\n    for (let item of items) {\r\n      await deleteItem(item.id);\r\n    }\r\n    resolve({status:\"success\"});\r\n  });\r\n}\r\n","D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\features\\auth\\authAPI.js",["320"],[],"import { isRejected } from \"@reduxjs/toolkit\";\r\n\r\nexport function createUser(userData) {\r\n  return new Promise(async (resolve) => {\r\n    const response = await fetch(\"http://localhost:8000/auth/signup\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(userData),\r\n    });\r\n    const data = await response.json();\r\n    resolve({ data });\r\n  });\r\n}\r\n\r\nexport function checkUser(loginInfo) {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:8000/auth/login\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(loginInfo),\r\n      });\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        resolve({ data });\r\n      } else {\r\n        const error = await response.json();\r\n        reject(error);\r\n      }\r\n    } catch (error) {\r\n      reject(error);\r\n    }\r\n    // console.log({data});\r\n    // if(data.length){\r\n    //   if(password===data[0].password){\r\n    //     resolve({data:data[0]})\r\n    //   }else{\r\n    //     reject({message:'User not found'})\r\n    //   }\r\n    // }else{\r\n    //   reject({message:'User not found'})\r\n    // }\r\n  });\r\n}\r\n\r\nexport function signOut(userId) {\r\n  return new Promise(async (resolve) => {\r\n    resolve({ data: \"successfully signed out\" });\r\n  });\r\n}\r\n","D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\features\\auth\\components\\Protected.js",[],[],"D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\features\\order\\orderSlice.js",[],[],"D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\features\\order\\orderAPI.js",[],[],"D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\pages\\404.js",[],[],"D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\pages\\OrderSuccess.js",[],[],"D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\features\\user\\userSlice.js",["321"],[],"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport { fetchCount } from './userAPI';\r\nimport { fetchUserOrders, updateUser, fetchLoggedInUser } from './userAPI';\r\n\r\nconst initialState = {\r\n  userOrders: [],\r\n  status: 'idle',\r\n  userInfo: null,\r\n};\r\n\r\n\r\nexport const fetchUserOrdersAsync = createAsyncThunk(\r\n  'user/fetchUserOrders',\r\n  async (id) => {\r\n    const response = await fetchUserOrders(id);\r\n    // The value we return becomes the `fulfilled` action payload\r\n    return response.data;\r\n  }\r\n);\r\n\r\nexport const updateUserAsync = createAsyncThunk(\r\n  'user/updateUser',\r\n  async (id) => {\r\n    const response = await updateUser(id);\r\n    // The value we return becomes the `fulfilled` action payload\r\n    return response.data;\r\n  }\r\n);\r\n\r\nexport const fetchLoggedInUserAsync = createAsyncThunk(\r\n  'user/fetchLoggedInUser',\r\n  async (id) => {\r\n    const response = await fetchLoggedInUser(id);\r\n    // The value we return becomes the `fulfilled` action payload\r\n    return response.data;\r\n  }\r\n);\r\n\r\nexport const userSlice = createSlice({\r\n  name: 'user',\r\n  initialState,\r\n  // The `reducers` field lets us define reducers and generate associated actions\r\n  reducers: {\r\n    increment: (state) => {\r\n      state.value += 1;\r\n    },\r\n\r\n  },\r\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\r\n  // including actions generated by createAsyncThunk or in other slices.\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchUserOrdersAsync.pending, (state) => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(fetchUserOrdersAsync.fulfilled, (state, action) => {\r\n        state.status = 'idle';\r\n        state.userOrders = action.payload;\r\n      })\r\n      .addCase(updateUserAsync.pending, (state) => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(updateUserAsync.fulfilled, (state, action) => {\r\n        state.status = 'idle';\r\n        state.userOrders = action.payload;\r\n      })\r\n      .addCase(fetchLoggedInUserAsync.pending, (state) => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(fetchLoggedInUserAsync.fulfilled, (state, action) => {\r\n        state.status = 'idle';\r\n        state.userInfo = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { increment } = userSlice.actions;\r\nexport const selectOrdersOfUser = (state) => state.user.userOrders;\r\nexport default userSlice.reducer;\r\nexport const selectUserInfo = (state) => state.user.userInfo;","D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\features\\user\\userAPI.js",[],[],"D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\features\\user\\components\\UserOrders.js",["322","323","324","325"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { selectCount, selectUserInfo } from \"../userSlice\";\r\nimport { selectLoggedInUser } from \"../../auth/authSlice\";\r\nimport { fetchUserOrdersAsync } from \"../userSlice\";\r\nimport { selectOrdersOfUser } from \"../userSlice\";\r\nimport { discountedPrice } from \"../../../app/constants\";\r\n\r\nexport default function UserOrders() {\r\n  const dispatch = useDispatch();\r\n  const user = useSelector(selectUserInfo);\r\n  const orders = useSelector(selectOrdersOfUser);\r\n  useEffect(() => {\r\n    dispatch(fetchUserOrdersAsync(user.id));\r\n  }, [dispatch, user.id]);\r\n  return (\r\n    <div>\r\n      {orders.map((order, index) => (\r\n        <div key={index}>\r\n          <div className=\"mx-auto bg-white max-w-2xl px-4 sm:px-6 lg:px-8\">\r\n            <div className=\"border-t border-gray-200 px-4 py-6 sm:px-6\">\r\n              <h1 className=\"text-2xl font-bold tracking-tight text-gray-900\">\r\n                Order Id # {order.id}\r\n              </h1>\r\n              <h2 className=\"text-1xl font-bold tracking-tight text-red-900\">\r\n                Order Status: {order.status}\r\n              </h2>\r\n              <div className=\"flow-root mt-10\">\r\n                <ul role=\"list\" className=\"-my-6 divide-y divide-gray-200\">\r\n                  {order.items.map((item) => (\r\n                    <li key={item.id} className=\"flex py-6\">\r\n                      <div className=\"h-24 w-24 flex-shrink-0 overflow-hidden rounded-md border border-gray-200\">\r\n                        <img\r\n                          src={item.thumbnail}\r\n                          alt={item.title}\r\n                          className=\"h-full w-full object-cover object-center\"\r\n                        />\r\n                      </div>\r\n\r\n                      <div className=\"ml-4 flex flex-1 flex-col\">\r\n                        <div>\r\n                          <div className=\"flex justify-between text-base font-medium text-gray-900\">\r\n                            <h3>\r\n                              <a href={item.href}>{item.title}</a>\r\n                            </h3>\r\n                            <p className=\"ml-4\">${discountedPrice(item)}</p>\r\n                          </div>\r\n                          <p className=\"flex flex-1 items-end justify-between text-sm text-gray-500\">\r\n                            {item.brand}\r\n                          </p>\r\n                        </div>\r\n                        <div className=\"flex flex-1 items-end justify-between text-sm\">\r\n                          <div className=\"text-gray-500\">\r\n                            <label\r\n                              htmlFor=\"quantity\"\r\n                              className=\"inline mr-5 text-sm font-medium leading-6 text-gray-900\"\r\n                            >\r\n                              Quantity: {item.quantity}\r\n                            </label>\r\n                          </div>\r\n\r\n                          <div className=\"flex\"></div>\r\n                        </div>\r\n                      </div>\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"border-t border-gray-200 px-4 py-6 sm:px-6\">\r\n              <div className=\"flex justify-between text-base font-medium text-gray-900 border-b border-gray-200 px-4 py-6 sm:px-6\">\r\n                <p>Number of Items in Cart</p>\r\n                <p>Items: {order.totalitems}</p>\r\n              </div>\r\n              <div className=\"flex justify-between text-base font-medium text-gray-900 px-4 py-6 sm:px-6\">\r\n                <p>Subtotal</p>\r\n                <p>${order.totalAmount}</p>\r\n              </div>\r\n              <p className=\"mt-0.5 text-sm text-gray-500\">\r\n                Shipping Address:\r\n              </p>\r\n              <div className=\"flex justify-between gap-x-6 px-5 py-5 border-solid border-2 border-gray-200\">\r\n                <div className=\"flex min-w-0 gap-x-4\">\r\n                  \r\n                  <div className=\"min-w-0 flex-auto\">\r\n                    <p className=\"text-sm font-semibold leading-6 text-gray-900\">\r\n                      Name: {order.selectedAddress.name}\r\n                    </p>\r\n                    <p className=\"mt-1 truncate text-xs leading-5 text-gray-500\">\r\n                      Street: {order.selectedAddress.street}\r\n                    </p>\r\n                    <p className=\"text-sm leading-6 text-gray-900\">\r\n                      City: {order.selectedAddress.city}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"hidden shrink-0 sm:flex sm:flex-col sm:items-end\">\r\n                  <p className=\"text-sm leading-6 text-gray-900\">\r\n                    Postal Code: {order.selectedAddress.postalcode}\r\n                  </p>\r\n                  <p className=\"text-sm leading-6 text-gray-900\">\r\n                    Country: {order.selectedAddress.country}\r\n                  </p>\r\n                  <p className=\"text-sm leading-6 text-gray-900\">\r\n                    Province: {order.selectedAddress.state}\r\n                  </p>\r\n                  <p className=\"text-sm leading-6 text-gray-900\">\r\n                    Phone: {order.selectedAddress.phone}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\pages\\UserOrderPage.js",[],[],"D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\features\\user\\components\\UserProfile.js",["326","327","328","329"],[],"import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  selectCount,\r\n  selectUserInfo,\r\n  updateUserAsync,\r\n} from \"../userSlice\";\r\nimport { selectLoggedInUser } from \"../../auth/authSlice\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nexport default function ProfileUser() {\r\n  const dispatch = useDispatch();\r\n  const user = useSelector(selectUserInfo);\r\n\r\n  const editHandle = (updateAddress, index) => {\r\n    const newUser = { ...user, addresses: [...user.addresses] };\r\n    newUser.addresses.splice(index, 1, updateAddress);\r\n    dispatch(updateUserAsync(newUser));\r\n    setEditSelectedIndex(-1);\r\n  };\r\n\r\n  const [editSelectedIndex, setEditSelectedIndex] = useState(-1);\r\n  const [addAddressFormShow, setAddAddressFormShow] = useState(false);\r\n\r\n  const editHandleForm = (index) => {\r\n    setEditSelectedIndex(index);\r\n    const address = user.addresses[index];\r\n    setValue(\"name\", address.name);\r\n    setValue(\"email\", address.email);\r\n    setValue(\"phone\", address.phone);\r\n    setValue(\"country\", address.country);\r\n    setValue(\"street\", address.street);\r\n    setValue(\"city\", address.city);\r\n    setValue(\"state\", address.state);\r\n    setValue(\"postalcode\", address.postalcode);\r\n  };\r\n\r\n  const removeHandle = (e, index) => {\r\n    const newUser = { ...user, addresses: [...user.addresses] };\r\n    newUser.addresses.splice(index, 1);\r\n    dispatch(updateUserAsync(newUser));\r\n  };\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    watch,\r\n    formState: { errors },\r\n    reset,\r\n    setValue,\r\n  } = useForm();\r\n\r\n  const addHandle = (address) => {\r\n    const newUser = { ...user, addresses: [...user.addresses, address] };\r\n    dispatch(updateUserAsync(newUser));\r\n    setAddAddressFormShow(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"mx-auto bg-white max-w-2xl px-4 sm:px-6 lg:px-8\">\r\n        <div className=\"border-t border-gray-200 px-4 py-6 sm:px-6\">\r\n          <h1 className=\"text-2xl font-bold tracking-tight text-gray-900\">\r\n            Name: {user.name ? user.name : \"Guest\"}\r\n          </h1>\r\n          <h2 className=\"text-1xl font-bold tracking-tight text-red-900\">\r\n            Email: {user.email}\r\n          </h2>\r\n          {user.role === \"admin\" && <h2 className=\"text-1xl font-bold tracking-tight text-red-900\">\r\n            Role: {user.role}\r\n          </h2>}\r\n        </div>\r\n\r\n        <div className=\"border-t border-gray-200 px-4 py-6 sm:px-6\">\r\n          {/* Add Address Form */}\r\n          <button\r\n            onClick={(e) => {\r\n              setAddAddressFormShow(true);\r\n              setAddAddressFormShow(-1);\r\n            }}\r\n            type=\"submit\"\r\n            className=\"my-5 rounded-md bg-indigo-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\"\r\n          >\r\n            Add Address\r\n          </button>\r\n          {addAddressFormShow ? (\r\n            <form\r\n              className=\"bg-white px-5\"\r\n              noValidate\r\n              onSubmit={handleSubmit((data) => {\r\n                console.log(data);\r\n                addHandle(data);\r\n                reset();\r\n              })}\r\n            >\r\n              <div className=\"space-y-1 py-6\">\r\n                <div className=\"border-b border-gray-900/10 pb-8\">\r\n                  <h2 className=\"flex flex-1 items-end justify-between text-2xl font-semibold leading-7 text-gray-900\">\r\n                    Personal Information\r\n                  </h2>\r\n                  <p className=\"flex flex-1 items-end justify-between mt-1 text-sm leading-6 text-gray-600\">\r\n                    Use a permanent address where you can receive your order.\r\n                  </p>\r\n\r\n                  <div className=\"mt-10 grid grid-cols-1 gap-x-6 gap-y-4 sm:grid-cols-6\">\r\n                    <div className=\"sm:col-span-full\">\r\n                      <label\r\n                        htmlFor=\"name\"\r\n                        className=\"flex flex-1 items-end justify-between block text-sm font-medium leading-6 text-gray-900\"\r\n                      >\r\n                        Full Name\r\n                      </label>\r\n                      <div className=\"mt-2\">\r\n                        <input\r\n                          type=\"text\"\r\n                          {...register(\"name\", {\r\n                            required: \"Name is required\",\r\n                          })}\r\n                          id=\"name\"\r\n                          className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-span-full\">\r\n                      <label\r\n                        htmlFor=\"email\"\r\n                        className=\"flex flex-1 items-end justify-between block text-sm font-medium leading-6 text-gray-900\"\r\n                      >\r\n                        Email address\r\n                      </label>\r\n                      <div className=\"mt-2\">\r\n                        <input\r\n                          id=\"email\"\r\n                          {...register(\"email\", {\r\n                            required: \"Email is required\",\r\n                          })}\r\n                          type=\"email\"\r\n                          className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-span-full\">\r\n                      <label\r\n                        htmlFor=\"phone\"\r\n                        className=\"flex flex-1 items-end justify-between block text-sm font-medium leading-6 text-gray-900\"\r\n                      >\r\n                        Phone\r\n                      </label>\r\n                      <div className=\"mt-2\">\r\n                        <input\r\n                          id=\"phone\"\r\n                          {...register(\"phone\", {\r\n                            required: \"Phone Number is required\",\r\n                          })}\r\n                          type=\"tel\"\r\n                          className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-span-full\">\r\n                      <label\r\n                        htmlFor=\"country\"\r\n                        className=\"flex flex-1 items-end justify-between block text-sm font-medium leading-6 text-gray-900\"\r\n                      >\r\n                        Country\r\n                      </label>\r\n                      <div className=\"mt-2\">\r\n                        <select\r\n                          id=\"country\"\r\n                          {...register(\"country\", {\r\n                            required: \"Country is required\",\r\n                          })}\r\n                          className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\r\n                        >\r\n                          <option>Choose One</option>\r\n                          <option>United States</option>\r\n                          <option>Canada</option>\r\n                        </select>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-span-full\">\r\n                      <label\r\n                        htmlFor=\"street-address\"\r\n                        className=\"flex flex-1 items-end justify-between block text-sm font-medium leading-6 text-gray-900\"\r\n                      >\r\n                        Street address\r\n                      </label>\r\n                      <div className=\"mt-2\">\r\n                        <input\r\n                          type=\"text\"\r\n                          {...register(\"street\", {\r\n                            required: \"Street is required\",\r\n                          })}\r\n                          id=\"street\"\r\n                          className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"sm:col-span-2 sm:col-start-1\">\r\n                      <label\r\n                        htmlFor=\"city\"\r\n                        className=\"flex flex-1 items-end justify-between block text-sm font-medium leading-6 text-gray-900\"\r\n                      >\r\n                        City\r\n                      </label>\r\n                      <div className=\"mt-2\">\r\n                        <input\r\n                          type=\"text\"\r\n                          {...register(\"city\", {\r\n                            required: \"City is required\",\r\n                          })}\r\n                          id=\"city\"\r\n                          className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"sm:col-span-2\">\r\n                      <label\r\n                        htmlFor=\"state\"\r\n                        className=\"flex flex-1 items-end justify-between block text-sm font-medium leading-6 text-gray-900\"\r\n                      >\r\n                        State / Province\r\n                      </label>\r\n                      <div className=\"mt-2\">\r\n                        <input\r\n                          type=\"text\"\r\n                          {...register(\"state\", {\r\n                            required: \"Province is required\",\r\n                          })}\r\n                          id=\"state\"\r\n                          className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"sm:col-span-2\">\r\n                      <label\r\n                        htmlFor=\"postalcode\"\r\n                        className=\"flex flex-1 items-end justify-between block text-sm font-medium leading-6 text-gray-900\"\r\n                      >\r\n                        Postal code\r\n                      </label>\r\n                      <div className=\"mt-2\">\r\n                        <input\r\n                          type=\"text\"\r\n                          {...register(\"postalcode\", {\r\n                            required: \"Postal Code is required\",\r\n                          })}\r\n                          id=\"postalcode\"\r\n                          className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"mt-6 flex items-center justify-end gap-x-6\">\r\n                    <button\r\n                      type=\"submit\"\r\n                      className=\"rounded-md bg-indigo-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\"\r\n                    >\r\n                      Add Address\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          ) : null}\r\n\r\n          {/* All Address */}\r\n          <p className=\"mt-0.5 text-sm text-gray-500\">All Address:</p>\r\n          {user.addresses.map((address, index) => (\r\n            <div>\r\n              {editSelectedIndex === index ? (\r\n                <form\r\n                  className=\"bg-white px-5\"\r\n                  noValidate\r\n                  onSubmit={handleSubmit((data) => {\r\n                    console.log(data);\r\n                    editHandle(data, index);\r\n                    reset();\r\n                  })}\r\n                >\r\n                  <div className=\"space-y-1 py-6\">\r\n                    <div className=\"border-b border-gray-900/10 pb-8\">\r\n                      <h2 className=\"flex flex-1 items-end justify-between text-2xl font-semibold leading-7 text-gray-900\">\r\n                        Personal Information\r\n                      </h2>\r\n                      <p className=\"flex flex-1 items-end justify-between mt-1 text-sm leading-6 text-gray-600\">\r\n                        Use a permanent address where you can receive your\r\n                        order.\r\n                      </p>\r\n                      {/* Address Edit Form */}\r\n                      <div className=\"mt-10 grid grid-cols-1 gap-x-6 gap-y-4 sm:grid-cols-6\">\r\n                        <div className=\"sm:col-span-full\">\r\n                          <label\r\n                            htmlFor=\"name\"\r\n                            className=\"flex flex-1 items-end justify-between block text-sm font-medium leading-6 text-gray-900\"\r\n                          >\r\n                            Full Name\r\n                          </label>\r\n                          <div className=\"mt-2\">\r\n                            <input\r\n                              type=\"text\"\r\n                              {...register(\"name\", {\r\n                                required: \"Name is required\",\r\n                              })}\r\n                              id=\"name\"\r\n                              className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\r\n                            />\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-span-full\">\r\n                          <label\r\n                            htmlFor=\"email\"\r\n                            className=\"flex flex-1 items-end justify-between block text-sm font-medium leading-6 text-gray-900\"\r\n                          >\r\n                            Email address\r\n                          </label>\r\n                          <div className=\"mt-2\">\r\n                            <input\r\n                              id=\"email\"\r\n                              {...register(\"email\", {\r\n                                required: \"Email is required\",\r\n                              })}\r\n                              type=\"email\"\r\n                              className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\r\n                            />\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-span-full\">\r\n                          <label\r\n                            htmlFor=\"phone\"\r\n                            className=\"flex flex-1 items-end justify-between block text-sm font-medium leading-6 text-gray-900\"\r\n                          >\r\n                            Phone\r\n                          </label>\r\n                          <div className=\"mt-2\">\r\n                            <input\r\n                              id=\"phone\"\r\n                              {...register(\"phone\", {\r\n                                required: \"Phone Number is required\",\r\n                              })}\r\n                              type=\"tel\"\r\n                              className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\r\n                            />\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-span-full\">\r\n                          <label\r\n                            htmlFor=\"country\"\r\n                            className=\"flex flex-1 items-end justify-between block text-sm font-medium leading-6 text-gray-900\"\r\n                          >\r\n                            Country\r\n                          </label>\r\n                          <div className=\"mt-2\">\r\n                            <select\r\n                              id=\"country\"\r\n                              {...register(\"country\", {\r\n                                required: \"Country is required\",\r\n                              })}\r\n                              className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\r\n                            >\r\n                              <option>Choose One</option>\r\n                              <option>United States</option>\r\n                              <option>Canada</option>\r\n                            </select>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-span-full\">\r\n                          <label\r\n                            htmlFor=\"street-address\"\r\n                            className=\"flex flex-1 items-end justify-between block text-sm font-medium leading-6 text-gray-900\"\r\n                          >\r\n                            Street address\r\n                          </label>\r\n                          <div className=\"mt-2\">\r\n                            <input\r\n                              type=\"text\"\r\n                              {...register(\"street\", {\r\n                                required: \"Street is required\",\r\n                              })}\r\n                              id=\"street\"\r\n                              className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\r\n                            />\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"sm:col-span-2 sm:col-start-1\">\r\n                          <label\r\n                            htmlFor=\"city\"\r\n                            className=\"flex flex-1 items-end justify-between block text-sm font-medium leading-6 text-gray-900\"\r\n                          >\r\n                            City\r\n                          </label>\r\n                          <div className=\"mt-2\">\r\n                            <input\r\n                              type=\"text\"\r\n                              {...register(\"city\", {\r\n                                required: \"City is required\",\r\n                              })}\r\n                              id=\"city\"\r\n                              className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\r\n                            />\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"sm:col-span-2\">\r\n                          <label\r\n                            htmlFor=\"state\"\r\n                            className=\"flex flex-1 items-end justify-between block text-sm font-medium leading-6 text-gray-900\"\r\n                          >\r\n                            State / Province\r\n                          </label>\r\n                          <div className=\"mt-2\">\r\n                            <input\r\n                              type=\"text\"\r\n                              {...register(\"state\", {\r\n                                required: \"Province is required\",\r\n                              })}\r\n                              id=\"state\"\r\n                              className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\r\n                            />\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"sm:col-span-2\">\r\n                          <label\r\n                            htmlFor=\"postalcode\"\r\n                            className=\"flex flex-1 items-end justify-between block text-sm font-medium leading-6 text-gray-900\"\r\n                          >\r\n                            Postal code\r\n                          </label>\r\n                          <div className=\"mt-2\">\r\n                            <input\r\n                              type=\"text\"\r\n                              {...register(\"postalcode\", {\r\n                                required: \"Postal Code is required\",\r\n                              })}\r\n                              id=\"postalcode\"\r\n                              className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"mt-6 flex items-center justify-end gap-x-6\">\r\n                        <button\r\n                          onClick={(e) => setEditSelectedIndex(-1)}\r\n                          type=\"submit\"\r\n                          className=\"rounded-md px-3 py-2 text-sm font-semibold text-grey shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\"\r\n                        >\r\n                          Cancel\r\n                        </button>\r\n                        <button\r\n                          type=\"submit\"\r\n                          className=\"rounded-md bg-indigo-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\"\r\n                        >\r\n                          Edit Address\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              ) : null}\r\n              <div className=\"flex justify-between gap-x-6 px-5 py-5 border-solid border-2 border-gray-200\">\r\n                <div className=\"flex min-w-0 gap-x-4\">\r\n                  <div className=\"min-w-0 flex-auto\">\r\n                    <p className=\"text-sm font-semibold leading-6 text-gray-900\">\r\n                      Name: {address.name}\r\n                    </p>\r\n                    <p className=\"mt-1 truncate text-xs leading-5 text-gray-500\">\r\n                      Street: {address.street}\r\n                    </p>\r\n                    <p className=\"text-sm leading-6 text-gray-900\">\r\n                      City: {address.city}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"hidden shrink-0 sm:flex sm:flex-col sm:items-end\">\r\n                  <p className=\"text-sm leading-6 text-gray-900\">\r\n                    Postal Code: {address.postalcode}\r\n                  </p>\r\n                  <p className=\"text-sm leading-6 text-gray-900\">\r\n                    Country: {address.country}\r\n                  </p>\r\n                  <p className=\"text-sm leading-6 text-gray-900\">\r\n                    Province: {address.state}\r\n                  </p>\r\n                  <p className=\"text-sm leading-6 text-gray-900\">\r\n                    Phone: {address.phone}\r\n                  </p>\r\n                </div>\r\n                <div className=\"hidden shrink-0 sm:flex sm:flex-col sm:items-end\">\r\n                  <button\r\n                    onClick={(e) => editHandleForm(index)}\r\n                    type=\"button\"\r\n                    className=\"font-medium text-indigo-600 hover:text-indigo-500\"\r\n                  >\r\n                    Edit\r\n                  </button>\r\n\r\n                  <button\r\n                    onClick={(e) => removeHandle(e, index)}\r\n                    type=\"button\"\r\n                    className=\"font-medium text-indigo-600 hover:text-indigo-500\"\r\n                  >\r\n                    Remove\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\pages\\UserProfilePage.js",[],[],"D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\features\\auth\\components\\Logout.js",[],[],"D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\pages\\ForgotPasswordPage.js",[],[],"D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\features\\auth\\components\\ForgotPassword.js",["330","331","332","333"],[],"import React, { useState } from \"react\";\r\nimport { Link, Navigate } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { checkUserAsync } from \"../authSlice\";\r\n\r\nexport default function ForgotPassword() {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    watch,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  console.log(errors); // watch input value by passing the name of it\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <>\r\n          <div className=\"flex min-h-full flex-1 flex-col justify-center px-6 py-12 lg:px-8\">\r\n            <div className=\"sm:mx-auto sm:w-full sm:max-w-sm\">\r\n              <img\r\n                className=\"mx-auto h-10 w-auto\"\r\n                src=\"https://tailwindui.com/img/logos/mark.svg?color=indigo&shade=600\"\r\n                alt=\"Your Company\"\r\n              />\r\n              <h2 className=\"mt-10 text-center text-2xl font-bold leading-9 tracking-tight text-gray-900\">\r\n                Enter Your Email to Reset Password\r\n              </h2>\r\n            </div>\r\n\r\n            <div className=\"mt-10 sm:mx-auto sm:w-full sm:max-w-sm\">\r\n              <form\r\n                noValidate\r\n                onSubmit={handleSubmit((data) => {\r\n                  console.log(data);\r\n                })}\r\n                className=\"space-y-6\"\r\n              >\r\n                <div>\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <label\r\n                      htmlFor=\"email\"\r\n                      className=\"block text-sm font-medium leading-6 text-gray-900\"\r\n                    >\r\n                      Email address\r\n                    </label>\r\n                  </div>\r\n                  <div className=\"mt-2\">\r\n                    <input\r\n                      id=\"email\"\r\n                      {...register(\"email\", {\r\n                        required: \"Email is required\",\r\n                        pattern: {\r\n                          value:\r\n                            /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/g,\r\n                          message: \"Please enter a valid email address\",\r\n                        },\r\n                      })}\r\n                      type=\"email\"\r\n                      className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\r\n                    />\r\n                    {errors.email && (\r\n                      <p className=\"text-red-500\">{errors.email.message}</p>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"flex w-full justify-center rounded-md bg-indigo-600 px-3 py-1.5 text-sm font-semibold leading-6 text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\"\r\n                  >\r\n                    Send Email\r\n                  </button>\r\n                </div>\r\n              </form>\r\n\r\n              <p className=\"mt-10 text-center text-sm text-gray-500\">\r\n                Go to Login Page{\" \"}\r\n                <Link\r\n                  to=\"/login\"\r\n                  className=\"font-semibold leading-6 text-indigo-600 hover:text-indigo-500\"\r\n                >\r\n                  Login\r\n                </Link>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\pages\\AdminProductDetailPage.js",[],[],"D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\pages\\AdminHome.js",[],[],"D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\features\\auth\\components\\ProtectedAdmin.js",[],[],"D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\features\\admin\\components\\AdminProductList.js",["334","335","336"],[],"import React, { useState, Fragment, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  fetchAllProductsAsync,\r\n  selectAllProducts,\r\n  fetchProductsByFiltersAsync,\r\n  selectTotalItems,\r\n  selectBrands,\r\n  selectCategories,\r\n  fetchBrandsAsync,\r\n  fetchCategoriesAsync,\r\n} from \"../../product-list/productSlice\";\r\nimport { Dialog, Disclosure, Menu, Transition } from \"@headlessui/react\";\r\nimport { XMarkIcon } from \"@heroicons/react/24/outline\";\r\nimport {\r\n  ChevronLeftIcon,\r\n  ChevronRightIcon,\r\n  StarIcon,\r\n} from \"@heroicons/react/20/solid\";\r\nimport {\r\n  ChevronDownIcon,\r\n  FunnelIcon,\r\n  MinusIcon,\r\n  PlusIcon,\r\n  Squares2X2Icon,\r\n} from \"@heroicons/react/20/solid\";\r\nimport { handler } from \"@tailwindcss/aspect-ratio\";\r\nimport { ITEMS_PER_PAGE } from \"../../../app/constants\";\r\nimport { discountedPrice } from \"../../../app/constants\";\r\n\r\nconst sortOptions = [\r\n  { name: \"Best Rating\", sort: \"rating\", current: false },\r\n  { name: \"Price: Low to High\", sort: \"price\", order: \"asc\", current: false },\r\n  { name: \"Price: High to Low\", sort: \"price\", order: \"desc\", current: false },\r\n];\r\n\r\nfunction classNames(...classes) {\r\n  return classes.filter(Boolean).join(\" \");\r\n}\r\n\r\nexport default function AdminProductList() {\r\n  const dispatch = useDispatch();\r\n  const products = useSelector(selectAllProducts);\r\n  const brands = useSelector(selectBrands);\r\n  const categories = useSelector(selectCategories);\r\n  const totalItems = useSelector(selectTotalItems);\r\n  const filters = [\r\n    {\r\n      id: \"category\",\r\n      name: \"Category\",\r\n      options: categories,\r\n    },\r\n    {\r\n      id: \"brand\",\r\n      name: \"Brands\",\r\n      options: brands,\r\n    },\r\n  ];\r\n\r\n  const [filter, setFilter] = useState({});\r\n  const [sort, setSort] = useState({});\r\n  const [mobileFiltersOpen, setMobileFiltersOpen] = useState(false);\r\n  const [page, setPage] = useState(1);\r\n\r\n  const handleFilter = (e, section, option) => {\r\n    console.log(e.target.checked);\r\n    const newFilter = { ...filter };\r\n    if (e.target.checked) {\r\n      if (newFilter[section.id]) {\r\n        newFilter[section.id].push(option.value);\r\n      } else {\r\n        newFilter[section.id] = [option.value];\r\n      }\r\n    } else {\r\n      const index = newFilter[section.id].findIndex(\r\n        (el) => el === option.value\r\n      );\r\n      if (index !== -1) {\r\n        delete newFilter[section.id][index];\r\n      }\r\n    }\r\n    console.log({ newFilter });\r\n    setFilter(newFilter);\r\n  };\r\n\r\n  const handleSort = (e, option) => {\r\n    const sort = { _sort: option.sort, _order: option.order };\r\n    console.log({ sort });\r\n    setSort(sort);\r\n  };\r\n\r\n  const handlePage = (page) => {\r\n    console.log({ page });\r\n    setPage(page);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const pagination = { _page: page, _limit: ITEMS_PER_PAGE };\r\n    dispatch(fetchProductsByFiltersAsync({ filter, sort, pagination }));\r\n  }, [dispatch, filter, sort, page]);\r\n\r\n  useEffect(() => {\r\n    setPage(1);\r\n  }, [totalItems, sort]);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchBrandsAsync());\r\n    dispatch(fetchCategoriesAsync());\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <div className=\"bg-white\">\r\n          <div>\r\n            {/* Mobile filter dialog */}\r\n            <MobileFilter\r\n              handleFilter={handleFilter}\r\n              mobileFiltersOpen={mobileFiltersOpen}\r\n              setMobileFiltersOpen={setMobileFiltersOpen}\r\n              filters={filters}\r\n            ></MobileFilter>\r\n\r\n            <main className=\"mx-auto max-w-7xl px-4 sm:px-6 lg:px-8 products\">\r\n              <div className=\"flex items-baseline justify-between border-b border-gray-200 pb-6 pt-24\">\r\n                <h1 className=\"text-4xl font-bold tracking-tight text-gray-900\">\r\n                  All Products\r\n                </h1>\r\n\r\n                <div className=\"flex items-center\">\r\n                  <Menu as=\"div\" className=\"relative inline-block text-left\">\r\n                    <div>\r\n                      <Menu.Button className=\"group inline-flex justify-center text-sm font-medium text-gray-700 hover:text-gray-900\">\r\n                        Sort\r\n                        <ChevronDownIcon\r\n                          className=\"-mr-1 ml-1 h-5 w-5 flex-shrink-0 text-gray-400 group-hover:text-gray-500\"\r\n                          aria-hidden=\"true\"\r\n                        />\r\n                      </Menu.Button>\r\n                    </div>\r\n\r\n                    <Transition\r\n                      as={Fragment}\r\n                      enter=\"transition ease-out duration-100\"\r\n                      enterFrom=\"transform opacity-0 scale-95\"\r\n                      enterTo=\"transform opacity-100 scale-100\"\r\n                      leave=\"transition ease-in duration-75\"\r\n                      leaveFrom=\"transform opacity-100 scale-100\"\r\n                      leaveTo=\"transform opacity-0 scale-95\"\r\n                    >\r\n                      <Menu.Items className=\"absolute right-0 z-10 mt-2 w-40 origin-top-right rounded-md bg-white shadow-2xl ring-1 ring-black ring-opacity-5 focus:outline-none\">\r\n                        <div className=\"py-1\">\r\n                          {sortOptions.map((option) => (\r\n                            <Menu.Item key={option.name}>\r\n                              {({ active }) => (\r\n                                <p\r\n                                  onClick={(e) => handleSort(e, option)}\r\n                                  className={classNames(\r\n                                    option.current\r\n                                      ? \"font-medium text-gray-900\"\r\n                                      : \"text-gray-500\",\r\n                                    active ? \"bg-gray-100\" : \"\",\r\n                                    \"block px-4 py-2 text-sm\"\r\n                                  )}\r\n                                >\r\n                                  {option.name}\r\n                                </p>\r\n                              )}\r\n                            </Menu.Item>\r\n                          ))}\r\n                        </div>\r\n                      </Menu.Items>\r\n                    </Transition>\r\n                  </Menu>\r\n\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"-m-2 ml-5 p-2 text-gray-400 hover:text-gray-500 sm:ml-7\"\r\n                  >\r\n                    <span className=\"sr-only\">View grid</span>\r\n                    <Squares2X2Icon className=\"h-5 w-5\" aria-hidden=\"true\" />\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"-m-2 ml-4 p-2 text-gray-400 hover:text-gray-500 sm:ml-6 lg:hidden\"\r\n                    onClick={() => setMobileFiltersOpen(true)}\r\n                  >\r\n                    <span className=\"sr-only\">Filters</span>\r\n                    <FunnelIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              <section\r\n                aria-labelledby=\"products-heading\"\r\n                className=\"pb-24 pt-6\"\r\n              >\r\n                <h2 id=\"products-heading\" className=\"sr-only\">\r\n                  Products\r\n                </h2>\r\n\r\n                <div className=\"grid grid-cols-1 gap-x-8 gap-y-10 lg:grid-cols-4\">\r\n                  {/* Filters */}\r\n                  <DesktopFilter\r\n                    handleFilter={handleFilter}\r\n                    filters={filters}\r\n                  ></DesktopFilter>\r\n\r\n                  {/* Product grid */}\r\n                  <div className=\"lg:col-span-3\">\r\n                    <div className=\"col-span-full\">\r\n                      <Link\r\n                        to=\"/admin/productform\"\r\n                        className=\"text-center block w-full mx-2 my-4 rounded-md bg-indigo-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\"\r\n                      >\r\n                        Add New Products\r\n                      </Link>\r\n                    </div>\r\n                    {/*Product List*/}\r\n                    <ProductGrid products={products}></ProductGrid>\r\n                  </div>\r\n                  {/* Product Grid End */}\r\n                </div>\r\n              </section>\r\n              {/* Section of product and filter end */}\r\n              <Pagination\r\n                page={page}\r\n                setPage={setPage}\r\n                handlePage={handlePage}\r\n                totalItems={totalItems}\r\n              ></Pagination>\r\n            </main>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction MobileFilter({\r\n  mobileFiltersOpen,\r\n  setMobileFiltersOpen,\r\n  handleFilter,\r\n  filters,\r\n}) {\r\n  return (\r\n    <Transition.Root show={mobileFiltersOpen} as={Fragment}>\r\n      <Dialog\r\n        as=\"div\"\r\n        className=\"relative z-40 lg:hidden\"\r\n        onClose={setMobileFiltersOpen}\r\n      >\r\n        <Transition.Child\r\n          as={Fragment}\r\n          enter=\"transition-opacity ease-linear duration-300\"\r\n          enterFrom=\"opacity-0\"\r\n          enterTo=\"opacity-100\"\r\n          leave=\"transition-opacity ease-linear duration-300\"\r\n          leaveFrom=\"opacity-100\"\r\n          leaveTo=\"opacity-0\"\r\n        >\r\n          <div className=\"fixed inset-0 bg-black bg-opacity-25\" />\r\n        </Transition.Child>\r\n\r\n        <div className=\"fixed inset-0 z-40 flex\">\r\n          <Transition.Child\r\n            as={Fragment}\r\n            enter=\"transition ease-in-out duration-300 transform\"\r\n            enterFrom=\"translate-x-full\"\r\n            enterTo=\"translate-x-0\"\r\n            leave=\"transition ease-in-out duration-300 transform\"\r\n            leaveFrom=\"translate-x-0\"\r\n            leaveTo=\"translate-x-full\"\r\n          >\r\n            <Dialog.Panel className=\"relative ml-auto flex h-full w-full max-w-xs flex-col overflow-y-auto bg-white py-4 pb-12 shadow-xl\">\r\n              <div className=\"flex items-center justify-between px-4\">\r\n                <h2 className=\"text-lg font-medium text-gray-900\">Filters</h2>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"-mr-2 flex h-10 w-10 items-center justify-center rounded-md bg-white p-2 text-gray-400\"\r\n                  onClick={() => setMobileFiltersOpen(false)}\r\n                >\r\n                  <span className=\"sr-only\">Close menu</span>\r\n                  <XMarkIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\r\n                </button>\r\n              </div>\r\n\r\n              {/* Filters */}\r\n              <form className=\"mt-4 border-t border-gray-200\">\r\n                {filters.map((section) => (\r\n                  <Disclosure\r\n                    as=\"div\"\r\n                    key={section.id}\r\n                    className=\"border-t border-gray-200 px-4 py-6\"\r\n                  >\r\n                    {({ open }) => (\r\n                      <>\r\n                        <h3 className=\"-mx-2 -my-3 flow-root\">\r\n                          <Disclosure.Button className=\"flex w-full items-center justify-between bg-white px-2 py-3 text-gray-400 hover:text-gray-500\">\r\n                            <span className=\"font-medium text-gray-900\">\r\n                              {section.name}\r\n                            </span>\r\n                            <span className=\"ml-6 flex items-center\">\r\n                              {open ? (\r\n                                <MinusIcon\r\n                                  className=\"h-5 w-5\"\r\n                                  aria-hidden=\"true\"\r\n                                />\r\n                              ) : (\r\n                                <PlusIcon\r\n                                  className=\"h-5 w-5\"\r\n                                  aria-hidden=\"true\"\r\n                                />\r\n                              )}\r\n                            </span>\r\n                          </Disclosure.Button>\r\n                        </h3>\r\n                        <Disclosure.Panel className=\"pt-6\">\r\n                          <div className=\"space-y-6\">\r\n                            {section.options.map((option, optionIdx) => (\r\n                              <div\r\n                                key={option.value}\r\n                                className=\"flex items-center\"\r\n                              >\r\n                                <input\r\n                                  id={`filter-mobile-${section.id}-${optionIdx}`}\r\n                                  name={`${section.id}[]`}\r\n                                  defaultValue={option.value}\r\n                                  type=\"checkbox\"\r\n                                  defaultChecked={option.checked}\r\n                                  onChange={(e) =>\r\n                                    handleFilter(e, section, option)\r\n                                  }\r\n                                  className=\"h-4 w-4 rounded border-gray-300 text-indigo-600 focus:ring-indigo-500\"\r\n                                />\r\n                                <label\r\n                                  htmlFor={`filter-mobile-${section.id}-${optionIdx}`}\r\n                                  className=\"ml-3 min-w-0 flex-1 text-gray-500\"\r\n                                >\r\n                                  {option.label}\r\n                                </label>\r\n                              </div>\r\n                            ))}\r\n                          </div>\r\n                        </Disclosure.Panel>\r\n                      </>\r\n                    )}\r\n                  </Disclosure>\r\n                ))}\r\n              </form>\r\n            </Dialog.Panel>\r\n          </Transition.Child>\r\n        </div>\r\n      </Dialog>\r\n    </Transition.Root>\r\n  );\r\n}\r\n\r\nfunction DesktopFilter({ handleFilter, filters }) {\r\n  return (\r\n    <form className=\"hidden lg:block\">\r\n      {filters.map((section) => (\r\n        <Disclosure\r\n          as=\"div\"\r\n          key={section.id}\r\n          className=\"border-b border-gray-200 py-6\"\r\n        >\r\n          {({ open }) => (\r\n            <>\r\n              <h3 className=\"-my-3 flow-root\">\r\n                <Disclosure.Button className=\"flex w-full items-center justify-between bg-white py-3 text-sm text-gray-400 hover:text-gray-500\">\r\n                  <span className=\"font-medium text-gray-900\">\r\n                    {section.name}\r\n                  </span>\r\n                  <span className=\"ml-6 flex items-center\">\r\n                    {open ? (\r\n                      <MinusIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\r\n                    ) : (\r\n                      <PlusIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\r\n                    )}\r\n                  </span>\r\n                </Disclosure.Button>\r\n              </h3>\r\n              <Disclosure.Panel className=\"pt-6\">\r\n                <div className=\"space-y-4\">\r\n                  {section.options.map((option, optionIdx) => (\r\n                    <div key={option.value} className=\"flex items-center\">\r\n                      <input\r\n                        id={`filter-${section.id}-${optionIdx}`}\r\n                        name={`${section.id}[]`}\r\n                        defaultValue={option.value}\r\n                        type=\"checkbox\"\r\n                        defaultChecked={option.checked}\r\n                        onChange={(e) => handleFilter(e, section, option)}\r\n                        className=\"h-4 w-4 rounded border-gray-300 text-indigo-600 focus:ring-indigo-500\"\r\n                      />\r\n                      <label\r\n                        htmlFor={`filter-${section.id}-${optionIdx}`}\r\n                        className=\"ml-3 text-sm text-gray-600\"\r\n                      >\r\n                        {option.label}\r\n                      </label>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </Disclosure.Panel>\r\n            </>\r\n          )}\r\n        </Disclosure>\r\n      ))}\r\n    </form>\r\n  );\r\n}\r\n\r\nfunction Pagination({ page, setPage, handlePage, totalItems }) {\r\n  const totalPages = Math.ceil(totalItems / ITEMS_PER_PAGE);\r\n  return (\r\n    <div className=\"flex items-center justify-between border-t border-gray-200 bg-white px-4 py-3 sm:px-6\">\r\n      <div className=\"flex flex-1 justify-between sm:hidden\">\r\n        <div\r\n          onClick={(e) => handlePage(page > 1 ? page - 1 : page)}\r\n          className=\"relative cursor-pointer inline-flex items-center rounded-md border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 hover:bg-gray-50\"\r\n        >\r\n          Previous\r\n        </div>\r\n        <div\r\n          onClick={(e) => handlePage(page < totalPages ? page + 1 : page)}\r\n          className=\"relative cursor-pointer ml-3 inline-flex items-center rounded-md border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 hover:bg-gray-50\"\r\n        >\r\n          Next\r\n        </div>\r\n      </div>\r\n      <div className=\"hidden sm:flex sm:flex-1 sm:items-center sm:justify-between\">\r\n        <div>\r\n          <p className=\"text-sm text-gray-700\">\r\n            Showing{\" \"}\r\n            <span className=\"font-medium\">\r\n              {(page - 1) * ITEMS_PER_PAGE + 1}\r\n            </span>{\" \"}\r\n            to{\" \"}\r\n            <span className=\"font-medium\">\r\n              {page * ITEMS_PER_PAGE > totalItems\r\n                ? totalItems\r\n                : page * ITEMS_PER_PAGE}\r\n            </span>{\" \"}\r\n            of <span className=\"font-medium\">{totalItems}</span> results\r\n          </p>\r\n        </div>\r\n        <div>\r\n          <nav\r\n            className=\"isolate inline-flex -space-x-px rounded-md shadow-sm\"\r\n            aria-label=\"Pagination\"\r\n          >\r\n            <div\r\n              onClick={(e) => handlePage(page > 1 ? page - 1 : page)}\r\n              className=\"relative cursor-pointer inline-flex items-center rounded-l-md px-2 py-2 text-gray-400 ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus:z-20 focus:outline-offset-0\"\r\n            >\r\n              <span className=\"sr-only\">Previous</span>\r\n              <ChevronLeftIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\r\n            </div>\r\n            {/* Current: \"z-10 bg-indigo-600 text-white focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\", Default: \"text-gray-900 ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus:outline-offset-0\" */}\r\n            {Array.from({ length: totalPages }).map((el, index) => (\r\n              <div\r\n                key={index}\r\n                onClick={(e) => handlePage(index + 1)}\r\n                aria-current=\"page\"\r\n                className={`relative cursor-pointer z-10 inline-flex items-center ${\r\n                  index + 1 === page\r\n                    ? \"bg-indigo-600 text-white\"\r\n                    : \"text-gray-400\"\r\n                }\r\n                  px-4 py-2 text-sm font-semibold  focus:z-20 focus-visible:outline \r\n                  focus-visible:outline-2 focus-visible:outline-offset-2\r\n                   focus-visible:outline-indigo-600`}\r\n              >\r\n                {index + 1}\r\n              </div>\r\n            ))}\r\n\r\n            <div\r\n              onClick={(e) => handlePage(page < totalPages ? page + 1 : page)}\r\n              className=\"relative cursor-pointer inline-flex items-center rounded-r-md px-2 py-2 text-gray-400 ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus:z-20 focus:outline-offset-0\"\r\n            >\r\n              <span className=\"sr-only\">Next</span>\r\n              <ChevronRightIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\r\n            </div>\r\n          </nav>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ProductGrid({ products }) {\r\n  return (\r\n    <div className=\"bg-white\">\r\n      <div className=\"mx-auto max-w-10xl px-4 py-0 sm:px-6 sm:py-0 lg:max-w-10xl lg:px-8\">\r\n        <div className=\"mt-6 grid grid-cols-1 gap-x-6 gap-y-10 sm:grid-cols-2 lg:grid-cols-3 xl:gap-x-8\">\r\n          {products.map((product) => (\r\n            <div>\r\n              <Link to={`/productdetail/${product.id}`} key={product.id}>\r\n                <div\r\n                  key={product.id}\r\n                  className=\"group relative border-solid border-2 p-1 border-gray-200\"\r\n                >\r\n                  <div className=\"min-h-80 aspect-h-1 aspect-w-1 w-full overflow-hidden rounded-md bg-gray-200 lg:aspect-none group-hover:opacity-75 lg:h-60\">\r\n                    <img\r\n                      src={product.thumbnail}\r\n                      alt={product.title}\r\n                      className=\"h-full w-full object-cover object-center lg:h-full lg:w-full\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"mt-4 flex justify-between\">\r\n                    <div>\r\n                      <h3 className=\"text-sm text-gray-700\">\r\n                        {/* <Link to={product.thumbnail}> */}\r\n                        <span aria-hidden=\"true\" className=\"absolute inset-0\" />\r\n                        {product.title}\r\n                        {/* </Link> */}\r\n                      </h3>\r\n                      <p className=\"mt-1 text-sm text-gray-500\">\r\n                        <StarIcon className=\"w-6 h-6 inline\"></StarIcon>\r\n                        <span className=\"align-bottom\">{product.rating}</span>\r\n                      </p>\r\n                    </div>\r\n                    <div>\r\n                      <p className=\"text-sm font-medium text-gray-900\">\r\n                        Now: $\r\n                        {discountedPrice(product)}\r\n                      </p>\r\n                      <p className=\"text-sm font-medium text-gray-400 line-through\">\r\n                        ${product.price}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                  {product.deleted && (\r\n                    <div>\r\n                      <p className=\"text-sm text-red-500\">Deleted Product</p>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </Link>\r\n              <div className=\"py-6 col-span-full\">\r\n                <Link\r\n                  to={`/admin/productform/edit/${product.id}`}\r\n                  className=\"block my-4 w-full lg:w-full text-center rounded-md bg-indigo-600 px-5 py-2 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\"\r\n                >\r\n                  Edit Product\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\features\\admin\\components\\AdminProductDetail.js",["337","338","339"],[],"import { useState, useEffect } from \"react\";\r\nimport { StarIcon } from \"@heroicons/react/20/solid\";\r\nimport { RadioGroup } from \"@headlessui/react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  selectProductById,\r\n  fetchProductByIdAsync,\r\n} from \"../../product-list/productSlice\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { addToCartAsync } from \"../../cart/cartSlice\";\r\nimport { selectLoggedInUser } from \"../../auth/authSlice\";\r\nimport { discountedPrice } from \"../../../app/constants\";\r\n\r\nconst colors = [\r\n  { name: \"White\", class: \"bg-white\", selectedClass: \"ring-gray-400\" },\r\n  { name: \"Gray\", class: \"bg-gray-200\", selectedClass: \"ring-gray-400\" },\r\n  { name: \"Black\", class: \"bg-gray-900\", selectedClass: \"ring-gray-900\" },\r\n];\r\nconst sizes = [\r\n  { name: \"XXS\", inStock: false },\r\n  { name: \"XS\", inStock: true },\r\n  { name: \"S\", inStock: true },\r\n  { name: \"M\", inStock: true },\r\n  { name: \"L\", inStock: true },\r\n  { name: \"XL\", inStock: true },\r\n  { name: \"2XL\", inStock: true },\r\n  { name: \"3XL\", inStock: true },\r\n];\r\n\r\nconst highlights = [\r\n  \"Hand cut and sewn locally\",\r\n  \"Dyed with our proprietary colors\",\r\n  \"Pre-washed & pre-shrunk\",\r\n  \"Ultra-soft 100% cotton\",\r\n];\r\n\r\nfunction classNames(...classes) {\r\n  return classes.filter(Boolean).join(\" \");\r\n}\r\n\r\nexport default function AdminProductDetail() {\r\n  const [selectedColor, setSelectedColor] = useState(colors[0]);\r\n  const [selectedSize, setSelectedSize] = useState(sizes[2]);\r\n  const product = useSelector(selectProductById);\r\n  const dispatch = useDispatch();\r\n  const params = useParams();\r\n  const user = useSelector(selectLoggedInUser);\r\n  const handleCart = (e) => {\r\n    e.preventDefault();\r\n    const newItem = { ...product, quantity: 1, user: user.id };\r\n    delete newItem[\"id\"];\r\n    dispatch(addToCartAsync(newItem));\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchProductByIdAsync(params.id));\r\n  }, [dispatch, params.id]);\r\n\r\n  return (\r\n    <div className=\"bg-white\">\r\n      {product && (\r\n        <div className=\"pt-6\">\r\n          <nav aria-label=\"Breadcrumb\">\r\n            <ol\r\n              role=\"list\"\r\n              className=\"mx-auto flex max-w-2xl items-center space-x-2 px-4 sm:px-6 lg:max-w-7xl lg:px-8\"\r\n            >\r\n              {product.breadcrumbs &&\r\n                product.breadcrumbs.map((breadcrumb) => (\r\n                  <li key={breadcrumb.id}>\r\n                    <div className=\"flex items-center\">\r\n                      <a\r\n                        href={breadcrumb.href}\r\n                        className=\"mr-2 text-sm font-medium text-gray-900\"\r\n                      >\r\n                        {breadcrumb.name}\r\n                      </a>\r\n                      <svg\r\n                        width={16}\r\n                        height={20}\r\n                        viewBox=\"0 0 16 20\"\r\n                        fill=\"currentColor\"\r\n                        aria-hidden=\"true\"\r\n                        className=\"h-5 w-4 text-gray-300\"\r\n                      >\r\n                        <path d=\"M5.697 4.34L8.98 16.532h1.327L7.025 4.341H5.697z\" />\r\n                      </svg>\r\n                    </div>\r\n                  </li>\r\n                ))}\r\n              <li className=\"text-sm\">\r\n                <a\r\n                  href={product.href}\r\n                  aria-current=\"page\"\r\n                  className=\"font-medium text-gray-500 hover:text-gray-600\"\r\n                >\r\n                  {product.title}\r\n                </a>\r\n              </li>\r\n            </ol>\r\n          </nav>\r\n\r\n          {/* Image gallery */}\r\n          <div className=\"mx-auto mt-6 max-w-2xl sm:px-6 lg:grid lg:max-w-7xl lg:grid-cols-3 lg:gap-x-8 lg:px-8\">\r\n            <div className=\"aspect-h-4 aspect-w-3 hidden overflow-hidden rounded-lg lg:block\">\r\n              <img\r\n                src={product.images[0]}\r\n                alt={product.title}\r\n                className=\"h-full w-full object-cover object-center\"\r\n              />\r\n            </div>\r\n            <div className=\"hidden lg:grid lg:grid-cols-1 lg:gap-y-8\">\r\n              <div className=\"aspect-h-2 aspect-w-3 overflow-hidden rounded-lg\">\r\n                <img\r\n                  src={product.images[1]}\r\n                  alt={product.title}\r\n                  className=\"h-full w-full object-cover object-center\"\r\n                />\r\n              </div>\r\n              <div className=\"aspect-h-2 aspect-w-3 overflow-hidden rounded-lg\">\r\n                <img\r\n                  src={product.images[2]}\r\n                  alt={product.title}\r\n                  className=\"h-full w-full object-cover object-center\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"aspect-h-5 aspect-w-4 lg:aspect-h-4 lg:aspect-w-3 sm:overflow-hidden sm:rounded-lg\">\r\n              <img\r\n                src={product.images[3]}\r\n                alt={product.title}\r\n                className=\"h-full w-full object-cover object-center\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* Product info */}\r\n          <div className=\"mx-auto max-w-2xl px-4 pb-16 pt-10 sm:px-6 lg:grid lg:max-w-7xl lg:grid-cols-3 lg:grid-rows-[auto,auto,1fr] lg:gap-x-8 lg:px-8 lg:pb-24 lg:pt-16\">\r\n            <div className=\"lg:col-span-2 lg:border-r lg:border-gray-200 lg:pr-8\">\r\n              <h1 className=\"text-2xl font-bold tracking-tight text-gray-900 sm:text-3xl\">\r\n                {product.title}\r\n              </h1>\r\n            </div>\r\n\r\n            {/* Options */}\r\n            <div className=\"mt-4 lg:row-span-3 lg:mt-0\">\r\n              <h2 className=\"sr-only\">Product information</h2>\r\n              <p className=\"text-3xl line-through tracking-tight text-gray-900\">\r\n                ${discountedPrice(product)}\r\n              </p>\r\n              <p className=\"text-3xl line-through tracking-tight text-gray-900\">\r\n                ${product.price}\r\n              </p>\r\n\r\n              {/* Reviews */}\r\n              <div className=\"mt-6\">\r\n                <h3 className=\"sr-only\">Reviews</h3>\r\n                <div className=\"flex items-center\">\r\n                  <div className=\"flex items-center\">\r\n                    {[0, 1, 2, 3, 4].map((rating) => (\r\n                      <StarIcon\r\n                        key={rating}\r\n                        className={classNames(\r\n                          product.rating > rating\r\n                            ? \"text-gray-900\"\r\n                            : \"text-gray-200\",\r\n                          \"h-5 w-5 flex-shrink-0\"\r\n                        )}\r\n                        aria-hidden=\"true\"\r\n                      />\r\n                    ))}\r\n                  </div>\r\n                  <p className=\"sr-only\">{product.rating} out of 5 stars</p>\r\n                </div>\r\n              </div>\r\n\r\n              <form className=\"mt-10\">\r\n                {/* Colors */}\r\n                <div>\r\n                  <h3 className=\"text-sm font-medium text-gray-900\">Color</h3>\r\n\r\n                  <RadioGroup\r\n                    value={selectedColor}\r\n                    onChange={setSelectedColor}\r\n                    className=\"mt-4\"\r\n                  >\r\n                    <RadioGroup.Label className=\"sr-only\">\r\n                      Choose a color\r\n                    </RadioGroup.Label>\r\n                    <div className=\"flex items-center space-x-3\">\r\n                      {colors.map((color) => (\r\n                        <RadioGroup.Option\r\n                          key={color.name}\r\n                          value={color}\r\n                          className={({ active, checked }) =>\r\n                            classNames(\r\n                              color.selectedClass,\r\n                              active && checked ? \"ring ring-offset-1\" : \"\",\r\n                              !active && checked ? \"ring-2\" : \"\",\r\n                              \"relative -m-0.5 flex cursor-pointer items-center justify-center rounded-full p-0.5 focus:outline-none\"\r\n                            )\r\n                          }\r\n                        >\r\n                          <RadioGroup.Label as=\"span\" className=\"sr-only\">\r\n                            {color.name}\r\n                          </RadioGroup.Label>\r\n                          <span\r\n                            aria-hidden=\"true\"\r\n                            className={classNames(\r\n                              color.class,\r\n                              \"h-8 w-8 rounded-full border border-black border-opacity-10\"\r\n                            )}\r\n                          />\r\n                        </RadioGroup.Option>\r\n                      ))}\r\n                    </div>\r\n                  </RadioGroup>\r\n                </div>\r\n\r\n                {/* Sizes */}\r\n                <div className=\"mt-10\">\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <h3 className=\"text-sm font-medium text-gray-900\">Size</h3>\r\n                    <a\r\n                      href=\"#\"\r\n                      className=\"text-sm font-medium text-indigo-600 hover:text-indigo-500\"\r\n                    >\r\n                      Size guide\r\n                    </a>\r\n                  </div>\r\n\r\n                  <RadioGroup\r\n                    value={selectedSize}\r\n                    onChange={setSelectedSize}\r\n                    className=\"mt-4\"\r\n                  >\r\n                    <RadioGroup.Label className=\"sr-only\">\r\n                      Choose a size\r\n                    </RadioGroup.Label>\r\n                    <div className=\"grid grid-cols-4 gap-4 sm:grid-cols-8 lg:grid-cols-4\">\r\n                      {sizes.map((size) => (\r\n                        <RadioGroup.Option\r\n                          key={size.name}\r\n                          value={size}\r\n                          disabled={!size.inStock}\r\n                          className={({ active }) =>\r\n                            classNames(\r\n                              size.inStock\r\n                                ? \"cursor-pointer bg-white text-gray-900 shadow-sm\"\r\n                                : \"cursor-not-allowed bg-gray-50 text-gray-200\",\r\n                              active ? \"ring-2 ring-indigo-500\" : \"\",\r\n                              \"group relative flex items-center justify-center rounded-md border py-3 px-4 text-sm font-medium uppercase hover:bg-gray-50 focus:outline-none sm:flex-1 sm:py-6\"\r\n                            )\r\n                          }\r\n                        >\r\n                          {({ active, checked }) => (\r\n                            <>\r\n                              <RadioGroup.Label as=\"span\">\r\n                                {size.name}\r\n                              </RadioGroup.Label>\r\n                              {size.inStock ? (\r\n                                <span\r\n                                  className={classNames(\r\n                                    active ? \"border\" : \"border-2\",\r\n                                    checked\r\n                                      ? \"border-indigo-500\"\r\n                                      : \"border-transparent\",\r\n                                    \"pointer-events-none absolute -inset-px rounded-md\"\r\n                                  )}\r\n                                  aria-hidden=\"true\"\r\n                                />\r\n                              ) : (\r\n                                <span\r\n                                  aria-hidden=\"true\"\r\n                                  className=\"pointer-events-none absolute -inset-px rounded-md border-2 border-gray-200\"\r\n                                >\r\n                                  <svg\r\n                                    className=\"absolute inset-0 h-full w-full stroke-2 text-gray-200\"\r\n                                    viewBox=\"0 0 100 100\"\r\n                                    preserveAspectRatio=\"none\"\r\n                                    stroke=\"currentColor\"\r\n                                  >\r\n                                    <line\r\n                                      x1={0}\r\n                                      y1={100}\r\n                                      x2={100}\r\n                                      y2={0}\r\n                                      vectorEffect=\"non-scaling-stroke\"\r\n                                    />\r\n                                  </svg>\r\n                                </span>\r\n                              )}\r\n                            </>\r\n                          )}\r\n                        </RadioGroup.Option>\r\n                      ))}\r\n                    </div>\r\n                  </RadioGroup>\r\n                </div>\r\n\r\n                <button\r\n                  onClick={handleCart}\r\n                  type=\"submit\"\r\n                  className=\"mt-10 flex w-full items-center justify-center rounded-md border border-transparent bg-indigo-600 px-8 py-3 text-base font-medium text-white hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2\"\r\n                >\r\n                  Add to Cart\r\n                </button>\r\n              </form>\r\n            </div>\r\n\r\n            <div className=\"py-10 lg:col-span-2 lg:col-start-1 lg:border-r lg:border-gray-200 lg:pb-16 lg:pr-8 lg:pt-6\">\r\n              {/* Description and details */}\r\n              <div>\r\n                <h3 className=\"sr-only\">Description</h3>\r\n\r\n                <div className=\"space-y-6\">\r\n                  <p className=\"text-base text-gray-900\">\r\n                    {product.description}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"mt-10\">\r\n                <h3 className=\"text-sm font-medium text-gray-900\">\r\n                  Highlights\r\n                </h3>\r\n\r\n                <div className=\"mt-4\">\r\n                  <ul role=\"list\" className=\"list-disc space-y-2 pl-4 text-sm\">\r\n                    {highlights.map((highlight) => (\r\n                      <li key={highlight} className=\"text-gray-400\">\r\n                        <span className=\"text-gray-600\">{highlight}</span>\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"mt-10\">\r\n                <h2 className=\"text-sm font-medium text-gray-900\">Details</h2>\r\n\r\n                <div className=\"mt-4 space-y-6\">\r\n                  <p className=\"text-sm text-gray-600\">{product.description}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\features\\admin\\components\\ProductForm.js",["340","341","342","343"],[],"import { PhotoIcon, UserCircleIcon } from \"@heroicons/react/24/solid\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  productCreateAsync,\r\n  productUpdateAsync,\r\n  selectBrands,\r\n} from \"../../product-list/productSlice\";\r\nimport { selectCategories } from \"../../product-list/productSlice\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nimport { fetchProductByIdAsync } from \"../../product-list/productSlice\";\r\nimport { selectProductById } from \"../../product-list/productSlice\";\r\nimport { selectedProductClear } from \"../../product-list/productSlice\";\r\n\r\nfunction ProductForm() {\r\n  const brands = useSelector(selectBrands);\r\n  const categories = useSelector(selectCategories);\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    setValue,\r\n    watch,\r\n    formState: { errors },\r\n    reset,\r\n  } = useForm();\r\n  const dispatch = useDispatch();\r\n  const params = useParams();\r\n  const selectedProduct = useSelector(selectProductById);\r\n\r\n  useEffect(() => {\r\n    if (params.id) {\r\n      dispatch(fetchProductByIdAsync(params.id));\r\n    }else{\r\n      dispatch(selectedProductClear());\r\n    }\r\n  }, [dispatch, params.id]);\r\n\r\n  useEffect(() => {\r\n    if (selectedProduct && params.id) {\r\n      setValue(\"title\", selectedProduct.title);\r\n      setValue(\"description\", selectedProduct.description);\r\n      setValue(\"brand\", selectedProduct.brand);\r\n      setValue(\"category\", selectedProduct.category);\r\n      setValue(\"price\", selectedProduct.price);\r\n      setValue(\"discountPercentage\", selectedProduct.discountPercentage);\r\n      setValue(\"stock\", selectedProduct.stock);\r\n      setValue(\"thumbnail\", selectedProduct.thumbnail);\r\n      setValue(\"image1\", selectedProduct.images[0]);\r\n      setValue(\"image2\", selectedProduct.images[1]);\r\n      setValue(\"image3\", selectedProduct.images[2]);\r\n    }\r\n  }, [setValue, selectedProduct, params.id]);\r\n\r\n  const deleteHandle = () => {\r\n    const product = {...selectedProduct };\r\n    product.deleted = true;\r\n    dispatch(productUpdateAsync(product));\r\n  }\r\n\r\n  return (\r\n    <form\r\n      noValidate\r\n      onSubmit={handleSubmit((data) => {\r\n        const product = { ...data };\r\n        product.images = [\r\n          product.thumbnail,\r\n          product.image1,\r\n          product.image2,\r\n          product.image3,\r\n        ];\r\n        delete product[\"image1\"];\r\n        delete product[\"image2\"];\r\n        delete product[\"image3\"];\r\n        product.price = +product.price;\r\n        product.discountPercentage = +product.discountPercentage;\r\n        product.stock = +product.stock;\r\n        if (params.id) {\r\n          product.id = params.id;\r\n          product.rating = selectedProduct.rating || 0;\r\n          dispatch(productUpdateAsync(product));\r\n          reset();\r\n        } else {\r\n          dispatch(productCreateAsync(product));\r\n          reset();\r\n        }\r\n      })}\r\n    >\r\n      <div className=\"space-y-10 bg-white p-8\">\r\n        <div className=\"border-b border-gray-900/10\">\r\n          <h2 className=\"text-base font-semibold leading-7 text-gray-900\">\r\n            Add Product\r\n          </h2>\r\n\r\n          <div className=\"mt-10 grid grid-cols-1 gap-x-6 gap-y-8 sm:grid-cols-6 pb-12\">\r\n            <div className=\"col-span-full\">\r\n              <label\r\n                htmlFor=\"title\"\r\n                className=\"block text-sm font-medium leading-6 text-gray-900\"\r\n              >\r\n                Name\r\n              </label>\r\n              <div className=\"mt-2\">\r\n                <div className=\"flex rounded-md shadow-sm ring-1 ring-inset ring-gray-300 focus-within:ring-2 focus-within:ring-inset focus-within:ring-indigo-600\">\r\n                  <input\r\n                    type=\"text\"\r\n                    {...register(\"title\", {\r\n                      required: \"Name is required\",\r\n                    })}\r\n                    id=\"title\"\r\n                    className=\"block flex-1 border-0 bg-transparent py-1.5 pl-1 text-gray-900 placeholder:text-gray-400 focus:ring-0 sm:text-sm sm:leading-6\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"col-span-full\">\r\n              <label\r\n                htmlFor=\"description\"\r\n                className=\"block text-sm font-medium leading-6 text-gray-900\"\r\n              >\r\n                Description\r\n              </label>\r\n              <div className=\"mt-2\">\r\n                <textarea\r\n                  type=\"text\"\r\n                  id=\"description\"\r\n                  {...register(\"description\", {\r\n                    required: \"Description is required\",\r\n                  })}\r\n                  rows={3}\r\n                  className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\r\n                  defaultValue={\"\"}\r\n                />\r\n              </div>\r\n              <p className=\"mt-3 text-sm leading-6 text-gray-600\">\r\n                Write a few sentences about the Product.\r\n              </p>\r\n            </div>\r\n\r\n            <div className=\"sm:col-span-3\">\r\n              <label\r\n                htmlFor=\"brand\"\r\n                className=\"block text-sm font-medium leading-6 text-gray-900\"\r\n              >\r\n                Brand\r\n              </label>\r\n              <div className=\"mt-2\">\r\n                <select\r\n                  className=\"block w-full\"\r\n                  {...register(\"brand\", {\r\n                    required: \"Brand is required\",\r\n                  })}\r\n                >\r\n                  <option value=\"\">Choose Brand</option>\r\n                  {brands.map((brand) => (\r\n                    <option value={brand.value}>{brand.label}</option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"sm:col-span-3\">\r\n              <label\r\n                htmlFor=\"category\"\r\n                className=\"block text-sm font-medium leading-6 text-gray-900\"\r\n              >\r\n                Category\r\n              </label>\r\n              <div className=\"mt-2\">\r\n                <select\r\n                  className=\"block w-full\"\r\n                  {...register(\"category\", {\r\n                    required: \"Category is required\",\r\n                  })}\r\n                >\r\n                  <option value=\"\">Choose Category</option>\r\n                  {categories.map((category) => (\r\n                    <option value={category.value}>{category.label}</option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"sm:col-span-2\">\r\n              <label\r\n                htmlFor=\"price\"\r\n                className=\"block text-sm font-medium leading-6 text-gray-900\"\r\n              >\r\n                Price\r\n              </label>\r\n              <div className=\"mt-2\">\r\n                <div className=\"flex rounded-md shadow-sm ring-1 ring-inset ring-gray-300 focus-within:ring-2 focus-within:ring-inset focus-within:ring-indigo-600\">\r\n                  <input\r\n                    type=\"number\"\r\n                    {...register(\"price\", {\r\n                      required: \"Price is required\",\r\n                      min: 1,\r\n                      max: 10000,\r\n                    })}\r\n                    id=\"price\"\r\n                    className=\"block flex-1 border-0 bg-transparent py-1.5 pl-1 text-gray-900 placeholder:text-gray-400 focus:ring-0 sm:text-sm sm:leading-6\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"sm:col-span-2\">\r\n              <label\r\n                htmlFor=\"discountPercentage\"\r\n                className=\"block text-sm font-medium leading-6 text-gray-900\"\r\n              >\r\n                Discount Percentage\r\n              </label>\r\n              <div className=\"mt-2\">\r\n                <div className=\"flex rounded-md shadow-sm ring-1 ring-inset ring-gray-300 focus-within:ring-2 focus-within:ring-inset focus-within:ring-indigo-600\">\r\n                  <input\r\n                    type=\"number\"\r\n                    {...register(\"discountPercentage\", {\r\n                      required: \"Discount Percentage is required\",\r\n                      min: 0,\r\n                      max: 80,\r\n                    })}\r\n                    id=\"discountPercentage\"\r\n                    className=\"block flex-1 border-0 bg-transparent py-1.5 pl-1 text-gray-900 placeholder:text-gray-400 focus:ring-0 sm:text-sm sm:leading-6\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"sm:col-span-2\">\r\n              <label\r\n                htmlFor=\"stock\"\r\n                className=\"block text-sm font-medium leading-6 text-gray-900\"\r\n              >\r\n                Stock\r\n              </label>\r\n              <div className=\"mt-2\">\r\n                <div className=\"flex rounded-md shadow-sm ring-1 ring-inset ring-gray-300 focus-within:ring-2 focus-within:ring-inset focus-within:ring-indigo-600\">\r\n                  <input\r\n                    type=\"number\"\r\n                    {...register(\"stock\", {\r\n                      required: \"Stock is required\",\r\n                      min: 0,\r\n                    })}\r\n                    id=\"stock\"\r\n                    className=\"block flex-1 border-0 bg-transparent py-1.5 pl-1 text-gray-900 placeholder:text-gray-400 focus:ring-0 sm:text-sm sm:leading-6\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"col-span-full\">\r\n              <label\r\n                htmlFor=\"thumbnail\"\r\n                className=\"block text-sm font-medium leading-6 text-gray-900\"\r\n              >\r\n                Thumbnail\r\n              </label>\r\n              <div className=\"mt-2\">\r\n                <div className=\"flex rounded-md shadow-sm ring-1 ring-inset ring-gray-300 focus-within:ring-2 focus-within:ring-inset focus-within:ring-indigo-600\">\r\n                  <input\r\n                    type=\"text\"\r\n                    {...register(\"thumbnail\", {\r\n                      required: \"Thumbnail is required\",\r\n                    })}\r\n                    id=\"thumbnail\"\r\n                    className=\"block flex-1 border-0 bg-transparent py-1.5 pl-1 text-gray-900 placeholder:text-gray-400 focus:ring-0 sm:text-sm sm:leading-6\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"col-span-full\">\r\n              <label\r\n                htmlFor=\"image1\"\r\n                className=\"block text-sm font-medium leading-6 text-gray-900\"\r\n              >\r\n                Image 1\r\n              </label>\r\n              <div className=\"mt-2\">\r\n                <div className=\"flex rounded-md shadow-sm ring-1 ring-inset ring-gray-300 focus-within:ring-2 focus-within:ring-inset focus-within:ring-indigo-600\">\r\n                  <input\r\n                    type=\"text\"\r\n                    {...register(\"image1\", {\r\n                      required: \"Image is required\",\r\n                    })}\r\n                    id=\"image1\"\r\n                    className=\"block flex-1 border-0 bg-transparent py-1.5 pl-1 text-gray-900 placeholder:text-gray-400 focus:ring-0 sm:text-sm sm:leading-6\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"col-span-full\">\r\n              <label\r\n                htmlFor=\"image2\"\r\n                className=\"block text-sm font-medium leading-6 text-gray-900\"\r\n              >\r\n                Image 2\r\n              </label>\r\n              <div className=\"mt-2\">\r\n                <div className=\"flex rounded-md shadow-sm ring-1 ring-inset ring-gray-300 focus-within:ring-2 focus-within:ring-inset focus-within:ring-indigo-600\">\r\n                  <input\r\n                    type=\"text\"\r\n                    {...register(\"image2\", {\r\n                      required: \"Image is required\",\r\n                    })}\r\n                    id=\"image2\"\r\n                    className=\"block flex-1 border-0 bg-transparent py-1.5 pl-1 text-gray-900 placeholder:text-gray-400 focus:ring-0 sm:text-sm sm:leading-6\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"col-span-full\">\r\n              <label\r\n                htmlFor=\"image3\"\r\n                className=\"block text-sm font-medium leading-6 text-gray-900\"\r\n              >\r\n                Image 3\r\n              </label>\r\n              <div className=\"mt-2\">\r\n                <div className=\"flex rounded-md shadow-sm ring-1 ring-inset ring-gray-300 focus-within:ring-2 focus-within:ring-inset focus-within:ring-indigo-600\">\r\n                  <input\r\n                    type=\"text\"\r\n                    {...register(\"image3\", {\r\n                      required: \"Image is required\",\r\n                    })}\r\n                    id=\"image3\"\r\n                    className=\"block flex-1 border-0 bg-transparent py-1.5 pl-1 text-gray-900 placeholder:text-gray-400 focus:ring-0 sm:text-sm sm:leading-6\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"border-b border-gray-900/10 pb-12\">\r\n          <h2 className=\"text-base font-semibold leading-7 text-gray-900\">\r\n            Extras\r\n          </h2>\r\n\r\n          <div className=\"mt-10 space-y-10\">\r\n            <fieldset>\r\n              <legend className=\"text-sm font-semibold leading-6 text-gray-900\">\r\n                By Email\r\n              </legend>\r\n              <div className=\"mt-6 space-y-6\">\r\n                <div className=\"relative flex gap-x-3\">\r\n                  <div className=\"flex h-6 items-center\">\r\n                    <input\r\n                      id=\"comments\"\r\n                      name=\"comments\"\r\n                      type=\"checkbox\"\r\n                      className=\"h-4 w-4 rounded border-gray-300 text-indigo-600 focus:ring-indigo-600\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"text-sm leading-6\">\r\n                    <label\r\n                      htmlFor=\"comments\"\r\n                      className=\"font-medium text-gray-900\"\r\n                    >\r\n                      Comments\r\n                    </label>\r\n                    <p className=\"text-gray-500\">\r\n                      Get notified when someones posts a comment on a posting.\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"relative flex gap-x-3\">\r\n                  <div className=\"flex h-6 items-center\">\r\n                    <input\r\n                      id=\"candidates\"\r\n                      name=\"candidates\"\r\n                      type=\"checkbox\"\r\n                      className=\"h-4 w-4 rounded border-gray-300 text-indigo-600 focus:ring-indigo-600\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"text-sm leading-6\">\r\n                    <label\r\n                      htmlFor=\"candidates\"\r\n                      className=\"font-medium text-gray-900\"\r\n                    >\r\n                      Candidates\r\n                    </label>\r\n                    <p className=\"text-gray-500\">\r\n                      Get notified when a candidate applies for a job.\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"relative flex gap-x-3\">\r\n                  <div className=\"flex h-6 items-center\">\r\n                    <input\r\n                      id=\"offers\"\r\n                      name=\"offers\"\r\n                      type=\"checkbox\"\r\n                      className=\"h-4 w-4 rounded border-gray-300 text-indigo-600 focus:ring-indigo-600\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"text-sm leading-6\">\r\n                    <label\r\n                      htmlFor=\"offers\"\r\n                      className=\"font-medium text-gray-900\"\r\n                    >\r\n                      Offers\r\n                    </label>\r\n                    <p className=\"text-gray-500\">\r\n                      Get notified when a candidate accepts or rejects an offer.\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </fieldset>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mt-6 flex items-center justify-end gap-x-6\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"text-sm font-semibold leading-6 text-gray-900\"\r\n        >\r\n          Cancel\r\n        </button>\r\n        {selectedProduct && <button\r\n         onClick={deleteHandle}\r\n          className=\"rounded-md  px-3 py-2 text-sm font-semibold text-red-500 shadow-sm hover:text-white hover:bg-red-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\"\r\n        >\r\n          Delete\r\n        </button>\r\n        }\r\n        <button\r\n          type=\"submit\"\r\n          className=\"rounded-md bg-indigo-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\"\r\n        >\r\n          Save\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ProductForm;\r\n","D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\pages\\AdminProductFormPage.js",[],[],"D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\pages\\AdminOrdersPage.js",[],[],"D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\features\\admin\\components\\AdminOrders.js",["344"],[],"import { useEffect, useState } from \"react\";\r\nimport {\r\n  fetchAllOrdersAsync,\r\n  selectOrders,\r\n  selectOrdersTotal,\r\n} from \"../../order/orderSlice\";\r\nimport { ITEMS_PER_PAGE } from \"../../../app/constants\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  EyeIcon,\r\n  PencilIcon,\r\n  ArrowUpIcon,\r\n  ArrowDownIcon,\r\n} from \"@heroicons/react/24/outline\";\r\nimport { discountedPrice } from \"../../../app/constants\";\r\nimport { orderUpdateAsync } from \"../../order/orderSlice\";\r\nimport Pagination from \"../../common/Pagination\";\r\n\r\nfunction AdminOrders() {\r\n  const [page, setPage] = useState(1);\r\n  const [sort, setSort] = useState({});\r\n  const dispatch = useDispatch();\r\n  const orders = useSelector(selectOrders);\r\n  const ordersTotal = useSelector(selectOrdersTotal);\r\n  const [editableOrderId, setEditableOrderId] = useState(-1);\r\n\r\n  const editHandle = (order) => {\r\n    setEditableOrderId(order.id);\r\n  };\r\n  const updateHandle = (e, order) => {\r\n    const orderUpdated = { ...order, status: e.target.value };\r\n    dispatch(orderUpdateAsync(orderUpdated));\r\n    setEditableOrderId(-1);\r\n  };\r\n\r\n  const pageHandle = (page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const sortHandle = (sortOption) => {\r\n    const sort = { _sort: sortOption.sort, _order: sortOption.order };\r\n    console.log({ sort });\r\n    setSort(sort);\r\n  };\r\n\r\n  const showHandle = () => {};\r\n\r\n  const chooseColor = (status) => {\r\n    switch (status) {\r\n      case \"Pending\":\r\n        return \"bg-yellow-200 text-yellow-800\";\r\n      case \"Cancelled\":\r\n        return \"bg-red-200 text-red-800\";\r\n      case \"Processing\":\r\n        return \"bg-blue-200 text-blue-800\";\r\n      case \"Shipped\":\r\n        return \"bg-purple-200 text-purple-800\";\r\n      case \"Delivered\":\r\n        return \"bg-green-200 text-green-800\";\r\n      default:\r\n        return \"bg-grey-200 text-grey-800\";\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const pagination = { _page: page, _limit: ITEMS_PER_PAGE };\r\n    dispatch(fetchAllOrdersAsync({ sort, pagination }));\r\n  }, [dispatch, page, sort]);\r\n\r\n  return (\r\n    <div className=\"overflow-x-auto\">\r\n      <div className=\"bg-gray-100 flex items-center justify-center bg-gray-100 font-sans overflow-hidden\">\r\n        <div className=\"w-full\">\r\n          <div className=\"bg-white shadow-md rounded my-6\">\r\n            <table className=\"min-w-max w-full table-auto\">\r\n              <thead>\r\n                <tr className=\"bg-gray-200 text-gray-600 uppercase text-sm leading-normal\">\r\n                  <th\r\n                    className=\"py-3 px-1 text-center cursor-pointer\"\r\n                    onClick={(e) =>\r\n                      sortHandle({\r\n                        sort: \"id\",\r\n                        order: sort?._order === \"asc\" ? \"desc\" : \"asc\",\r\n                      })\r\n                    }\r\n                  >\r\n                    Order {' '}\r\n                    {sort._sort === \"id\" &&\r\n                      (sort._order === \"asc\" ? (\r\n                        <ArrowUpIcon className=\"w-4 h-4 inline\"></ArrowUpIcon>\r\n                      ) : (\r\n                        <ArrowDownIcon className=\"w-4 h-4 inline\"></ArrowDownIcon>\r\n                      ))}\r\n                  </th>\r\n                  <th className=\"py-3 px-1 text-center\">\r\n                    Products - Price - Quantity\r\n                  </th>\r\n                  <th\r\n                    className=\"py-3 px-1 text-center cursor-pointer\"\r\n                    onClick={(e) =>\r\n                      sortHandle({\r\n                        sort: \"totalAmount\",\r\n                        order: sort?._order === \"asc\" ? \"desc\" : \"asc\",\r\n                      })\r\n                    }\r\n                  >\r\n                    Total Amount {' '}\r\n                    {sort._sort === \"totalAmount\" &&\r\n                      (sort._order === \"asc\" ? (\r\n                        <ArrowUpIcon className=\"w-4 h-4 inline\"></ArrowUpIcon>\r\n                      ) : (\r\n                        <ArrowDownIcon className=\"w-4 h-4 inline\"></ArrowDownIcon>\r\n                      ))}\r\n                  </th>\r\n                  <th className=\"py-3 px-1 text-center\">Shipping Address</th>\r\n                  <th className=\"py-3 px-1 text-center\">Status</th>\r\n                  <th className=\"py-3 px-1 text-center\">Actions</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"text-gray-600 text-sm font-light\">\r\n                {orders.map((order) => (\r\n                  <tr className=\"border-b border-gray-200 hover:bg-gray-100\">\r\n                    <td className=\"py-3 px-1 text-center\">\r\n                      <div className=\"items-center\">\r\n                        <span className=\"font-medium\">{order.id}</span>\r\n                      </div>\r\n                    </td>\r\n                    <td className=\"py-3 px-1 text-center\">\r\n                      {order.items.map((item) => (\r\n                        <div className=\"flex items-center\">\r\n                          <div className=\"mr-2\">\r\n                            <img\r\n                              className=\"w-6 h-6 rounded-full\"\r\n                              src={item.thumbnail}\r\n                            />\r\n                          </div>\r\n                          <span>\r\n                            {item.title} - ${discountedPrice(item)} - #\r\n                            {item.quantity}\r\n                          </span>\r\n                        </div>\r\n                      ))}\r\n                    </td>\r\n                    <td className=\"py-3 px-1 text-center\">\r\n                      <div className=\"flex items-center justify-center\">\r\n                        ${order.totalAmount}\r\n                      </div>\r\n                    </td>\r\n                    <td className=\"py-3 px-1 text-center\">\r\n                      <div>\r\n                        <div>\r\n                          {order.selectedAddress.name},{\" \"}\r\n                          {order.selectedAddress.street},\r\n                        </div>\r\n                        <div>\r\n                          {order.selectedAddress.city},{\" \"}\r\n                          {order.selectedAddress.state},\r\n                        </div>\r\n                        <div>\r\n                          {order.selectedAddress.postalcode},{\" \"}\r\n                          {order.selectedAddress.country}\r\n                        </div>\r\n                      </div>\r\n                    </td>\r\n                    <td className=\"py-3 px-1 text-center\">\r\n                      {order.id === editableOrderId ? (\r\n                        <select onChange={(e) => updateHandle(e, order)}>\r\n                          <option value=\"Pending\">Pending</option>\r\n                          <option value=\"Cancelled\">Cancelled</option>\r\n                          <option value=\"Processing\">Processing</option>\r\n                          <option value=\"Shipped\">Shipped</option>\r\n                          <option value=\"Delivered\">Delivered</option>\r\n                        </select>\r\n                      ) : (\r\n                        <span\r\n                          className={`${chooseColor(\r\n                            order.status\r\n                          )} py-1 px-3 rounded-full text-xs`}\r\n                        >\r\n                          {order.status}\r\n                        </span>\r\n                      )}\r\n                    </td>\r\n                    <td className=\"py-3 px-1 text-center\">\r\n                      <div className=\"flex item-center justify-center\">\r\n                        <div className=\"w-4 mr-4 transform hover:text-purple-500 hover:scale-120\">\r\n                          <EyeIcon\r\n                            className=\"w-5 h-5 cursor-pointer\"\r\n                            onClick={(e) => showHandle(order)}\r\n                          ></EyeIcon>\r\n                        </div>\r\n                        <div className=\"w-4 mr-4 transform hover:text-purple-500 hover:scale-120\">\r\n                          <PencilIcon\r\n                            className=\"w-5 h-5 cursor-pointer\"\r\n                            onClick={(e) => editHandle(order)}\r\n                          ></PencilIcon>\r\n                        </div>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Pagination\r\n        page={page}\r\n        setPage={setPage}\r\n        handlePage={pageHandle}\r\n        totalItems={ordersTotal}\r\n      ></Pagination>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminOrders;\r\n","D:\\Humber 2023\\Semester 3\\Capstone Project\\urban_clothing_v1.0\\src\\features\\common\\Pagination.js",[],[],{"ruleId":"345","severity":1,"message":"346","line":3,"column":8,"nodeType":"347","messageId":"348","endLine":3,"endColumn":12},{"ruleId":"345","severity":1,"message":"349","line":4,"column":10,"nodeType":"347","messageId":"348","endLine":4,"endColumn":17},{"ruleId":"345","severity":1,"message":"350","line":15,"column":8,"nodeType":"347","messageId":"348","endLine":15,"endColumn":18},{"ruleId":"345","severity":1,"message":"351","line":20,"column":3,"nodeType":"347","messageId":"348","endLine":20,"endColumn":8},{"ruleId":"345","severity":1,"message":"352","line":21,"column":3,"nodeType":"347","messageId":"348","endLine":21,"endColumn":7},{"ruleId":"345","severity":1,"message":"353","line":1,"column":26,"nodeType":"347","messageId":"348","endLine":1,"endColumn":39},{"ruleId":"345","severity":1,"message":"352","line":3,"column":10,"nodeType":"347","messageId":"348","endLine":3,"endColumn":14},{"ruleId":"345","severity":1,"message":"354","line":1,"column":17,"nodeType":"347","messageId":"348","endLine":1,"endColumn":25},{"ruleId":"345","severity":1,"message":"355","line":4,"column":3,"nodeType":"347","messageId":"348","endLine":4,"endColumn":12},{"ruleId":"345","severity":1,"message":"356","line":5,"column":3,"nodeType":"347","messageId":"348","endLine":5,"endColumn":17},{"ruleId":"345","severity":1,"message":"357","line":10,"column":9,"nodeType":"347","messageId":"348","endLine":10,"endColumn":14},{"ruleId":"345","severity":1,"message":"358","line":11,"column":9,"nodeType":"347","messageId":"348","endLine":11,"endColumn":17},{"ruleId":"345","severity":1,"message":"359","line":11,"column":10,"nodeType":"347","messageId":"348","endLine":11,"endColumn":28},{"ruleId":"345","severity":1,"message":"360","line":19,"column":10,"nodeType":"347","messageId":"348","endLine":19,"endColumn":14},{"ruleId":"345","severity":1,"message":"361","line":19,"column":16,"nodeType":"347","messageId":"348","endLine":19,"endColumn":23},{"ruleId":"345","severity":1,"message":"362","line":38,"column":5,"nodeType":"347","messageId":"348","endLine":38,"endColumn":10},{"ruleId":"345","severity":1,"message":"363","line":39,"column":18,"nodeType":"347","messageId":"348","endLine":39,"endColumn":24},{"ruleId":"364","severity":1,"message":"365","line":290,"column":21,"nodeType":"366","endLine":293,"endColumn":22},{"ruleId":"364","severity":1,"message":"365","line":394,"column":21,"nodeType":"366","endLine":394,"endColumn":80},{"ruleId":"345","severity":1,"message":"367","line":3,"column":10,"nodeType":"347","messageId":"348","endLine":3,"endColumn":16},{"ruleId":"345","severity":1,"message":"368","line":3,"column":18,"nodeType":"347","messageId":"348","endLine":3,"endColumn":28},{"ruleId":"345","severity":1,"message":"369","line":4,"column":10,"nodeType":"347","messageId":"348","endLine":4,"endColumn":19},{"ruleId":"345","severity":1,"message":"360","line":12,"column":10,"nodeType":"347","messageId":"348","endLine":12,"endColumn":14},{"ruleId":"345","severity":1,"message":"361","line":12,"column":16,"nodeType":"347","messageId":"348","endLine":12,"endColumn":23},{"ruleId":"364","severity":1,"message":"365","line":37,"column":13,"nodeType":"366","endLine":37,"endColumn":72},{"ruleId":"364","severity":1,"message":"370","line":68,"column":13,"nodeType":"366","endLine":71,"endColumn":14},{"ruleId":"371","severity":1,"message":"372","line":228,"column":21,"nodeType":"366","endLine":231,"endColumn":22},{"ruleId":"364","severity":1,"message":"365","line":333,"column":19,"nodeType":"366","endLine":333,"endColumn":80},{"ruleId":"345","severity":1,"message":"373","line":5,"column":3,"nodeType":"347","messageId":"348","endLine":5,"endColumn":24},{"ruleId":"345","severity":1,"message":"374","line":17,"column":3,"nodeType":"347","messageId":"348","endLine":17,"endColumn":18},{"ruleId":"345","severity":1,"message":"375","line":18,"column":3,"nodeType":"347","messageId":"348","endLine":18,"endColumn":19},{"ruleId":"345","severity":1,"message":"376","line":28,"column":10,"nodeType":"347","messageId":"348","endLine":28,"endColumn":17},{"ruleId":"377","severity":1,"message":"378","line":111,"column":6,"nodeType":"379","endLine":111,"endColumn":8,"suggestions":"380"},{"ruleId":"345","severity":1,"message":"354","line":1,"column":17,"nodeType":"347","messageId":"348","endLine":1,"endColumn":25},{"ruleId":"345","severity":1,"message":"355","line":3,"column":10,"nodeType":"347","messageId":"348","endLine":3,"endColumn":19},{"ruleId":"345","severity":1,"message":"356","line":3,"column":21,"nodeType":"347","messageId":"348","endLine":3,"endColumn":35},{"ruleId":"345","severity":1,"message":"362","line":13,"column":5,"nodeType":"347","messageId":"348","endLine":13,"endColumn":10},{"ruleId":"345","severity":1,"message":"354","line":1,"column":17,"nodeType":"347","messageId":"348","endLine":1,"endColumn":25},{"ruleId":"345","severity":1,"message":"355","line":4,"column":10,"nodeType":"347","messageId":"348","endLine":4,"endColumn":19},{"ruleId":"345","severity":1,"message":"356","line":4,"column":21,"nodeType":"347","messageId":"348","endLine":4,"endColumn":35},{"ruleId":"345","severity":1,"message":"362","line":13,"column":5,"nodeType":"347","messageId":"348","endLine":13,"endColumn":10},{"ruleId":"345","severity":1,"message":"381","line":45,"column":11,"nodeType":"347","messageId":"348","endLine":45,"endColumn":15},{"ruleId":"345","severity":1,"message":"382","line":1,"column":10,"nodeType":"347","messageId":"348","endLine":1,"endColumn":20},{"ruleId":"345","severity":1,"message":"383","line":2,"column":10,"nodeType":"347","messageId":"348","endLine":2,"endColumn":20},{"ruleId":"345","severity":1,"message":"354","line":1,"column":28,"nodeType":"347","messageId":"348","endLine":1,"endColumn":36},{"ruleId":"345","severity":1,"message":"384","line":3,"column":10,"nodeType":"347","messageId":"348","endLine":3,"endColumn":21},{"ruleId":"345","severity":1,"message":"359","line":4,"column":10,"nodeType":"347","messageId":"348","endLine":4,"endColumn":28},{"ruleId":"364","severity":1,"message":"365","line":29,"column":17,"nodeType":"366","endLine":29,"endColumn":76},{"ruleId":"345","severity":1,"message":"384","line":4,"column":3,"nodeType":"347","messageId":"348","endLine":4,"endColumn":14},{"ruleId":"345","severity":1,"message":"359","line":8,"column":10,"nodeType":"347","messageId":"348","endLine":8,"endColumn":28},{"ruleId":"345","severity":1,"message":"362","line":47,"column":5,"nodeType":"347","messageId":"348","endLine":47,"endColumn":10},{"ruleId":"345","severity":1,"message":"363","line":48,"column":18,"nodeType":"347","messageId":"348","endLine":48,"endColumn":24},{"ruleId":"345","severity":1,"message":"354","line":1,"column":17,"nodeType":"347","messageId":"348","endLine":1,"endColumn":25},{"ruleId":"345","severity":1,"message":"385","line":2,"column":16,"nodeType":"347","messageId":"348","endLine":2,"endColumn":24},{"ruleId":"345","severity":1,"message":"386","line":4,"column":10,"nodeType":"347","messageId":"348","endLine":4,"endColumn":24},{"ruleId":"345","severity":1,"message":"362","line":10,"column":5,"nodeType":"347","messageId":"348","endLine":10,"endColumn":10},{"ruleId":"345","severity":1,"message":"373","line":5,"column":3,"nodeType":"347","messageId":"348","endLine":5,"endColumn":24},{"ruleId":"345","severity":1,"message":"376","line":28,"column":10,"nodeType":"347","messageId":"348","endLine":28,"endColumn":17},{"ruleId":"377","severity":1,"message":"378","line":110,"column":6,"nodeType":"379","endLine":110,"endColumn":8,"suggestions":"387"},{"ruleId":"364","severity":1,"message":"370","line":65,"column":13,"nodeType":"366","endLine":68,"endColumn":14},{"ruleId":"371","severity":1,"message":"372","line":225,"column":21,"nodeType":"366","endLine":228,"endColumn":22},{"ruleId":"364","severity":1,"message":"365","line":330,"column":19,"nodeType":"366","endLine":330,"endColumn":80},{"ruleId":"345","severity":1,"message":"388","line":1,"column":10,"nodeType":"347","messageId":"348","endLine":1,"endColumn":19},{"ruleId":"345","severity":1,"message":"389","line":1,"column":21,"nodeType":"347","messageId":"348","endLine":1,"endColumn":35},{"ruleId":"345","severity":1,"message":"362","line":24,"column":5,"nodeType":"347","messageId":"348","endLine":24,"endColumn":10},{"ruleId":"345","severity":1,"message":"363","line":25,"column":18,"nodeType":"347","messageId":"348","endLine":25,"endColumn":24},{"ruleId":"390","severity":1,"message":"391","line":132,"column":29,"nodeType":"366","endLine":135,"endColumn":31},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Counter' is defined but never used.","'UserOrders' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'createReducer' is defined but never used.","'useState' is defined but never used.","'increment' is defined but never used.","'incrementAsync' is defined but never used.","'count' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'selectLoggedInUser' is defined but never used.","'open' is assigned a value but never used.","'setOpen' is assigned a value but never used.","'watch' is assigned a value but never used.","'errors' is assigned a value but never used.","jsx-a11y/no-redundant-roles","The element ul has an implicit role of list. Defining this explicitly is redundant and should be avoided.","JSXOpeningElement","'Dialog' is defined but never used.","'Transition' is defined but never used.","'XMarkIcon' is defined but never used.","The element ol has an implicit role of list. Defining this explicitly is redundant and should be avoided.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'fetchAllProductsAsync' is defined but never used.","'ChevronLeftIcon' is defined but never used.","'ChevronRightIcon' is defined but never used.","'handler' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["392"],"'data' is assigned a value but never used.","'isRejected' is defined but never used.","'fetchCount' is defined but never used.","'selectCount' is defined but never used.","'Navigate' is defined but never used.","'checkUserAsync' is defined but never used.",["393"],"'PhotoIcon' is defined but never used.","'UserCircleIcon' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",{"desc":"394","fix":"395"},{"desc":"394","fix":"396"},"Update the dependencies array to be: [dispatch]",{"range":"397","text":"398"},{"range":"399","text":"398"},[3187,3189],"[dispatch]",[3157,3159]]