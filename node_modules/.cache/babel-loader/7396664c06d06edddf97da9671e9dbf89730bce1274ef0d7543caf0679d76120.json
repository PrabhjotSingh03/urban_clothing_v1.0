{"ast":null,"code":"var _jsxFileName = \"D:\\\\Humber 2023\\\\Semester 3\\\\Capstone Project\\\\urban_clothing_v1.0\\\\src\\\\pages\\\\CheckoutForm.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { PaymentElement, LinkAuthenticationElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport { useSelector } from \"react-redux\";\nimport { selectOrderCurrent } from \"../features/order/orderSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CheckoutForm() {\n  _s();\n  const stripe = useStripe();\n  const elements = useElements();\n  const orderCurrent = useSelector(selectOrderCurrent);\n  const [email, setEmail] = useState('');\n  const [message, setMessage] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    if (!stripe) {\n      return;\n    }\n    const clientSecret = new URLSearchParams(window.location.search).get(\"payment_intent_client_secret\");\n    if (!clientSecret) {\n      return;\n    }\n    stripe.retrievePaymentIntent(clientSecret).then(({\n      paymentIntent\n    }) => {\n      switch (paymentIntent.status) {\n        case \"succeeded\":\n          setMessage(\"Payment succeeded!\");\n          break;\n        case \"processing\":\n          setMessage(\"Your payment is processing.\");\n          break;\n        case \"requires_payment_method\":\n          setMessage(\"Your payment was not successful, please try again.\");\n          break;\n        default:\n          setMessage(\"Something went wrong.\");\n          break;\n      }\n    });\n  }, [stripe]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!stripe || !elements) {\n      // Stripe.js hasn't yet loaded.\n      // Make sure to disable form submission until Stripe.js has loaded.\n      return;\n    }\n    setIsLoading(true);\n    const {\n      error\n    } = await stripe.confirmPayment({\n      elements,\n      confirmParams: {\n        // Make sure to change this to your payment completion page\n        return_url: `http://localhost:3000/ordersuccess/${orderCurrent.id}`\n      }\n    });\n\n    // This point will only be reached if there is an immediate error when\n    // confirming the payment. Otherwise, your customer will be redirected to\n    // your `return_url`. For some payment methods like iDEAL, your customer will\n    // be redirected to an intermediate site first to authorize the payment, then\n    // redirected to the `return_url`.\n    if (error.type === \"card_error\" || error.type === \"validation_error\") {\n      setMessage(error.message);\n    } else {\n      setMessage(\"An unexpected error occurred.\");\n    }\n    setIsLoading(false);\n  };\n  const paymentElementOptions = {\n    layout: \"tabs\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    id: \"payment-form\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(LinkAuthenticationElement, {\n      id: \"link-authentication-element\",\n      onChange: e => {\n        var _e$target;\n        return setEmail(e === null || e === void 0 ? void 0 : (_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PaymentElement, {\n      id: \"payment-element\",\n      options: paymentElementOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: isLoading || !stripe || !elements,\n      id: \"submit\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"button-text\",\n        children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner\",\n          id: \"spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 24\n        }, this) : \"Pay now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"payment-message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n_s(CheckoutForm, \"T7ZtAeFiRS5p+daka+aVS7qFw1s=\", false, function () {\n  return [useStripe, useElements, useSelector];\n});\n_c = CheckoutForm;\nvar _c;\n$RefreshReg$(_c, \"CheckoutForm\");","map":{"version":3,"names":["React","useEffect","useState","PaymentElement","LinkAuthenticationElement","useStripe","useElements","useSelector","selectOrderCurrent","jsxDEV","_jsxDEV","CheckoutForm","_s","stripe","elements","orderCurrent","email","setEmail","message","setMessage","isLoading","setIsLoading","clientSecret","URLSearchParams","window","location","search","get","retrievePaymentIntent","then","paymentIntent","status","handleSubmit","e","preventDefault","error","confirmPayment","confirmParams","return_url","id","type","paymentElementOptions","layout","onSubmit","children","onChange","_e$target","target","value","fileName","_jsxFileName","lineNumber","columnNumber","options","disabled","className","_c","$RefreshReg$"],"sources":["D:/Humber 2023/Semester 3/Capstone Project/urban_clothing_v1.0/src/pages/CheckoutForm.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  PaymentElement,\r\n  LinkAuthenticationElement,\r\n  useStripe,\r\n  useElements\r\n} from \"@stripe/react-stripe-js\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectOrderCurrent } from \"../features/order/orderSlice\";\r\n\r\nexport default function CheckoutForm() {\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n  const orderCurrent = useSelector(selectOrderCurrent);\r\n\r\n  const [email, setEmail] = useState('');\r\n  const [message, setMessage] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!stripe) {\r\n      return;\r\n    }\r\n\r\n    const clientSecret = new URLSearchParams(window.location.search).get(\r\n      \"payment_intent_client_secret\"\r\n    );\r\n\r\n    if (!clientSecret) {\r\n      return;\r\n    }\r\n\r\n    stripe.retrievePaymentIntent(clientSecret).then(({ paymentIntent }) => {\r\n      switch (paymentIntent.status) {\r\n        case \"succeeded\":\r\n          setMessage(\"Payment succeeded!\");\r\n          break;\r\n        case \"processing\":\r\n          setMessage(\"Your payment is processing.\");\r\n          break;\r\n        case \"requires_payment_method\":\r\n          setMessage(\"Your payment was not successful, please try again.\");\r\n          break;\r\n        default:\r\n          setMessage(\"Something went wrong.\");\r\n          break;\r\n      }\r\n    });\r\n  }, [stripe]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!stripe || !elements) {\r\n      // Stripe.js hasn't yet loaded.\r\n      // Make sure to disable form submission until Stripe.js has loaded.\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n\r\n    const { error } = await stripe.confirmPayment({\r\n      elements,\r\n      confirmParams: {\r\n        // Make sure to change this to your payment completion page\r\n        return_url: `http://localhost:3000/ordersuccess/${orderCurrent.id}`,\r\n      },\r\n    });\r\n\r\n    // This point will only be reached if there is an immediate error when\r\n    // confirming the payment. Otherwise, your customer will be redirected to\r\n    // your `return_url`. For some payment methods like iDEAL, your customer will\r\n    // be redirected to an intermediate site first to authorize the payment, then\r\n    // redirected to the `return_url`.\r\n    if (error.type === \"card_error\" || error.type === \"validation_error\") {\r\n      setMessage(error.message);\r\n    } else {\r\n      setMessage(\"An unexpected error occurred.\");\r\n    }\r\n\r\n    setIsLoading(false);\r\n  };\r\n\r\n  const paymentElementOptions = {\r\n    layout: \"tabs\"\r\n  }\r\n\r\n  return (\r\n    <form id=\"payment-form\" onSubmit={handleSubmit}>\r\n      <LinkAuthenticationElement\r\n        id=\"link-authentication-element\"\r\n        onChange={(e) => setEmail(e?.target?.value)}\r\n      />\r\n      <PaymentElement id=\"payment-element\" options={paymentElementOptions} />\r\n      <button disabled={isLoading || !stripe || !elements} id=\"submit\">\r\n        <span id=\"button-text\">\r\n          {isLoading ? <div className=\"spinner\" id=\"spinner\"></div> : \"Pay now\"}\r\n        </span>\r\n      </button>\r\n      {/* Show any error or success messages */}\r\n      {message && <div id=\"payment-message\">{message}</div>}\r\n    </form>\r\n  );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}