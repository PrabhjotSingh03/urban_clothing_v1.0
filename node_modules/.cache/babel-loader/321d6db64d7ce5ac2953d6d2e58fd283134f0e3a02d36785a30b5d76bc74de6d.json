{"ast":null,"code":"// import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\n// import { addToCart } from './cartAPI';\n\n// const initialState = {\n//   value: 0,\n//   items: [],\n// };\n\n// // export const addToCartAsync = createAsyncThunk(\n// //   'cart/addToCart',\n// //   async (item) => {\n// //     const response = await addToCart(item);\n// //     // The value we return becomes the `fulfilled` action payload\n// //     return response.data;\n// //   }\n// // );\n\n// export const counterSlice = createSlice({\n//   name: 'cart',\n//   initialState,\n//   // The `reducers` field lets us define reducers and generate associated actions\n//   reducers: {\n//     increment: (state) => {\n//       state.value += 1;\n//     },\n\n//   },\n//   // The `extraReducers` field lets the slice handle actions defined elsewhere,\n//   // including actions generated by createAsyncThunk or in other slices.\n//   extraReducers: (builder) => {\n//     builder\n//       .addCase(addToCartAsync.pending, (state) => {\n//         state.status = 'loading';\n//       })\n//       .addCase(addToCartAsync.fulfilled, (state, action) => {\n//         state.status = 'idle';\n//         state.items.push(action.payload);\n//       });\n//   },\n// });\n\n// export const { increment } = counterSlice.actions;\n\n// export const selectCount = (state) => state.counter.value;\n\n// export default counterSlice.reducer;","map":{"version":3,"names":[],"sources":["D:/Humber 2023/Semester 3/Capstone Project/urban_clothing_v1.0/src/features/cart/cartSlice.js"],"sourcesContent":["// import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\n// import { addToCart } from './cartAPI';\r\n\r\n// const initialState = {\r\n//   value: 0,\r\n//   items: [],\r\n// };\r\n\r\n\r\n// // export const addToCartAsync = createAsyncThunk(\r\n// //   'cart/addToCart',\r\n// //   async (item) => {\r\n// //     const response = await addToCart(item);\r\n// //     // The value we return becomes the `fulfilled` action payload\r\n// //     return response.data;\r\n// //   }\r\n// // );\r\n\r\n// export const counterSlice = createSlice({\r\n//   name: 'cart',\r\n//   initialState,\r\n//   // The `reducers` field lets us define reducers and generate associated actions\r\n//   reducers: {\r\n//     increment: (state) => {\r\n//       state.value += 1;\r\n//     },\r\n\r\n//   },\r\n//   // The `extraReducers` field lets the slice handle actions defined elsewhere,\r\n//   // including actions generated by createAsyncThunk or in other slices.\r\n//   extraReducers: (builder) => {\r\n//     builder\r\n//       .addCase(addToCartAsync.pending, (state) => {\r\n//         state.status = 'loading';\r\n//       })\r\n//       .addCase(addToCartAsync.fulfilled, (state, action) => {\r\n//         state.status = 'idle';\r\n//         state.items.push(action.payload);\r\n//       });\r\n//   },\r\n// });\r\n\r\n// export const { increment } = counterSlice.actions;\r\n\r\n// export const selectCount = (state) => state.counter.value;\r\n\r\n// export default counterSlice.reducer;\r\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}