{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { createUser } from './authAPI';\nconst initialState = {\n  value: 0,\n  status: 'idle'\n};\nexport const createUserAsync = createAsyncThunk('user/createUser', async userData => {\n  const response = await createUser(userData);\n  // The value we return becomes the `fulfilled` action payload\n  return response.data;\n});\nexport const counterSlice = createSlice({\n  name: 'user',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    increment: state => {\n      state.value += 1;\n    }\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: builder => {\n    builder.addCase(createUserAsync.pending, state => {\n      state.status = 'loading';\n    }).addCase(createUserAsync.fulfilled, (state, action) => {\n      state.status = 'idle';\n      state.loggedInUser += action.payload;\n    });\n  }\n});\nexport const selectLoggedInUser = state => state.auth.loggedInUser;\nexport const {\n  increment\n} = counterSlice.actions;\nexport default counterSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","createUser","initialState","value","status","createUserAsync","userData","response","data","counterSlice","name","reducers","increment","state","extraReducers","builder","addCase","pending","fulfilled","action","loggedInUser","payload","selectLoggedInUser","auth","actions","reducer"],"sources":["D:/Humber 2023/Semester 3/Capstone Project/urban_clothing_v1.0/src/features/auth/authSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport { createUser } from './authAPI';\r\n \r\nconst initialState = {\r\n  value: 0,\r\n  status: 'idle',\r\n};\r\n\r\n\r\nexport const createUserAsync = createAsyncThunk(\r\n  'user/createUser',\r\n  async (userData) => {\r\n    const response = await createUser(userData);\r\n    // The value we return becomes the `fulfilled` action payload\r\n    return response.data;\r\n  }\r\n);\r\n\r\nexport const counterSlice = createSlice({\r\n  name: 'user',\r\n  initialState,\r\n  // The `reducers` field lets us define reducers and generate associated actions\r\n  reducers: {\r\n    increment: (state) => {\r\n      state.value += 1;\r\n    },\r\n\r\n  },\r\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\r\n  // including actions generated by createAsyncThunk or in other slices.\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(createUserAsync.pending, (state) => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(createUserAsync.fulfilled, (state, action) => {\r\n        state.status = 'idle';\r\n        state.loggedInUser += action.payload;\r\n      });\r\n  },\r\n});\r\nexport const selectLoggedInUser = (state) => state.auth.loggedInUser;\r\nexport const { increment } = counterSlice.actions;\r\n\r\nexport default counterSlice.reducer;"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,SAASC,UAAU,QAAQ,WAAW;AAEtC,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,CAAC;EACRC,MAAM,EAAE;AACV,CAAC;AAGD,OAAO,MAAMC,eAAe,GAAGN,gBAAgB,CAC7C,iBAAiB,EACjB,MAAOO,QAAQ,IAAK;EAClB,MAAMC,QAAQ,GAAG,MAAMN,UAAU,CAACK,QAAQ,CAAC;EAC3C;EACA,OAAOC,QAAQ,CAACC,IAAI;AACtB,CACF,CAAC;AAED,OAAO,MAAMC,YAAY,GAAGT,WAAW,CAAC;EACtCU,IAAI,EAAE,MAAM;EACZR,YAAY;EACZ;EACAS,QAAQ,EAAE;IACRC,SAAS,EAAGC,KAAK,IAAK;MACpBA,KAAK,CAACV,KAAK,IAAI,CAAC;IAClB;EAEF,CAAC;EACD;EACA;EACAW,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACX,eAAe,CAACY,OAAO,EAAGJ,KAAK,IAAK;MAC3CA,KAAK,CAACT,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC,CACDY,OAAO,CAACX,eAAe,CAACa,SAAS,EAAE,CAACL,KAAK,EAAEM,MAAM,KAAK;MACrDN,KAAK,CAACT,MAAM,GAAG,MAAM;MACrBS,KAAK,CAACO,YAAY,IAAID,MAAM,CAACE,OAAO;IACtC,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AACF,OAAO,MAAMC,kBAAkB,GAAIT,KAAK,IAAKA,KAAK,CAACU,IAAI,CAACH,YAAY;AACpE,OAAO,MAAM;EAAER;AAAU,CAAC,GAAGH,YAAY,CAACe,OAAO;AAEjD,eAAef,YAAY,CAACgB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}