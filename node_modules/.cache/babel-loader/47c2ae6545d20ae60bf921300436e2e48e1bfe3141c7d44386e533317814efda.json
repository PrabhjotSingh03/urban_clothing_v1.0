{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { addToCart, fetchItemsByUserId, updateItem } from './cartAPI';\nconst initialState = {\n  value: 0,\n  items: [],\n  status: \"idle\"\n};\nexport const addToCartAsync = createAsyncThunk('cart/addToCart', async item => {\n  const response = await addToCart(item);\n  // The value we return becomes the `fulfilled` action payload\n  return response.data;\n});\nexport const fetchItemsByUserIdAsync = createAsyncThunk('cart/fetchItemsByUserId', async userId => {\n  const response = await fetchItemsByUserId(userId);\n  // The value we return becomes the `fulfilled` action payload\n  return response.data;\n});\nexport const updateItemAsync = createAsyncThunk('cart/updateItem', async item => {\n  const response = await updateItem(item);\n  // The value we return becomes the `fulfilled` action payload\n  return response.data;\n});\nexport const counterSlice = createSlice({\n  name: 'cart',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    increment: state => {\n      state.value += 1;\n    }\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: builder => {\n    builder.addCase(addToCartAsync.pending, state => {\n      state.status = 'loading';\n    }).addCase(addToCartAsync.fulfilled, (state, action) => {\n      state.status = 'idle';\n      state.items.push(action.payload);\n    }).addCase(fetchItemsByUserIdAsync.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchItemsByUserIdAsync.fulfilled, (state, action) => {\n      state.status = 'idle';\n      state.items = action.payload;\n    });\n  }\n});\nexport const {\n  increment\n} = counterSlice.actions;\nexport const selectItems = state => state.cart.items;\nexport default counterSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","addToCart","fetchItemsByUserId","updateItem","initialState","value","items","status","addToCartAsync","item","response","data","fetchItemsByUserIdAsync","userId","updateItemAsync","counterSlice","name","reducers","increment","state","extraReducers","builder","addCase","pending","fulfilled","action","push","payload","actions","selectItems","cart","reducer"],"sources":["D:/Humber 2023/Semester 3/Capstone Project/urban_clothing_v1.0/src/features/cart/cartSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport { addToCart, fetchItemsByUserId, updateItem } from './cartAPI';\r\n\r\nconst initialState = {\r\n  value: 0,\r\n  items: [],\r\n  status: \"idle\",\r\n};\r\n\r\n\r\nexport const addToCartAsync = createAsyncThunk(\r\n  'cart/addToCart',\r\n  async (item) => {\r\n    const response = await addToCart(item);\r\n    // The value we return becomes the `fulfilled` action payload\r\n    return response.data;\r\n  }\r\n);\r\n\r\nexport const fetchItemsByUserIdAsync = createAsyncThunk(\r\n  'cart/fetchItemsByUserId',\r\n  async (userId) => {\r\n    const response = await fetchItemsByUserId(userId);\r\n    // The value we return becomes the `fulfilled` action payload\r\n    return response.data;\r\n  }\r\n);\r\n\r\nexport const updateItemAsync = createAsyncThunk(\r\n  'cart/updateItem',\r\n  async (item) => {\r\n    const response = await updateItem(item);\r\n    // The value we return becomes the `fulfilled` action payload\r\n    return response.data;\r\n  }\r\n);\r\n\r\nexport const counterSlice = createSlice({\r\n  name: 'cart',\r\n  initialState,\r\n  // The `reducers` field lets us define reducers and generate associated actions\r\n  reducers: {\r\n    increment: (state) => {\r\n      state.value += 1;\r\n    },\r\n\r\n  },\r\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\r\n  // including actions generated by createAsyncThunk or in other slices.\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(addToCartAsync.pending, (state) => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(addToCartAsync.fulfilled, (state, action) => {\r\n        state.status = 'idle';\r\n        state.items.push(action.payload);\r\n      })\r\n      .addCase(fetchItemsByUserIdAsync.pending, (state) => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(fetchItemsByUserIdAsync.fulfilled, (state, action) => {\r\n        state.status = 'idle';\r\n        state.items = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { increment } = counterSlice.actions;\r\n\r\nexport const selectItems = (state) => state.cart.items;\r\n\r\nexport default counterSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,SAASC,SAAS,EAAEC,kBAAkB,EAAEC,UAAU,QAAQ,WAAW;AAErE,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,CAAC;EACRC,KAAK,EAAE,EAAE;EACTC,MAAM,EAAE;AACV,CAAC;AAGD,OAAO,MAAMC,cAAc,GAAGT,gBAAgB,CAC5C,gBAAgB,EAChB,MAAOU,IAAI,IAAK;EACd,MAAMC,QAAQ,GAAG,MAAMT,SAAS,CAACQ,IAAI,CAAC;EACtC;EACA,OAAOC,QAAQ,CAACC,IAAI;AACtB,CACF,CAAC;AAED,OAAO,MAAMC,uBAAuB,GAAGb,gBAAgB,CACrD,yBAAyB,EACzB,MAAOc,MAAM,IAAK;EAChB,MAAMH,QAAQ,GAAG,MAAMR,kBAAkB,CAACW,MAAM,CAAC;EACjD;EACA,OAAOH,QAAQ,CAACC,IAAI;AACtB,CACF,CAAC;AAED,OAAO,MAAMG,eAAe,GAAGf,gBAAgB,CAC7C,iBAAiB,EACjB,MAAOU,IAAI,IAAK;EACd,MAAMC,QAAQ,GAAG,MAAMP,UAAU,CAACM,IAAI,CAAC;EACvC;EACA,OAAOC,QAAQ,CAACC,IAAI;AACtB,CACF,CAAC;AAED,OAAO,MAAMI,YAAY,GAAGf,WAAW,CAAC;EACtCgB,IAAI,EAAE,MAAM;EACZZ,YAAY;EACZ;EACAa,QAAQ,EAAE;IACRC,SAAS,EAAGC,KAAK,IAAK;MACpBA,KAAK,CAACd,KAAK,IAAI,CAAC;IAClB;EAEF,CAAC;EACD;EACA;EACAe,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACd,cAAc,CAACe,OAAO,EAAGJ,KAAK,IAAK;MAC1CA,KAAK,CAACZ,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC,CACDe,OAAO,CAACd,cAAc,CAACgB,SAAS,EAAE,CAACL,KAAK,EAAEM,MAAM,KAAK;MACpDN,KAAK,CAACZ,MAAM,GAAG,MAAM;MACrBY,KAAK,CAACb,KAAK,CAACoB,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;IAClC,CAAC,CAAC,CACDL,OAAO,CAACV,uBAAuB,CAACW,OAAO,EAAGJ,KAAK,IAAK;MACnDA,KAAK,CAACZ,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC,CACDe,OAAO,CAACV,uBAAuB,CAACY,SAAS,EAAE,CAACL,KAAK,EAAEM,MAAM,KAAK;MAC7DN,KAAK,CAACZ,MAAM,GAAG,MAAM;MACrBY,KAAK,CAACb,KAAK,GAAGmB,MAAM,CAACE,OAAO;IAC9B,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAET;AAAU,CAAC,GAAGH,YAAY,CAACa,OAAO;AAEjD,OAAO,MAAMC,WAAW,GAAIV,KAAK,IAAKA,KAAK,CAACW,IAAI,CAACxB,KAAK;AAEtD,eAAeS,YAAY,CAACgB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}