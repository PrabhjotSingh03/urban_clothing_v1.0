{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { createUser, checkUser, signOut } from \"./authAPI\";\nimport { updateUser } from \"../user/userAPI\";\nconst initialState = {\n  value: 0,\n  status: \"idle\",\n  loggedInUser: null,\n  error: null\n};\nexport const createUserAsync = createAsyncThunk(\"user/createUser\", async userData => {\n  const response = await createUser(userData);\n  // The value we return becomes the `fulfilled` action payload\n  return response.data;\n});\nexport const checkUserAsync = createAsyncThunk(\"user/checkUser\", async (loginInfo, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await checkUser(loginInfo);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  } catch (error) {\n    console.log(error);\n    return rejectWithValue(error);\n  }\n});\nexport const updateUserAsync = createAsyncThunk(\"user/updateUser\", async user => {\n  const response = await updateUser(user);\n  // The value we return becomes the `fulfilled` action payload\n  return response.data;\n});\nexport const signOutAsync = createAsyncThunk(\"user/signOut\", async loginInfo => {\n  const response = await signOut(loginInfo);\n  // The value we return becomes the `fulfilled` action payload\n  return response.data;\n});\nexport const authSlice = createSlice({\n  name: \"user\",\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    increment: state => {\n      state.value += 1;\n    }\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: builder => {\n    builder.addCase(createUserAsync.pending, state => {\n      state.status = \"loading\";\n    }).addCase(createUserAsync.fulfilled, (state, action) => {\n      state.status = \"idle\";\n      state.loggedInUser = action.payload;\n    }).addCase(checkUserAsync.pending, state => {\n      state.status = \"loading\";\n    }).addCase(checkUserAsync.fulfilled, (state, action) => {\n      state.status = \"idle\";\n      state.loggedInUser = action.payload;\n    }).addCase(checkUserAsync.rejected, (state, action) => {\n      state.status = \"idle\";\n      state.error = action.payload;\n    }).addCase(signOutAsync.pending, state => {\n      state.status = \"loading\";\n    }).addCase(signOutAsync.fulfilled, (state, action) => {\n      state.status = \"idle\";\n      state.loggedInUser = null;\n    });\n  }\n});\nexport const selectLoggedInUser = state => state.auth.loggedInUser;\nexport const {\n  increment\n} = authSlice.actions;\nexport default authSlice.reducer;\nexport const selectError = state => state.auth.error;","map":{"version":3,"names":["createAsyncThunk","createSlice","createUser","checkUser","signOut","updateUser","initialState","value","status","loggedInUser","error","createUserAsync","userData","response","data","checkUserAsync","loginInfo","rejectWithValue","console","log","updateUserAsync","user","signOutAsync","authSlice","name","reducers","increment","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","selectLoggedInUser","auth","actions","reducer","selectError"],"sources":["D:/Humber 2023/Semester 3/Capstone Project/urban_clothing_v1.0/src/features/auth/authSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport { createUser, checkUser, signOut } from \"./authAPI\";\r\nimport { updateUser } from \"../user/userAPI\";\r\n\r\nconst initialState = {\r\n  value: 0,\r\n  status: \"idle\",\r\n  loggedInUser: null,\r\n  error: null,\r\n};\r\n\r\nexport const createUserAsync = createAsyncThunk(\r\n  \"user/createUser\",\r\n  async (userData) => {\r\n    const response = await createUser(userData);\r\n    // The value we return becomes the `fulfilled` action payload\r\n    return response.data;\r\n  }\r\n);\r\n\r\nexport const checkUserAsync = createAsyncThunk(\r\n  \"user/checkUser\",\r\n  async (loginInfo, {rejectWithValue}) => {\r\n    try {\r\n      const response = await checkUser(loginInfo);\r\n      // The value we return becomes the `fulfilled` action payload\r\n      return response.data;\r\n    } catch (error) {\r\n      console.log(error);\r\n      return rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\n\r\nexport const updateUserAsync = createAsyncThunk(\r\n  \"user/updateUser\",\r\n  async (user) => {\r\n    const response = await updateUser(user);\r\n    // The value we return becomes the `fulfilled` action payload\r\n    return response.data;\r\n  }\r\n);\r\n\r\nexport const signOutAsync = createAsyncThunk(\r\n  \"user/signOut\",\r\n  async (loginInfo) => {\r\n    const response = await signOut(loginInfo);\r\n    // The value we return becomes the `fulfilled` action payload\r\n    return response.data;\r\n  }\r\n);\r\n\r\nexport const authSlice = createSlice({\r\n  name: \"user\",\r\n  initialState,\r\n  // The `reducers` field lets us define reducers and generate associated actions\r\n  reducers: {\r\n    increment: (state) => {\r\n      state.value += 1;\r\n    },\r\n  },\r\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\r\n  // including actions generated by createAsyncThunk or in other slices.\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(createUserAsync.pending, (state) => {\r\n        state.status = \"loading\";\r\n      })\r\n      .addCase(createUserAsync.fulfilled, (state, action) => {\r\n        state.status = \"idle\";\r\n        state.loggedInUser = action.payload;\r\n      })\r\n      .addCase(checkUserAsync.pending, (state) => {\r\n        state.status = \"loading\";\r\n      })\r\n      .addCase(checkUserAsync.fulfilled, (state, action) => {\r\n        state.status = \"idle\";\r\n        state.loggedInUser = action.payload;\r\n      })\r\n      .addCase(checkUserAsync.rejected, (state, action) => {\r\n        state.status = \"idle\";\r\n        state.error = action.payload;\r\n      })\r\n      .addCase(signOutAsync.pending, (state) => {\r\n        state.status = \"loading\";\r\n      })\r\n      .addCase(signOutAsync.fulfilled, (state, action) => {\r\n        state.status = \"idle\";\r\n        state.loggedInUser = null;\r\n      });\r\n  },\r\n});\r\nexport const selectLoggedInUser = (state) => state.auth.loggedInUser;\r\nexport const { increment } = authSlice.actions;\r\nexport default authSlice.reducer;\r\nexport const selectError = (state) => state.auth.error;\r\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,SAASC,UAAU,EAAEC,SAAS,EAAEC,OAAO,QAAQ,WAAW;AAC1D,SAASC,UAAU,QAAQ,iBAAiB;AAE5C,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,CAAC;EACRC,MAAM,EAAE,MAAM;EACdC,YAAY,EAAE,IAAI;EAClBC,KAAK,EAAE;AACT,CAAC;AAED,OAAO,MAAMC,eAAe,GAAGX,gBAAgB,CAC7C,iBAAiB,EACjB,MAAOY,QAAQ,IAAK;EAClB,MAAMC,QAAQ,GAAG,MAAMX,UAAU,CAACU,QAAQ,CAAC;EAC3C;EACA,OAAOC,QAAQ,CAACC,IAAI;AACtB,CACF,CAAC;AAED,OAAO,MAAMC,cAAc,GAAGf,gBAAgB,CAC5C,gBAAgB,EAChB,OAAOgB,SAAS,EAAE;EAACC;AAAe,CAAC,KAAK;EACtC,IAAI;IACF,MAAMJ,QAAQ,GAAG,MAAMV,SAAS,CAACa,SAAS,CAAC;IAC3C;IACA,OAAOH,QAAQ,CAACC,IAAI;EACtB,CAAC,CAAC,OAAOJ,KAAK,EAAE;IACdQ,OAAO,CAACC,GAAG,CAACT,KAAK,CAAC;IAClB,OAAOO,eAAe,CAACP,KAAK,CAAC;EAC/B;AACF,CACF,CAAC;AAED,OAAO,MAAMU,eAAe,GAAGpB,gBAAgB,CAC7C,iBAAiB,EACjB,MAAOqB,IAAI,IAAK;EACd,MAAMR,QAAQ,GAAG,MAAMR,UAAU,CAACgB,IAAI,CAAC;EACvC;EACA,OAAOR,QAAQ,CAACC,IAAI;AACtB,CACF,CAAC;AAED,OAAO,MAAMQ,YAAY,GAAGtB,gBAAgB,CAC1C,cAAc,EACd,MAAOgB,SAAS,IAAK;EACnB,MAAMH,QAAQ,GAAG,MAAMT,OAAO,CAACY,SAAS,CAAC;EACzC;EACA,OAAOH,QAAQ,CAACC,IAAI;AACtB,CACF,CAAC;AAED,OAAO,MAAMS,SAAS,GAAGtB,WAAW,CAAC;EACnCuB,IAAI,EAAE,MAAM;EACZlB,YAAY;EACZ;EACAmB,QAAQ,EAAE;IACRC,SAAS,EAAGC,KAAK,IAAK;MACpBA,KAAK,CAACpB,KAAK,IAAI,CAAC;IAClB;EACF,CAAC;EACD;EACA;EACAqB,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACnB,eAAe,CAACoB,OAAO,EAAGJ,KAAK,IAAK;MAC3CA,KAAK,CAACnB,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC,CACDsB,OAAO,CAACnB,eAAe,CAACqB,SAAS,EAAE,CAACL,KAAK,EAAEM,MAAM,KAAK;MACrDN,KAAK,CAACnB,MAAM,GAAG,MAAM;MACrBmB,KAAK,CAAClB,YAAY,GAAGwB,MAAM,CAACC,OAAO;IACrC,CAAC,CAAC,CACDJ,OAAO,CAACf,cAAc,CAACgB,OAAO,EAAGJ,KAAK,IAAK;MAC1CA,KAAK,CAACnB,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC,CACDsB,OAAO,CAACf,cAAc,CAACiB,SAAS,EAAE,CAACL,KAAK,EAAEM,MAAM,KAAK;MACpDN,KAAK,CAACnB,MAAM,GAAG,MAAM;MACrBmB,KAAK,CAAClB,YAAY,GAAGwB,MAAM,CAACC,OAAO;IACrC,CAAC,CAAC,CACDJ,OAAO,CAACf,cAAc,CAACoB,QAAQ,EAAE,CAACR,KAAK,EAAEM,MAAM,KAAK;MACnDN,KAAK,CAACnB,MAAM,GAAG,MAAM;MACrBmB,KAAK,CAACjB,KAAK,GAAGuB,MAAM,CAACC,OAAO;IAC9B,CAAC,CAAC,CACDJ,OAAO,CAACR,YAAY,CAACS,OAAO,EAAGJ,KAAK,IAAK;MACxCA,KAAK,CAACnB,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC,CACDsB,OAAO,CAACR,YAAY,CAACU,SAAS,EAAE,CAACL,KAAK,EAAEM,MAAM,KAAK;MAClDN,KAAK,CAACnB,MAAM,GAAG,MAAM;MACrBmB,KAAK,CAAClB,YAAY,GAAG,IAAI;IAC3B,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AACF,OAAO,MAAM2B,kBAAkB,GAAIT,KAAK,IAAKA,KAAK,CAACU,IAAI,CAAC5B,YAAY;AACpE,OAAO,MAAM;EAAEiB;AAAU,CAAC,GAAGH,SAAS,CAACe,OAAO;AAC9C,eAAef,SAAS,CAACgB,OAAO;AAChC,OAAO,MAAMC,WAAW,GAAIb,KAAK,IAAKA,KAAK,CAACU,IAAI,CAAC3B,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}