{"ast":null,"code":"export function addProductToCart(item) {\n  return new Promise(async resolve => {\n    const response = await fetch(\"http://localhost:8000/cart\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(item)\n    });\n    const data = await response.json();\n    resolve({\n      data\n    });\n  });\n}\nexport function fetchProductsByUserId(userId) {\n  return new Promise(async resolve => {\n    const response = await fetch(\"http://localhost:8000/cart?user=\" + userId);\n    const data = await response.json();\n    resolve({\n      data\n    });\n  });\n}\nexport function updateCart(update) {\n  return new Promise(async resolve => {\n    const response = await fetch(\"http://localhost:8000/cart/\" + update.id, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(update)\n    });\n    const data = await response.json();\n    resolve({\n      data\n    });\n  });\n}\nexport function deleteProductFromCart(itemId) {\n  return new Promise(async resolve => {\n    const response = await fetch(\"http://localhost:8000/cart/\" + itemId, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const data = await response.json();\n    resolve({\n      data: {\n        id: itemId\n      }\n    });\n  });\n}\nexport function cartReset(userId) {\n  return new Promise(async resolve => {\n    const response = await fetchProductsByUserId(userId);\n    const items = response.data;\n    for (let item of items) {\n      await deleteProductFromCart(item.id);\n    }\n    resolve({\n      status: \"success\"\n    });\n  });\n}","map":{"version":3,"names":["addProductToCart","item","Promise","resolve","response","fetch","method","headers","body","JSON","stringify","data","json","fetchProductsByUserId","userId","updateCart","update","id","deleteProductFromCart","itemId","cartReset","items","status"],"sources":["D:/Humber 2023/Semester 3/Capstone Project/urban_clothing_v1.0/src/features/cart/cartAPI.js"],"sourcesContent":["export function addProductToCart(item) {\r\n  return new Promise(async (resolve) => {\r\n    const response = await fetch(\"http://localhost:8000/cart\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(item),\r\n    });\r\n    const data = await response.json();\r\n    resolve({ data });\r\n  });\r\n}\r\n\r\nexport function fetchProductsByUserId(userId) {\r\n  return new Promise(async (resolve) => {\r\n    const response = await fetch(\"http://localhost:8000/cart?user=\" + userId);\r\n    const data = await response.json();\r\n    resolve({ data });\r\n  });\r\n}\r\n\r\nexport function updateCart(update) {\r\n  return new Promise(async (resolve) => {\r\n    const response = await fetch(\"http://localhost:8000/cart/\" + update.id, {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(update),\r\n    });\r\n    const data = await response.json();\r\n    resolve({ data });\r\n  });\r\n}\r\n\r\nexport function deleteProductFromCart(itemId) {\r\n  return new Promise(async (resolve) => {\r\n    const response = await fetch(\"http://localhost:8000/cart/\" + itemId, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n    const data = await response.json();\r\n    resolve({ data: { id: itemId } });\r\n  });\r\n}\r\n\r\nexport function cartReset(userId) {\r\n  return new Promise(async (resolve) => {\r\n    const response = await fetchProductsByUserId(userId);\r\n    const items = response.data;\r\n    for (let item of items) {\r\n      await deleteProductFromCart(item.id);\r\n    }\r\n    resolve({status:\"success\"});\r\n  });\r\n}\r\n"],"mappings":"AAAA,OAAO,SAASA,gBAAgBA,CAACC,IAAI,EAAE;EACrC,OAAO,IAAIC,OAAO,CAAC,MAAOC,OAAO,IAAK;IACpC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4BAA4B,EAAE;MACzDC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACT,IAAI;IAC3B,CAAC,CAAC;IACF,MAAMU,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAClCT,OAAO,CAAC;MAAEQ;IAAK,CAAC,CAAC;EACnB,CAAC,CAAC;AACJ;AAEA,OAAO,SAASE,qBAAqBA,CAACC,MAAM,EAAE;EAC5C,OAAO,IAAIZ,OAAO,CAAC,MAAOC,OAAO,IAAK;IACpC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,GAAGS,MAAM,CAAC;IACzE,MAAMH,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAClCT,OAAO,CAAC;MAAEQ;IAAK,CAAC,CAAC;EACnB,CAAC,CAAC;AACJ;AAEA,OAAO,SAASI,UAAUA,CAACC,MAAM,EAAE;EACjC,OAAO,IAAId,OAAO,CAAC,MAAOC,OAAO,IAAK;IACpC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,GAAGW,MAAM,CAACC,EAAE,EAAE;MACtEX,MAAM,EAAE,OAAO;MACfC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACM,MAAM;IAC7B,CAAC,CAAC;IACF,MAAML,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAClCT,OAAO,CAAC;MAAEQ;IAAK,CAAC,CAAC;EACnB,CAAC,CAAC;AACJ;AAEA,OAAO,SAASO,qBAAqBA,CAACC,MAAM,EAAE;EAC5C,OAAO,IAAIjB,OAAO,CAAC,MAAOC,OAAO,IAAK;IACpC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,GAAGc,MAAM,EAAE;MACnEb,MAAM,EAAE,QAAQ;MAChBC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IACF,MAAMI,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAClCT,OAAO,CAAC;MAAEQ,IAAI,EAAE;QAAEM,EAAE,EAAEE;MAAO;IAAE,CAAC,CAAC;EACnC,CAAC,CAAC;AACJ;AAEA,OAAO,SAASC,SAASA,CAACN,MAAM,EAAE;EAChC,OAAO,IAAIZ,OAAO,CAAC,MAAOC,OAAO,IAAK;IACpC,MAAMC,QAAQ,GAAG,MAAMS,qBAAqB,CAACC,MAAM,CAAC;IACpD,MAAMO,KAAK,GAAGjB,QAAQ,CAACO,IAAI;IAC3B,KAAK,IAAIV,IAAI,IAAIoB,KAAK,EAAE;MACtB,MAAMH,qBAAqB,CAACjB,IAAI,CAACgB,EAAE,CAAC;IACtC;IACAd,OAAO,CAAC;MAACmB,MAAM,EAAC;IAAS,CAAC,CAAC;EAC7B,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}