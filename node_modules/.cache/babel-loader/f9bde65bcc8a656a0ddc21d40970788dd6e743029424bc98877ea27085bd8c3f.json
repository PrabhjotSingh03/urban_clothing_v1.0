{"ast":null,"code":"export function fetchAllProducts() {\n  return new Promise(async resolve => {\n    const response = await fetch('http://localhost:8000/products');\n    const data = await response.json();\n    resolve({\n      data\n    });\n  });\n}\nexport function fetchProductById(id) {\n  return new Promise(async resolve => {\n    const response = await fetch('http://localhost:8000/products/' + id);\n    const data = await response.json();\n    resolve({\n      data\n    });\n  });\n}\nexport function fetchProductsByFilters(filter, sort, pagination) {\n  let queryString = '';\n  for (let key in filter) {\n    const categoryValues = filter[key];\n    if (categoryValues.length) {\n      const lastCategoryValue = categoryValues[categoryValues.length - 1];\n      queryString += `${key}=${lastCategoryValue}&`;\n    }\n  }\n  for (let key in sort) {\n    queryString += `${key}=${sort[key]}&`;\n  }\n  for (let key in pagination) {\n    queryString += `${key}=${pagination[key]}&`;\n  }\n  return new Promise(async resolve => {\n    const response = await fetch('http://localhost:8000/products?' + queryString);\n    const data = await response.json();\n    const totalItems = await response.headers.get('X-Total-Count');\n    resolve({\n      data: {\n        products: data,\n        totalItems: +totalItems\n      }\n    });\n  });\n}\nexport function fetchCategories() {\n  return new Promise(async resolve => {\n    const response = await fetch('http://localhost:8000/categories');\n    const data = await response.json();\n    resolve({\n      data\n    });\n  });\n}\nexport function fetchBrands() {\n  return new Promise(async resolve => {\n    const response = await fetch('http://localhost:8000/brands');\n    const data = await response.json();\n    resolve({\n      data\n    });\n  });\n}\nexport function productCreate(product) {\n  return new Promise(async resolve => {\n    const response = await fetch('http://localhost:8000/products/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(product)\n    });\n    const data = await response.json();\n    resolve({\n      data\n    });\n  });\n}\nexport function productUpdate(update) {\n  return new Promise(async resolve => {\n    const response = await fetch(\"http://localhost:8000/products/\" + update.id, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(update)\n    });\n    const data = await response.json();\n    resolve({\n      data\n    });\n  });\n}","map":{"version":3,"names":["fetchAllProducts","Promise","resolve","response","fetch","data","json","fetchProductById","id","fetchProductsByFilters","filter","sort","pagination","queryString","key","categoryValues","length","lastCategoryValue","totalItems","headers","get","products","fetchCategories","fetchBrands","productCreate","product","method","body","JSON","stringify","productUpdate","update"],"sources":["D:/Humber 2023/Semester 3/Capstone Project/urban_clothing_v1.0/src/features/product-list/productAPI.js"],"sourcesContent":["export function fetchAllProducts() {\r\n  return new Promise(async(resolve) =>{\r\n    const response = await fetch('http://localhost:8000/products');\r\n    const data = await response.json();\r\n    resolve({data});\r\n  }\r\n  );\r\n}\r\n\r\nexport function fetchProductById(id) {\r\n  return new Promise(async(resolve) =>{\r\n    const response = await fetch('http://localhost:8000/products/' + id);\r\n    const data = await response.json();\r\n    resolve({data});\r\n  }\r\n  );\r\n}\r\n\r\nexport function fetchProductsByFilters(filter,sort,pagination) {\r\n  let queryString = '';\r\n  for(let key in filter){\r\n    const categoryValues = filter[key];\r\n    if(categoryValues.length){\r\n      const lastCategoryValue = categoryValues[categoryValues.length-1];\r\n      queryString += `${key}=${lastCategoryValue}&`\r\n    }\r\n  }\r\n\r\n  for(let key in sort){\r\n    queryString += `${key}=${sort[key]}&`\r\n  }\r\n\r\n  for(let key in pagination){\r\n    queryString += `${key}=${pagination[key]}&`\r\n  }\r\n\r\n\r\n  return new Promise(async(resolve) =>{\r\n    const response = await fetch('http://localhost:8000/products?' + queryString);\r\n    const data = await response.json();\r\n    const totalItems = await response.headers.get('X-Total-Count');\r\n    resolve({data:{products:data,totalItems:+totalItems}});\r\n  }\r\n  );\r\n}\r\n\r\nexport function fetchCategories() {\r\n  return new Promise(async(resolve) =>{\r\n    const response = await fetch('http://localhost:8000/categories')\r\n    const data = await response.json();\r\n    resolve({data});\r\n  }\r\n  );\r\n}\r\nexport function fetchBrands() {\r\n  return new Promise(async(resolve) =>{\r\n    const response = await fetch('http://localhost:8000/brands')\r\n    const data = await response.json();\r\n    resolve({data});\r\n  }\r\n  );\r\n}\r\n\r\nexport function productCreate(product) {\r\n  return new Promise(async(resolve) =>{\r\n    const response = await fetch('http://localhost:8000/products/',{\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(product)\r\n    });\r\n    const data = await response.json();\r\n    resolve({data});\r\n  }\r\n  );\r\n}\r\n\r\nexport function productUpdate(update) {\r\n  return new Promise(async (resolve) => {\r\n    const response = await fetch(\"http://localhost:8000/products/\" + update.id, {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(update),\r\n    });\r\n    const data = await response.json();\r\n    resolve({ data });\r\n  });\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}