{"ast":null,"code":"export function createOrder(order) {\n  return new Promise(async resolve => {\n    const response = await fetch(\"http://localhost:8000/orders\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(order)\n    });\n    const data = await response.json();\n    resolve({\n      data\n    });\n  });\n}\nexport function fetchAllOrders(sort, pagination) {\n  let queryString = \"\";\n  for (let key in sort) {\n    queryString += `${key}=${sort[key]}&`;\n  }\n  for (let key in pagination) {\n    queryString += `${key}=${pagination[key]}&`;\n  }\n  return new Promise(async resolve => {\n    const response = await fetch(\"http://localhost:8000/orders?\" + queryString);\n    const data = await response.json();\n    const totalOrders = await response.headers.get(\"X-Total-Count\");\n    resolve({\n      data: {\n        orders: data,\n        totalOrders: +totalOrders\n      }\n    });\n  });\n}\nexport function orderUpdate(order) {\n  return new Promise(async resolve => {\n    const response = await fetch(\"http://localhost:8000/orders/\" + order.id, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(order)\n    });\n    const data = await response.json();\n    resolve({\n      data\n    });\n  });\n}","map":{"version":3,"names":["createOrder","order","Promise","resolve","response","fetch","method","headers","body","JSON","stringify","data","json","fetchAllOrders","sort","pagination","queryString","key","totalOrders","get","orders","orderUpdate","id"],"sources":["D:/Humber 2023/Semester 3/Capstone Project/urban_clothing_v1.0/src/features/order/orderAPI.js"],"sourcesContent":["export function createOrder(order) {\r\n  return new Promise(async (resolve) => {\r\n    const response = await fetch(\"http://localhost:8000/orders\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(order),\r\n    });\r\n    const data = await response.json();\r\n    resolve({ data });\r\n  });\r\n}\r\n\r\nexport function fetchAllOrders(sort, pagination) {\r\n  let queryString = \"\";\r\n\r\n  for (let key in sort) {\r\n    queryString += `${key}=${sort[key]}&`;\r\n  }\r\n\r\n  for (let key in pagination) {\r\n    queryString += `${key}=${pagination[key]}&`;\r\n  }\r\n  return new Promise(async (resolve) => {\r\n    const response = await fetch(\"http://localhost:8000/orders?\" + queryString);\r\n    const data = await response.json();\r\n    const totalOrders = await response.headers.get(\"X-Total-Count\");\r\n    resolve({ data: { orders: data, totalOrders: +totalOrders } });\r\n  });\r\n}\r\n\r\nexport function orderUpdate(order) {\r\n  return new Promise(async (resolve) => {\r\n    const response = await fetch(\"http://localhost:8000/orders/\" + order.id, {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(order),\r\n    });\r\n    const data = await response.json();\r\n    resolve({ data });\r\n  });\r\n}\r\n"],"mappings":"AAAA,OAAO,SAASA,WAAWA,CAACC,KAAK,EAAE;EACjC,OAAO,IAAIC,OAAO,CAAC,MAAOC,OAAO,IAAK;IACpC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;MAC3DC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACT,KAAK;IAC5B,CAAC,CAAC;IACF,MAAMU,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAClCT,OAAO,CAAC;MAAEQ;IAAK,CAAC,CAAC;EACnB,CAAC,CAAC;AACJ;AAEA,OAAO,SAASE,cAAcA,CAACC,IAAI,EAAEC,UAAU,EAAE;EAC/C,IAAIC,WAAW,GAAG,EAAE;EAEpB,KAAK,IAAIC,GAAG,IAAIH,IAAI,EAAE;IACpBE,WAAW,IAAK,GAAEC,GAAI,IAAGH,IAAI,CAACG,GAAG,CAAE,GAAE;EACvC;EAEA,KAAK,IAAIA,GAAG,IAAIF,UAAU,EAAE;IAC1BC,WAAW,IAAK,GAAEC,GAAI,IAAGF,UAAU,CAACE,GAAG,CAAE,GAAE;EAC7C;EACA,OAAO,IAAIf,OAAO,CAAC,MAAOC,OAAO,IAAK;IACpC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGW,WAAW,CAAC;IAC3E,MAAML,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAClC,MAAMM,WAAW,GAAG,MAAMd,QAAQ,CAACG,OAAO,CAACY,GAAG,CAAC,eAAe,CAAC;IAC/DhB,OAAO,CAAC;MAAEQ,IAAI,EAAE;QAAES,MAAM,EAAET,IAAI;QAAEO,WAAW,EAAE,CAACA;MAAY;IAAE,CAAC,CAAC;EAChE,CAAC,CAAC;AACJ;AAEA,OAAO,SAASG,WAAWA,CAACpB,KAAK,EAAE;EACjC,OAAO,IAAIC,OAAO,CAAC,MAAOC,OAAO,IAAK;IACpC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGJ,KAAK,CAACqB,EAAE,EAAE;MACvEhB,MAAM,EAAE,OAAO;MACfC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACT,KAAK;IAC5B,CAAC,CAAC;IACF,MAAMU,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAClCT,OAAO,CAAC;MAAEQ;IAAK,CAAC,CAAC;EACnB,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}