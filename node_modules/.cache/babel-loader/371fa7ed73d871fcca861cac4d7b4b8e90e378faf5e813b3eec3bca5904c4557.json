{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { fetchAllProducts, fetchProductsByFilters, fetchBrands, fetchCategories } from './productAPI';\nconst initialState = {\n  products: [],\n  brands: [],\n  categories: [],\n  status: 'idle',\n  totalItems: 0,\n  selectedProduct: null\n};\nexport const fetchAllProductsAsync = createAsyncThunk('product/fetchAllProducts', async () => {\n  const response = await fetchAllProducts();\n  // The value we return becomes the `fulfilled` action payload\n  return response.data;\n});\nexport const fetchAllProductByIdAsync = createAsyncThunk('product/fetchProductById', async id => {\n  const response = await fetchProductById(id);\n  // The value we return becomes the `fulfilled` action payload\n  return response.data;\n});\nexport const fetchProductsByFiltersAsync = createAsyncThunk('product/fetchProductsByFilters', async ({\n  filter,\n  sort,\n  pagination\n}) => {\n  const response = await fetchProductsByFilters(filter, sort, pagination);\n  // The value we return becomes the `fulfilled` action payload\n  return response.data;\n});\nexport const fetchBrandsAsync = createAsyncThunk('product/fetchBrands', async () => {\n  const response = await fetchBrands();\n  // The value we return becomes the `fulfilled` action payload\n  return response.data;\n});\nexport const fetchCategoriesAsync = createAsyncThunk('product/fetchCategories', async () => {\n  const response = await fetchCategories();\n  // The value we return becomes the `fulfilled` action payload\n  return response.data;\n});\nexport const productSlice = createSlice({\n  name: 'product',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    increment: state => {\n      state.value += 1;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchAllProductsAsync.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchAllProductsAsync.fulfilled, (state, action) => {\n      state.status = 'idle';\n      state.products = action.payload;\n    }).addCase(fetchProductsByFiltersAsync.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchProductsByFiltersAsync.fulfilled, (state, action) => {\n      state.status = 'idle';\n      state.products = action.payload.products;\n      state.totalItems = action.payload.totalItems;\n    }).addCase(fetchBrandsAsync.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchBrandsAsync.fulfilled, (state, action) => {\n      state.status = 'idle';\n      state.brands = action.payload;\n    }).addCase(fetchCategoriesAsync.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchCategoriesAsync.fulfilled, (state, action) => {\n      state.status = 'idle';\n      state.categories = action.payload;\n    }).addCase(fetchAllProductByIdAsync.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchAllProductByIdAsync.fulfilled, (state, action) => {\n      state.status = 'idle';\n      state.selectedProduct = action.payload;\n    });\n  }\n});\nexport const {\n  increment\n} = productSlice.actions;\nexport const selectAllProducts = state => state.product.products;\nexport const selectBrands = state => state.product.brands;\nexport const selectCategories = state => state.product.categories;\nexport const selectProductById = state => state.product.selectedProduct;\nexport const selectTotalItems = state => state.product.totalItems;\nexport default productSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","fetchAllProducts","fetchProductsByFilters","fetchBrands","fetchCategories","initialState","products","brands","categories","status","totalItems","selectedProduct","fetchAllProductsAsync","response","data","fetchAllProductByIdAsync","id","fetchProductById","fetchProductsByFiltersAsync","filter","sort","pagination","fetchBrandsAsync","fetchCategoriesAsync","productSlice","name","reducers","increment","state","value","extraReducers","builder","addCase","pending","fulfilled","action","payload","actions","selectAllProducts","product","selectBrands","selectCategories","selectProductById","selectTotalItems","reducer"],"sources":["F:/Humber 2023/Semester 3/Capstone Project/urban_clothing_v1.0/src/features/product-list/productSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { fetchAllProducts, fetchProductsByFilters,fetchBrands, fetchCategories } from './productAPI';\n\nconst initialState = {\n  products: [],\n  brands: [],\n  categories: [],\n  status: 'idle',\n  totalItems:0,\n  selectedProduct:null\n};\n\n\nexport const fetchAllProductsAsync = createAsyncThunk(\n  'product/fetchAllProducts',\n  async () => {\n    const response = await fetchAllProducts();\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const fetchAllProductByIdAsync = createAsyncThunk(\n  'product/fetchProductById',\n  async (id) => {\n    const response = await fetchProductById(id);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const fetchProductsByFiltersAsync = createAsyncThunk(\n  'product/fetchProductsByFilters',\n  async ({filter,sort,pagination}) => {\n    const response = await fetchProductsByFilters(filter,sort,pagination);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const fetchBrandsAsync = createAsyncThunk(\n  'product/fetchBrands',\n  async () => {\n    const response = await fetchBrands();\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const fetchCategoriesAsync = createAsyncThunk(\n  'product/fetchCategories',\n  async () => {\n    const response = await fetchCategories();\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const productSlice = createSlice({\n  name: 'product',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    increment: (state) => {\n      state.value += 1;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchAllProductsAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(fetchAllProductsAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.products = action.payload;\n      })\n      .addCase(fetchProductsByFiltersAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(fetchProductsByFiltersAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.products = action.payload.products;\n        state.totalItems = action.payload.totalItems;\n      })\n      .addCase(fetchBrandsAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(fetchBrandsAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.brands = action.payload;\n      })\n      .addCase(fetchCategoriesAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(fetchCategoriesAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.categories = action.payload;\n      })\n      .addCase(fetchAllProductByIdAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(fetchAllProductByIdAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.selectedProduct = action.payload;\n      })\n  },\n});\n\nexport const { increment } = productSlice.actions;\n\nexport const selectAllProducts = (state) => state.product.products;\nexport const selectBrands = (state) => state.product.brands;\nexport const selectCategories = (state) => state.product.categories;\nexport const selectProductById = (state) => state.product.selectedProduct;\nexport const selectTotalItems = (state) => state.product.totalItems;\n\nexport default productSlice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}