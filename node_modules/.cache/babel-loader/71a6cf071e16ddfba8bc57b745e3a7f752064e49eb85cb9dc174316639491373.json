{"ast":null,"code":"import { isRejected } from \"@reduxjs/toolkit\";\nexport function createUser(userData) {\n  return new Promise(async resolve => {\n    const response = await fetch(\"http://localhost:8000/auth/signup\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(userData)\n    });\n    const data = await response.json();\n    resolve({\n      data\n    });\n  });\n}\nexport function checkUser(loginInfo) {\n  return new Promise(async (resolve, reject) => {\n    const email = loginInfo.email;\n    const password = loginInfo.password;\n    // try {\n    const response = await fetch(\"http://localhost:8000/auth/login\");\n    //   if (response.ok) {\n    //     const data = await response.json();\n    //     resolve({ data });\n    //   } else {\n    //     const error = await response.json();\n    //     reject(error);\n    //   }\n    // } catch (error) {\n    //   reject(error);\n    // }\n    const data = await response.json();\n    console.log({\n      data\n    });\n    if (data.length) {\n      if (password === data[0].password) {\n        resolve({\n          data: data[0]\n        });\n      } else {\n        reject({\n          message: 'User not found'\n        });\n      }\n    } else {\n      reject({\n        message: 'User not found'\n      });\n    }\n  });\n}\nexport function signOut(userId) {\n  return new Promise(async resolve => {\n    resolve({\n      data: \"successfully signed out\"\n    });\n  });\n}","map":{"version":3,"names":["isRejected","createUser","userData","Promise","resolve","response","fetch","method","headers","body","JSON","stringify","data","json","checkUser","loginInfo","reject","email","password","console","log","length","message","signOut","userId"],"sources":["D:/Humber 2023/Semester 3/Capstone Project/urban_clothing_v1.0/src/features/auth/authAPI.js"],"sourcesContent":["import { isRejected } from \"@reduxjs/toolkit\";\r\n\r\nexport function createUser(userData) {\r\n  return new Promise(async (resolve) => {\r\n    const response = await fetch(\"http://localhost:8000/auth/signup\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(userData),\r\n    });\r\n    const data = await response.json();\r\n    resolve({ data });\r\n  });\r\n}\r\n\r\nexport function checkUser(loginInfo) {\r\n  return new Promise(async (resolve, reject) => {\r\n    const email = loginInfo.email;\r\n    const password = loginInfo.password;\r\n    // try {\r\n      const response = await fetch(\"http://localhost:8000/auth/login\");\r\n    //   if (response.ok) {\r\n    //     const data = await response.json();\r\n    //     resolve({ data });\r\n    //   } else {\r\n    //     const error = await response.json();\r\n    //     reject(error);\r\n    //   }\r\n    // } catch (error) {\r\n    //   reject(error);\r\n    // }\r\n    const data = await response.json();\r\n    console.log({data});\r\n    if(data.length){\r\n      if(password===data[0].password){\r\n        resolve({data:data[0]})\r\n      }else{\r\n        reject({message:'User not found'})\r\n      }\r\n    }else{\r\n      reject({message:'User not found'})\r\n    }\r\n  });\r\n}\r\n\r\nexport function signOut(userId) {\r\n  return new Promise(async (resolve) => {\r\n    resolve({ data: \"successfully signed out\" });\r\n  });\r\n}\r\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,kBAAkB;AAE7C,OAAO,SAASC,UAAUA,CAACC,QAAQ,EAAE;EACnC,OAAO,IAAIC,OAAO,CAAC,MAAOC,OAAO,IAAK;IACpC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,EAAE;MAChEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACT,QAAQ;IAC/B,CAAC,CAAC;IACF,MAAMU,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAClCT,OAAO,CAAC;MAAEQ;IAAK,CAAC,CAAC;EACnB,CAAC,CAAC;AACJ;AAEA,OAAO,SAASE,SAASA,CAACC,SAAS,EAAE;EACnC,OAAO,IAAIZ,OAAO,CAAC,OAAOC,OAAO,EAAEY,MAAM,KAAK;IAC5C,MAAMC,KAAK,GAAGF,SAAS,CAACE,KAAK;IAC7B,MAAMC,QAAQ,GAAGH,SAAS,CAACG,QAAQ;IACnC;IACE,MAAMb,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,CAAC;IAClE;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,MAAMM,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAClCM,OAAO,CAACC,GAAG,CAAC;MAACR;IAAI,CAAC,CAAC;IACnB,IAAGA,IAAI,CAACS,MAAM,EAAC;MACb,IAAGH,QAAQ,KAAGN,IAAI,CAAC,CAAC,CAAC,CAACM,QAAQ,EAAC;QAC7Bd,OAAO,CAAC;UAACQ,IAAI,EAACA,IAAI,CAAC,CAAC;QAAC,CAAC,CAAC;MACzB,CAAC,MAAI;QACHI,MAAM,CAAC;UAACM,OAAO,EAAC;QAAgB,CAAC,CAAC;MACpC;IACF,CAAC,MAAI;MACHN,MAAM,CAAC;QAACM,OAAO,EAAC;MAAgB,CAAC,CAAC;IACpC;EACF,CAAC,CAAC;AACJ;AAEA,OAAO,SAASC,OAAOA,CAACC,MAAM,EAAE;EAC9B,OAAO,IAAIrB,OAAO,CAAC,MAAOC,OAAO,IAAK;IACpCA,OAAO,CAAC;MAAEQ,IAAI,EAAE;IAA0B,CAAC,CAAC;EAC9C,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}