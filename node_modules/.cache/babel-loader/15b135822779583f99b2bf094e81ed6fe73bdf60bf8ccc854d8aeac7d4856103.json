{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { fetchAllProducts, fetchProductsByFilters, fetchBrands, fetchCategories, fetchProductById, productCreate, productUpdate } from './productAPI';\nconst initialState = {\n  products: [],\n  brands: [],\n  categories: [],\n  status: 'idle',\n  totalItems: 0,\n  selectedProduct: null\n};\nexport const fetchAllProductsAsync = createAsyncThunk('product/fetchAllProducts', async () => {\n  const response = await fetchAllProducts();\n  // The value we return becomes the `fulfilled` action payload\n  return response.data;\n});\nexport const fetchProductByIdAsync = createAsyncThunk('product/fetchProductById', async id => {\n  const response = await fetchProductById(id);\n  // The value we return becomes the `fulfilled` action payload\n  return response.data;\n});\nexport const fetchProductsByFiltersAsync = createAsyncThunk('product/fetchProductsByFilters', async ({\n  filter,\n  sort,\n  pagination\n}) => {\n  const response = await fetchProductsByFilters(filter, sort, pagination);\n  // The value we return becomes the `fulfilled` action payload\n  return response.data;\n});\nexport const fetchBrandsAsync = createAsyncThunk('product/fetchBrands', async () => {\n  const response = await fetchBrands();\n  // The value we return becomes the `fulfilled` action payload\n  return response.data;\n});\nexport const fetchCategoriesAsync = createAsyncThunk('product/fetchCategories', async () => {\n  const response = await fetchCategories();\n  // The value we return becomes the `fulfilled` action payload\n  return response.data;\n});\nexport const productCreateAsync = createAsyncThunk('product/productCreate', async product => {\n  const response = await productCreate(product);\n  // The value we return becomes the `fulfilled` action payload\n  return response.data;\n});\nexport const productUpdateAsync = createAsyncThunk('product/productUpdate', async update => {\n  const response = await productUpdate(update);\n  // The value we return becomes the `fulfilled` action payload\n  return response.data;\n});\nexport const productSlice = createSlice({\n  name: 'product',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    increment: state => {\n      state.value += 1;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchAllProductsAsync.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchAllProductsAsync.fulfilled, (state, action) => {\n      state.status = 'idle';\n      state.products = action.payload;\n    }).addCase(fetchProductsByFiltersAsync.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchProductsByFiltersAsync.fulfilled, (state, action) => {\n      state.status = 'idle';\n      state.products = action.payload.products;\n      state.totalItems = action.payload.totalItems;\n    }).addCase(fetchBrandsAsync.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchBrandsAsync.fulfilled, (state, action) => {\n      state.status = 'idle';\n      state.brands = action.payload;\n    }).addCase(fetchCategoriesAsync.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchCategoriesAsync.fulfilled, (state, action) => {\n      state.status = 'idle';\n      state.categories = action.payload;\n    }).addCase(fetchProductByIdAsync.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchProductByIdAsync.fulfilled, (state, action) => {\n      state.status = 'idle';\n      state.selectedProduct = action.payload;\n    }).addCase(productCreateAsync.pending, state => {\n      state.status = 'loading';\n    }).addCase(productCreateAsync.fulfilled, (state, action) => {\n      state.status = 'idle';\n      state.products.push(action.payload);\n    }).addCase(productUpdateAsync.pending, state => {\n      state.status = 'loading';\n    }).addCase(productUpdateAsync.fulfilled, (state, action) => {\n      state.status = 'idle';\n      const index = state.products.findIndex(item => item.id === action.payload.id);\n      state.items[index] = action.payload;\n    });\n  }\n});\nexport const {\n  increment\n} = productSlice.actions;\nexport const selectAllProducts = state => state.product.products;\nexport const selectBrands = state => state.product.brands;\nexport const selectCategories = state => state.product.categories;\nexport const selectProductById = state => state.product.selectedProduct;\nexport const selectTotalItems = state => state.product.totalItems;\nexport default productSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","fetchAllProducts","fetchProductsByFilters","fetchBrands","fetchCategories","fetchProductById","productCreate","productUpdate","initialState","products","brands","categories","status","totalItems","selectedProduct","fetchAllProductsAsync","response","data","fetchProductByIdAsync","id","fetchProductsByFiltersAsync","filter","sort","pagination","fetchBrandsAsync","fetchCategoriesAsync","productCreateAsync","product","productUpdateAsync","update","productSlice","name","reducers","increment","state","value","extraReducers","builder","addCase","pending","fulfilled","action","payload","push","index","findIndex","item","items","actions","selectAllProducts","selectBrands","selectCategories","selectProductById","selectTotalItems","reducer"],"sources":["D:/Humber 2023/Semester 3/Capstone Project/urban_clothing_v1.0/src/features/product-list/productSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport { fetchAllProducts, fetchProductsByFilters,fetchBrands, fetchCategories, fetchProductById, productCreate, productUpdate } from './productAPI';\r\n\r\nconst initialState = {\r\n  products: [],\r\n  brands: [],\r\n  categories: [],\r\n  status: 'idle',\r\n  totalItems:0,\r\n  selectedProduct:null\r\n};\r\n\r\n\r\nexport const fetchAllProductsAsync = createAsyncThunk(\r\n  'product/fetchAllProducts',\r\n  async () => {\r\n    const response = await fetchAllProducts();\r\n    // The value we return becomes the `fulfilled` action payload\r\n    return response.data;\r\n  }\r\n);\r\n\r\nexport const fetchProductByIdAsync = createAsyncThunk(\r\n  'product/fetchProductById',\r\n  async (id) => {\r\n    const response = await fetchProductById(id);\r\n    // The value we return becomes the `fulfilled` action payload\r\n    return response.data;\r\n  }\r\n);\r\n\r\nexport const fetchProductsByFiltersAsync = createAsyncThunk(\r\n  'product/fetchProductsByFilters',\r\n  async ({filter,sort,pagination}) => {\r\n    const response = await fetchProductsByFilters(filter,sort,pagination);\r\n    // The value we return becomes the `fulfilled` action payload\r\n    return response.data;\r\n  }\r\n);\r\n\r\nexport const fetchBrandsAsync = createAsyncThunk(\r\n  'product/fetchBrands',\r\n  async () => {\r\n    const response = await fetchBrands();\r\n    // The value we return becomes the `fulfilled` action payload\r\n    return response.data;\r\n  }\r\n);\r\n\r\nexport const fetchCategoriesAsync = createAsyncThunk(\r\n  'product/fetchCategories',\r\n  async () => {\r\n    const response = await fetchCategories();\r\n    // The value we return becomes the `fulfilled` action payload\r\n    return response.data;\r\n  }\r\n);\r\n\r\nexport const productCreateAsync = createAsyncThunk(\r\n  'product/productCreate',\r\n  async (product) => {\r\n    const response = await productCreate(product);\r\n    // The value we return becomes the `fulfilled` action payload\r\n    return response.data;\r\n  }\r\n);\r\n\r\nexport const productUpdateAsync = createAsyncThunk(\r\n  'product/productUpdate',\r\n  async (update) => {\r\n    const response = await productUpdate(update);\r\n    // The value we return becomes the `fulfilled` action payload\r\n    return response.data;\r\n  }\r\n);\r\n\r\nexport const productSlice = createSlice({\r\n  name: 'product',\r\n  initialState,\r\n  // The `reducers` field lets us define reducers and generate associated actions\r\n  reducers: {\r\n    increment: (state) => {\r\n      state.value += 1;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchAllProductsAsync.pending, (state) => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(fetchAllProductsAsync.fulfilled, (state, action) => {\r\n        state.status = 'idle';\r\n        state.products = action.payload;\r\n      })\r\n      .addCase(fetchProductsByFiltersAsync.pending, (state) => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(fetchProductsByFiltersAsync.fulfilled, (state, action) => {\r\n        state.status = 'idle';\r\n        state.products = action.payload.products;\r\n        state.totalItems = action.payload.totalItems;\r\n      })\r\n      .addCase(fetchBrandsAsync.pending, (state) => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(fetchBrandsAsync.fulfilled, (state, action) => {\r\n        state.status = 'idle';\r\n        state.brands = action.payload;\r\n      })\r\n      .addCase(fetchCategoriesAsync.pending, (state) => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(fetchCategoriesAsync.fulfilled, (state, action) => {\r\n        state.status = 'idle';\r\n        state.categories = action.payload;\r\n      })\r\n      .addCase(fetchProductByIdAsync.pending, (state) => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(fetchProductByIdAsync.fulfilled, (state, action) => {\r\n        state.status = 'idle';\r\n        state.selectedProduct = action.payload;\r\n      })\r\n      .addCase(productCreateAsync.pending, (state) => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(productCreateAsync.fulfilled, (state, action) => {\r\n        state.status = 'idle';\r\n        state.products.push(action.payload);\r\n      })\r\n      .addCase(productUpdateAsync.pending, (state) => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(productUpdateAsync.fulfilled, (state, action) => {\r\n        state.status = 'idle';\r\n        const index = state.products.findIndex((item) => item.id === action.payload.id);\r\n        state.items[index] = action.payload;\r\n      })\r\n  },\r\n});\r\n\r\nexport const { increment } = productSlice.actions;\r\nexport const selectAllProducts = (state) => state.product.products;\r\nexport const selectBrands = (state) => state.product.brands;\r\nexport const selectCategories = (state) => state.product.categories;\r\nexport const selectProductById = (state) => state.product.selectedProduct;\r\nexport const selectTotalItems = (state) => state.product.totalItems;\r\n\r\nexport default productSlice.reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}